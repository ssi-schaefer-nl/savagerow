[{"C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\index.js":"1","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Main.js":"2","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Layout\\RoutedComponent.js":"3","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Views\\Contact.js":"4","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Views\\Home.js":"5","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Views\\ConfigureSavageRow.js":"6","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Service\\ConfigureService.js":"7","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\CollapsableAlert\\CollapsableAlert.js":"8","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\DatabaseSelect\\DatabaseSelect.js":"9","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\Table\\Table.js":"10","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Service\\HttpHelper.js":"11","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\NotificationArea\\NotificationArea.js":"12","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Views\\Tables.js":"13","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Layout\\AppLayout.js":"14","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\MultiSelect\\MultiSelect.js":"15","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\Table\\DataGrid\\DataGridTable.js":"16","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\Table\\DataGridControlBar\\DataGridControlBar.js":"17","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\DefineColumnDialog\\DefineColumnDialog.js":"18","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\Table\\AddColumn\\AddColumn.js":"19","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Service\\ManipulationService\\ManipulationService.js":"20","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Service\\QueryService\\QueryService.js":"21","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Service\\DefinitionService\\DefinitionService.js":"22","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\Table\\DataGrid\\SelectEditor.js":"23"},{"size":156,"mtime":1617185938906,"results":"24","hashOfConfig":"25"},{"size":288,"mtime":1620041091153,"results":"26","hashOfConfig":"25"},{"size":687,"mtime":1620041002722,"results":"27","hashOfConfig":"25"},{"size":240,"mtime":1620135655964,"results":"28","hashOfConfig":"25"},{"size":1703,"mtime":1620642350717,"results":"29","hashOfConfig":"25"},{"size":638,"mtime":1620642350716,"results":"30","hashOfConfig":"25"},{"size":798,"mtime":1620642350705,"results":"31","hashOfConfig":"25"},{"size":836,"mtime":1620041637538,"results":"32","hashOfConfig":"25"},{"size":2777,"mtime":1620642350679,"results":"33","hashOfConfig":"25"},{"size":5737,"mtime":1620642350699,"results":"34","hashOfConfig":"25"},{"size":661,"mtime":1618842072954,"results":"35","hashOfConfig":"25"},{"size":657,"mtime":1620041677594,"results":"36","hashOfConfig":"25"},{"size":3621,"mtime":1620642350719,"results":"37","hashOfConfig":"25"},{"size":5719,"mtime":1620642566008,"results":"38","hashOfConfig":"25"},{"size":4066,"mtime":1620642350684,"results":"39","hashOfConfig":"25"},{"size":11568,"mtime":1620804724727,"results":"40","hashOfConfig":"25"},{"size":1113,"mtime":1620642350696,"results":"41","hashOfConfig":"25"},{"size":5255,"mtime":1620642350682,"results":"42","hashOfConfig":"25"},{"size":934,"mtime":1620642350687,"results":"43","hashOfConfig":"25"},{"size":1687,"mtime":1620642350710,"results":"44","hashOfConfig":"25"},{"size":870,"mtime":1620642350712,"results":"45","hashOfConfig":"25"},{"size":973,"mtime":1620642350707,"results":"46","hashOfConfig":"25"},{"size":677,"mtime":1620803038631,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1l44rj7",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\index.js",[],["105","106"],"C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Main.js",[],"C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Layout\\RoutedComponent.js",[],"C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Views\\Contact.js",[],"C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Views\\Home.js",["107"],"import { Card } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{margin: \"1em\"}}>\r\n        <h2>Home</h2>\r\n        <CenteredGrid />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction CenteredGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            Cool stuff will come here\r\n            </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>Cool stuff coming in here too</Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>More cool stuff</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Cool stuff will arrive soon</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Stand by for cool stuff</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Are you cool? The stuff coming here will be.</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Cool.</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Views\\ConfigureSavageRow.js",["108","109"],"import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CircularProgress, Divider } from \"@material-ui/core\";\r\nimport DatabaseSelect from \"../Components/DatabaseSelect/DatabaseSelect\";\r\nimport ConfigureService from \"../Service/ConfigureService\";\r\n\r\n\r\n\r\nexport default function Configure(props) {\r\n\r\n    return (\r\n        <div style={{margin: '1em'}}>\r\n            <Typography variant=\"h6\" noWrap>Configure Database</Typography>\r\n            <Divider style={{ marginBottom: \"2em\" }} />\r\n            <DatabaseSelect initialValue={localStorage.getItem(\"database\")} />\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Service\\ConfigureService.js",[],"C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\CollapsableAlert\\CollapsableAlert.js",["110"],"import React, { Component } from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default function CollapsableAlert(props) {\r\n    return <Collapse in={props.shouldShow ?  props.shouldShow : true} style={{ marginBottom: \"0.5em\" }}>\r\n    <Alert\r\n        severity={ props.severity}\r\n        action={ props.onClose ?\r\n            <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={ props.onClose}\r\n            >\r\n                <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n            : undefined}\r\n    >\r\n        { props.message}\r\n    </Alert>\r\n</Collapse>;\r\n}\r\n","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\DatabaseSelect\\DatabaseSelect.js",["111","112","113","114","115","116","117","118"],"import React, { Component, useEffect, useState } from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { CircularProgress, Divider } from \"@material-ui/core\";\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport CollapsableAlert from \"../CollapsableAlert/CollapsableAlert\";\r\nimport DatabaseService from \"../../Service/ConfigureService\";\r\n\r\n\r\nexport default function DatabaseSelect(props) {\r\n    const configureService = new DatabaseService()\r\n    const onSelect = props.onSelect\r\n    const [databases, setDatabases] = useState([])\r\n    const [database, setDatabase] = useState(undefined)\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [loadingAvailableDatabases, setLoadingAvailableDatabases] = useState(true)\r\n    const [initialValue, setInitialValue] = useState(null)\r\n    const [loadingError, setLoadingError] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setInitialValue(props.initialValue)\r\n\r\n        configureService.listAllDatabases(\r\n            function (data) {\r\n                setDatabases(data.data)\r\n                setLoadingAvailableDatabases(false)\r\n            },\r\n            function (data) {\r\n                setLoadingAvailableDatabases(false)\r\n                setLoadingError(true)\r\n            });\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        var db = e.target.value\r\n        configureService.changeDatabases(\r\n            db,\r\n            () => {\r\n                localStorage.setItem('database', db);\r\n                setDatabase(db)\r\n                if (onSelect) onSelect()\r\n            },\r\n            undefined\r\n        );\r\n    }\r\n\r\n    if (loadingAvailableDatabases) {\r\n        return (<CircularProgress />)\r\n    } else if (loadingError) {\r\n        return (<CollapsableAlert severity=\"warning\" message=\"Unable to fetch available databases. Check database connection.\" />)\r\n    }\r\n\r\n    var val = database ? database : initialValue ? initialValue : \"\"\r\n    return (\r\n\r\n        <FormControl style={{ margin: 1, minWidth: 120 }}>\r\n            <InputLabel htmlFor=\"demo-customized-select-native\">Database</InputLabel>\r\n            <NativeSelect\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={val}\r\n                onChange={handleChange}\r\n            >\r\n                <option aria-label=\"None\" value=\"\" />\r\n\r\n                {databases.map(d => (\r\n                    <option value={d}>{d}</option>\r\n                ))}\r\n\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n\r\n}\r\n","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\Table\\Table.js",["119","120","121","122","123","124","125","126","127","128","129","130"],"import React, { Component, useEffect, useState } from 'react';\r\nimport DataGridTable from './DataGrid/DataGridTable';\r\nimport NotificationArea from '../NotificationArea/NotificationArea';\r\nimport DataGridControlBar from './DataGridControlBar/DataGridControlBar';\r\nimport AddColumn from './AddColumn/AddColumn';\r\nimport QueryService from '../../Service/QueryService/QueryService';\r\nimport DefinitionService from '../../Service/DefinitionService/DefinitionService';\r\nimport ManipulationService from '../../Service/ManipulationService/ManipulationService';\r\nimport { Box, CircularProgress, Grid } from '@material-ui/core';\r\nconst SavageTable = (props) => {\r\n\r\n  const queryService = new QueryService(props.table)\r\n  const definitionService = new DefinitionService(props.table)\r\n  const manipulationService = new ManipulationService(props.table)\r\n  const [rows, setRows] = useState([])\r\n  const [columnFilter, setColumnFilter] = useState([])\r\n  const [columns, setColumns] = useState([])\r\n  const [notifications, setNotifications] = useState([])\r\n  const [insertedRows, setInsertedRows] = useState([])\r\n  const [errorRows, setErrorRows] = useState([])\r\n  const [addColumnDialogOpen, setAddColumnDialogOpen] = useState(false)\r\n\r\n\r\n  const addNotification = (content, severity) => {\r\n    const notification = { content: content, severity: severity }\r\n    setNotifications(notifications => [...notifications, notification])\r\n  }\r\n\r\n  const removeErrorsForRow = id => {\r\n    setErrorRows(er => er.filter(r => r.id != id))\r\n  }\r\n\r\n  const addErrorRow = (id, message) => {\r\n    const error = { id: id, message: message }\r\n    removeErrorsForRow(id)\r\n    setErrorRows(er => [...er, error])\r\n  }\r\n\r\n  const loadTableRows = () => {\r\n    setInsertedRows([])\r\n    setErrorRows([])    \r\n    setNotifications([])\r\n    queryService.getRowSet(data => setRows(data.data.rows), () => addNotification(\"Unable to fetch table rows for database: \" + localStorage.getItem(\"database\"), \"error\"))\r\n  }\r\n\r\n  const reloadSchema = () => {\r\n    queryService.getSchema(data => { setColumns(data.data.columns) }, () => addNotification(\"Unable to fetch table schema\", \"error\"))\r\n    queryService.getRowSet(data => { \r\n      if(insertedRows.length > 0) insertedRows.forEach(i => setRows(manipulationService.addRow(data.data.rows, i))) \r\n      else setRows(data.data.rows)\r\n    }, () => addNotification(\"Unable to fetch table rows for database: \" + localStorage.getItem(\"database\"), \"error\"))\r\n\r\n  }\r\n\r\n  const insertAction = (rId) => {\r\n    rId = rId + 1\r\n\r\n    setInsertedRows(irs => [...irs.map(ir => ir >= rId ? ir + 1 : ir), rId])\r\n    setRows(manipulationService.addRow(rows, rId))\r\n    setErrorRows([])\r\n  }\r\n\r\n  const deleteAction = (rId) => {\r\n    manipulationService.delete(rows, rId, (resultingRows) => {\r\n      setInsertedRows(irs => irs.filter(r => r != rId).map(ir => ir > rId ? ir - 1 : ir))\r\n      setRows(resultingRows)\r\n      setErrorRows([])\r\n    }, (e) => addErrorRow(rId, e))\r\n  }\r\n\r\n  const saveAction = (rId) => {\r\n    if (insertedRows.indexOf(rId) == -1) return\r\n\r\n    manipulationService.save(rows, rId, (resultingRows) => {\r\n      setRows(resultingRows)\r\n      setInsertedRows(irs => irs.filter(r => r != rId))\r\n      removeErrorsForRow(rId)\r\n    }, (e) => addErrorRow(rId, \" Error saving the row: \" + e))\r\n  }\r\n\r\n  const handleRowChange = (newRow, index) => {\r\n    if (insertedRows.indexOf(index) == -1)\r\n      manipulationService.update(rows, newRow, index, (rows) => {\r\n        setRows(rows)\r\n        removeErrorsForRow(index)\r\n      }, (e) => {\r\n        addErrorRow(index, \" Error updating row: \" + e)\r\n        console.log(e)\r\n      })\r\n    else\r\n      setRows(manipulationService.updateLocal(rows, newRow, index))\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTableRows()\r\n    queryService.getSchema(data => setColumns(data.data.columns), () => addNotification(\"Unable to fetch table schema\", \"error\"))\r\n  }, [])\r\n\r\n\r\n  var highlightedRows = []\r\n\r\n  if (errorRows.length > 0) highlightedRows = highlightedRows.concat(errorRows.slice(0).reverse().map(er => { return { id: er.id, message: er.message, type: \"error\" } }))\r\n  if (insertedRows.length > 0) highlightedRows = highlightedRows.concat(insertedRows.map(i => { return { id: i, message: \"This row is not saved\", type: \"warning\" } }))\r\n\r\n\r\n  if (columns.length == 0) {\r\n    return (\r\n      <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\" style={{ minHeight: '100vh' }}>\r\n        <Grid item xs={3}>\r\n          <CircularProgress />\r\n        </Grid>\r\n\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DataGridTable\r\n\r\n        rows={rows}\r\n        columns={columnFilter.length > 0 ? columns.filter(c => columnFilter.includes(c.column)) : columns}\r\n        highlightRows={highlightedRows}\r\n        onRowChange={handleRowChange}\r\n        onDelete={deleteAction}\r\n        onInsert={(idx) => insertAction(idx, true)}\r\n        onSave={saveAction}\r\n        onRefresh={loadTableRows}\r\n        onColumnDelete={(col) => definitionService.dropColumn(col, () => setColumns(columns => columns.filter(c => c.column != col)), (e) => addNotification(e.message, \"error\"))}\r\n        onColumnRename={(old, newName) => definitionService.renameColumn(old, newName, () => reloadSchema(), (e) => addNotification(e.message, \"error\"))}\r\n        onColumnInsert={() => setAddColumnDialogOpen(true)}\r\n      />\r\n      <NotificationArea\r\n        notifications={notifications}\r\n        handleClose={(index) => setNotifications(curr => curr.filter((notifications, i) => i !== index))}\r\n      />\r\n      <AddColumn open={addColumnDialogOpen} table={props.table} handleClose={() => setAddColumnDialogOpen(false)} onSuccess={reloadSchema} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SavageTable","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Service\\HttpHelper.js",[],"C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\NotificationArea\\NotificationArea.js",["131","132","133","134"],"import React, { Component, useEffect, useState } from 'react';\r\nimport CollapsableAlert from '../CollapsableAlert/CollapsableAlert'\r\n\r\nconst NotificationArea = (props) => {\r\n    const notifications = props.notifications\r\n    if (notifications.length == 0) {\r\n      return null\r\n    }\r\n  \r\n    const notificationAlerts = notifications.map(notification =>\r\n      (<CollapsableAlert severity={notification.severity} message={notification.content} onClose={() => props.handleClose(notifications.indexOf(notification))} />)\r\n    )\r\n  \r\n  \r\n  \r\n    return (\r\n      <div>\r\n        {notificationAlerts}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default NotificationArea","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Views\\Tables.js",["135","136"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport SavageTable from \"../Components/Table/Table\";\r\nimport { Button, Toolbar } from \"@material-ui/core\";\r\nimport CollapsableAlert from \"../Components/CollapsableAlert/CollapsableAlert\";\r\nimport DatabaseSelect from \"../Components/DatabaseSelect/DatabaseSelect\";\r\nimport QueryService from \"../Service/QueryService/QueryService\";\r\n\r\nconst Tables = (props) => {\r\n  const classes = useStyles();\r\n  const database = localStorage.getItem(\"database\")\r\n  const [tables, setTables] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    new QueryService().getTables(\r\n      (data) => {\r\n        setTables(data.data)\r\n        setLoading(false)\r\n      },\r\n      () => {\r\n        setLoading(true)\r\n        setError(true)\r\n      })\r\n  }, [])\r\n\r\n\r\n\r\n  if (loading) {\r\n    return (<></>)\r\n  }\r\n\r\n  if (database == null) return (\r\n    <div>\r\n      <Typography style={{ marginBottom: \"2em\" }}>No database is selected. Please select a database</Typography>\r\n      <DatabaseSelect onSelect={() => window.location.reload(false)} />\r\n    </div>\r\n  )\r\n  if (error) {\r\n    return (<CollapsableAlert severity=\"error\" message={\"Error while retrieving tables for database: \" + database} />)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <AppBar position=\"static\" color=\"default\" style={{ padding: \"0.5em\", borderBottom: \"1px solid grey\" }}>\r\n        <Toolbar >\r\n          <Typography variant=\"h6\" color=\"primary\" style={{ marginRight: \"1em\", fontWeight: \"bold\" }}>\r\n            {database}\r\n          </Typography>\r\n          <Tabs\r\n            selectionFollowsFocus\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"secundary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            aria-label=\"scrollable auto tabs example\"\r\n          >\r\n            {tables.map((table, index) => (\r\n              <Tab label={table} {...a11yProps(index)} />\r\n            ))}\r\n\r\n          </Tabs>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {tables.map((table, index) => (\r\n        <TabPanel value={value} index={index}  >\r\n          <SavageTable table={table} />\r\n        </TabPanel>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n\r\n  },\r\n}));\r\n\r\nexport default Tables;","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Layout\\AppLayout.js",["137","138","139","140","141"],"import React, { Component } from \"react\";\r\nimport clsx from 'clsx';\r\nimport { makeStyles, rgbToHex, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport RoutedComponent from \"./RoutedComponent\";\r\nimport { grey, red } from \"@material-ui/core/colors\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    backgroundColor: grey[200],\r\n\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    borderRight: \"1px solid grey\"\r\n  },\r\n\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n    backgroundColor: grey[100],\r\n    borderRight: \"1px solid grey\"\r\n\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: theme.spacing(0, 1, 0, 3),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    width: \"80%\",\r\n    height: \"100vh\",\r\n    padding: theme.spacing(0),\r\n    backgroundColor: '#FFFFFF'\r\n  },\r\n}));\r\n\r\nexport default function AppLayout() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            SavageRow\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <Typography variant=\"h6\" noWrap >\r\n            Menu\r\n          </Typography>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListElement link=\"/\" text=\"Home\" icon={HomeIcon} />\r\n          <ListElement link=\"/tables\" text=\"Tables\" icon={StorageIcon} />\r\n          <ListElement link=\"/configuration\" text=\"Configuration\" icon={SettingsIcon} />\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <ListElement link=\"/contact\" text=\"Contact\" icon={InfoIcon} />\r\n        </List>\r\n      </Drawer>\r\n\r\n      <main className={classes.content} >\r\n\r\n        <div className={classes.toolbar} />\r\n        <RoutedComponent />\r\n\r\n      </main>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ListElement = (props) => {\r\n  const TheIcon = props.icon;\r\n\r\n  return (\r\n    <ListItem component={Link} to={props.link} button key={props.text}>\r\n      <ListItemIcon><TheIcon /></ListItemIcon>\r\n      <ListItemText primary={props.text} />\r\n    </ListItem>\r\n  )\r\n}","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\MultiSelect\\MultiSelect.js",["142","143","144","145","146","147"],"import React from \"react\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Button, Container, Grid, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(0.5),\r\n        width: \"100%\",\r\n        // maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n\r\n    button: {\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\"\r\n        }\r\n    }\r\n\r\n}));\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.white,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 12,\r\n    },\r\n}))(Tooltip);\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    anchorOrigin: {\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\"\r\n    },\r\n    transformOrigin: {\r\n        vertical: \"top\",\r\n        horizontal: \"left\"\r\n    },\r\n    getContentAnchorEl: null,\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 10 + ITEM_PADDING_TOP,\r\n            width: 200,\r\n        },\r\n\r\n    }\r\n};\r\n\r\n\r\nconst MultiSelect = (props) => {\r\n    const classes = useStyles();\r\n    const { placeholder, onChange, options } = props;\r\n    const [selection, setSelection] = React.useState([]);\r\n\r\n    const onChangeSelection = (event) => {\r\n        setSelection(event.target.value)\r\n        onChange(event.target.value)\r\n    }\r\n\r\n    const clear = () => {\r\n        setSelection([])\r\n        onChange([])\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"row\" alignItems=\"center\" justify=\"left\" wrap=\"nowrap\">\r\n\r\n            <Grid item xs={9}>\r\n\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-mutiple-checkbox-label\">{placeholder}</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-mutiple-checkbox-label\"\r\n                        id=\"demo-mutiple-checkbox\"\r\n                        multiple\r\n                        value={selection}\r\n                        onChange={onChangeSelection}\r\n                        input={<Input />}\r\n                        renderValue={(selected) => selected.join(', ')}\r\n                        MenuProps={MenuProps}\r\n                    >\r\n                        <MenuItem disabled value=\"\">\r\n                            <em>{placeholder}</em>\r\n                        </MenuItem>\r\n                        {options.map((o) => (\r\n                            <MenuItem key={o} value={o}>\r\n                                <Checkbox checked={selection.indexOf(o) > -1} />\r\n                                <ListItemText primary={o} />\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n            </Grid>\r\n\r\n            <Grid item hidden={selection.length == 0}>\r\n                <Button\r\n                    size=\"small\"\r\n                    aria-label=\"delete\"\r\n                    onClick={clear}\r\n                    style={{ marginLeft: \"0.5em\", marginTop: \"1.4em\" }}\r\n                    disableFocusRipple={true}\r\n                    disableRipple\r\n                >\r\n                    <HighlightOffIcon />\r\n                </Button>\r\n            </Grid>\r\n\r\n\r\n\r\n        </Grid >)\r\n}\r\n\r\nexport default MultiSelect","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\Table\\DataGrid\\DataGridTable.js",["148","149","150","151","152","153","154","155","156"],"C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\Table\\DataGridControlBar\\DataGridControlBar.js",["157","158","159","160","161"],"import React from 'react';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport MultiSelect from \"../../MultiSelect/MultiSelect\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nconst DataGridControlBar = (props) => {\r\n  const { columns, onChangeColumnFilter } = props\r\n\r\n  return (\r\n    <Box style={{ padding: \"0.5em 1em 2em 1em\", borderBottom: \"1px solid grey\", backgroundColor: grey[50] }}>\r\n\r\n      <Grid container direction=\"row\">\r\n        <Grid container >\r\n          <Grid item xs={2} >\r\n            <MultiSelect\r\n              options={columns.map(col => col.column)}\r\n              onChange={onChangeColumnFilter}\r\n              placeholder=\"Column Filters\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default DataGridControlBar","C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\DefineColumnDialog\\DefineColumnDialog.js",[],"C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\Table\\AddColumn\\AddColumn.js",[],"C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Service\\ManipulationService\\ManipulationService.js",[],"C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Service\\QueryService\\QueryService.js",[],"C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Service\\DefinitionService\\DefinitionService.js",[],"C:\\Users\\vincent\\git\\savagerow\\front-end\\src\\Components\\Table\\DataGrid\\SelectEditor.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":1,"column":10,"nodeType":"168","messageId":"169","endLine":1,"endColumn":14},{"ruleId":"166","severity":1,"message":"170","line":4,"column":10,"nodeType":"168","messageId":"169","endLine":4,"endColumn":26},{"ruleId":"166","severity":1,"message":"171","line":6,"column":8,"nodeType":"168","messageId":"169","endLine":6,"endColumn":24},{"ruleId":"166","severity":1,"message":"172","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"172","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"173","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":18},{"ruleId":"166","severity":1,"message":"174","line":5,"column":8,"nodeType":"168","messageId":"169","endLine":5,"endColumn":16},{"ruleId":"166","severity":1,"message":"175","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":14},{"ruleId":"166","severity":1,"message":"176","line":8,"column":28,"nodeType":"168","messageId":"169","endLine":8,"endColumn":35},{"ruleId":"166","severity":1,"message":"177","line":19,"column":12,"nodeType":"168","messageId":"169","endLine":19,"endColumn":20},{"ruleId":"166","severity":1,"message":"178","line":19,"column":22,"nodeType":"168","messageId":"169","endLine":19,"endColumn":33},{"ruleId":"179","severity":1,"message":"180","line":36,"column":8,"nodeType":"181","endLine":36,"endColumn":10,"suggestions":"182"},{"ruleId":"166","severity":1,"message":"172","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"183","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":26},{"ruleId":"166","severity":1,"message":"184","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":13},{"ruleId":"166","severity":1,"message":"185","line":16,"column":24,"nodeType":"168","messageId":"169","endLine":16,"endColumn":39},{"ruleId":"186","severity":1,"message":"187","line":30,"column":44,"nodeType":"188","messageId":"189","endLine":30,"endColumn":46},{"ruleId":"186","severity":1,"message":"187","line":65,"column":48,"nodeType":"188","messageId":"189","endLine":65,"endColumn":50},{"ruleId":"186","severity":1,"message":"190","line":72,"column":35,"nodeType":"188","messageId":"189","endLine":72,"endColumn":37},{"ruleId":"186","severity":1,"message":"187","line":76,"column":48,"nodeType":"188","messageId":"189","endLine":76,"endColumn":50},{"ruleId":"186","severity":1,"message":"190","line":82,"column":37,"nodeType":"188","messageId":"189","endLine":82,"endColumn":39},{"ruleId":"179","severity":1,"message":"191","line":97,"column":6,"nodeType":"181","endLine":97,"endColumn":8,"suggestions":"192"},{"ruleId":"186","severity":1,"message":"190","line":106,"column":22,"nodeType":"188","messageId":"189","endLine":106,"endColumn":24},{"ruleId":"186","severity":1,"message":"187","line":129,"column":125,"nodeType":"188","messageId":"189","endLine":129,"endColumn":127},{"ruleId":"166","severity":1,"message":"172","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"193","line":1,"column":28,"nodeType":"168","messageId":"169","endLine":1,"endColumn":37},{"ruleId":"166","severity":1,"message":"194","line":1,"column":39,"nodeType":"168","messageId":"169","endLine":1,"endColumn":47},{"ruleId":"186","severity":1,"message":"190","line":6,"column":30,"nodeType":"188","messageId":"189","endLine":6,"endColumn":32},{"ruleId":"166","severity":1,"message":"172","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"195","line":10,"column":10,"nodeType":"168","messageId":"169","endLine":10,"endColumn":16},{"ruleId":"166","severity":1,"message":"172","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"196","line":3,"column":22,"nodeType":"168","messageId":"169","endLine":3,"endColumn":30},{"ruleId":"166","severity":1,"message":"197","line":19,"column":10,"nodeType":"168","messageId":"169","endLine":19,"endColumn":24},{"ruleId":"166","severity":1,"message":"198","line":19,"column":26,"nodeType":"168","messageId":"169","endLine":19,"endColumn":39},{"ruleId":"166","severity":1,"message":"199","line":30,"column":16,"nodeType":"168","messageId":"169","endLine":30,"endColumn":19},{"ruleId":"166","severity":1,"message":"200","line":10,"column":18,"nodeType":"168","messageId":"169","endLine":10,"endColumn":27},{"ruleId":"166","severity":1,"message":"201","line":10,"column":35,"nodeType":"168","messageId":"169","endLine":10,"endColumn":45},{"ruleId":"166","severity":1,"message":"202","line":11,"column":8,"nodeType":"168","messageId":"169","endLine":11,"endColumn":18},{"ruleId":"166","severity":1,"message":"203","line":13,"column":10,"nodeType":"168","messageId":"169","endLine":13,"endColumn":14},{"ruleId":"166","severity":1,"message":"204","line":40,"column":7,"nodeType":"168","messageId":"169","endLine":40,"endColumn":19},{"ruleId":"186","severity":1,"message":"190","line":118,"column":49,"nodeType":"188","messageId":"189","endLine":118,"endColumn":51},{"ruleId":"166","severity":1,"message":"205","line":3,"column":22,"nodeType":"168","messageId":"169","endLine":3,"endColumn":32},{"ruleId":"166","severity":1,"message":"206","line":4,"column":33,"nodeType":"168","messageId":"169","endLine":4,"endColumn":40},{"ruleId":"166","severity":1,"message":"207","line":9,"column":8,"nodeType":"168","messageId":"169","endLine":9,"endColumn":17},{"ruleId":"166","severity":1,"message":"173","line":18,"column":16,"nodeType":"168","messageId":"169","endLine":18,"endColumn":26},{"ruleId":"166","severity":1,"message":"208","line":21,"column":8,"nodeType":"168","messageId":"169","endLine":21,"endColumn":22},{"ruleId":"166","severity":1,"message":"209","line":25,"column":18,"nodeType":"168","messageId":"169","endLine":25,"endColumn":24},{"ruleId":"186","severity":1,"message":"190","line":80,"column":63,"nodeType":"188","messageId":"189","endLine":80,"endColumn":65},{"ruleId":"186","severity":1,"message":"187","line":81,"column":28,"nodeType":"188","messageId":"189","endLine":81,"endColumn":30},{"ruleId":"186","severity":1,"message":"190","line":93,"column":33,"nodeType":"188","messageId":"189","endLine":93,"endColumn":35},{"ruleId":"166","severity":1,"message":"210","line":6,"column":8,"nodeType":"168","messageId":"169","endLine":6,"endColumn":17},{"ruleId":"166","severity":1,"message":"211","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":24},{"ruleId":"166","severity":1,"message":"212","line":8,"column":8,"nodeType":"168","messageId":"169","endLine":8,"endColumn":24},{"ruleId":"166","severity":1,"message":"173","line":9,"column":8,"nodeType":"168","messageId":"169","endLine":9,"endColumn":18},{"ruleId":"166","severity":1,"message":"213","line":10,"column":8,"nodeType":"168","messageId":"169","endLine":10,"endColumn":22},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'CircularProgress' is defined but never used.","'ConfigureService' is defined but never used.","'Component' is defined but never used.","'Typography' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'Divider' is defined but never used.","'anchorEl' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'configureService' and 'props.initialValue'. Either include them or remove the dependency array. If 'setInitialValue' needs the current value of 'props.initialValue', you can also switch to useReducer instead of useState and read 'props.initialValue' in the reducer.","ArrayExpression",["216"],"'DataGridControlBar' is defined but never used.","'Box' is defined but never used.","'setColumnFilter' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'loadTableRows' and 'queryService'. Either include them or remove the dependency array.",["217"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'rgbToHex' is defined but never used.","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'red' is defined but never used.","'Container' is defined but never used.","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.","'grey' is defined but never used.","'LightTooltip' is assigned a value but never used.","'makeStyles' is defined but never used.","'SubMenu' is defined but never used.","'TextField' is defined but never used.","'TextFormatIcon' is defined but never used.","'Filter' is defined but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [configureService, props.initialValue]",{"range":"222","text":"223"},"Update the dependencies array to be: [loadTableRows, queryService]",{"range":"224","text":"225"},[1507,1509],"[configureService, props.initialValue]",[3894,3896],"[loadTableRows, queryService]"]