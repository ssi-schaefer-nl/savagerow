{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\playground\\\\src\\\\Components\\\\DatabaseSelect\\\\DatabaseSelect.js\";\nimport React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { CircularProgress, Divider } from \"@material-ui/core\";\nimport CollapsableAlert from \"../CollapsableAlert/CollapsableAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DatabaseSelect extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      configureService: new ConfigureService(),\n      database: null,\n      databases: [],\n      anchorEl: null,\n      loadingCurrentDatabase: true,\n      loadingAvailableDatabases: true\n    };\n\n    this.loadDatabases = () => {\n      this.state.configureService.getCurrentDatabase(function (data) {\n        this.setState({\n          database: data.data\n        });\n        this.setState({\n          loadingCurrentDatabase: false\n        });\n      }.bind(this), function (data) {\n        console.log(data);\n        this.setState({\n          loadingCurrentDatabase: false\n        });\n      }.bind(this));\n      this.state.configureService.listAllDatabases(function (data) {\n        this.setState({\n          databases: data.data\n        });\n        this.setState({\n          loadingAvailableDatabases: false\n        });\n      }.bind(this), function (data) {\n        console.log(data);\n        this.setState({\n          loadingAvailableDatabases: false\n        });\n      }.bind(this));\n    };\n  }\n\n  componentDidMount() {\n    this.loadDatabases();\n  }\n\n  render() {\n    if (this.state.loadingCurrentDatabase || this.state.loadingAvailableDatabases) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Configure Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.database == null && /*#__PURE__*/_jsxDEV(CollapsableAlert, {\n        severity: \"warning\",\n        message: \"Unable to fetch current database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        style: {\n          margin: 1,\n          minWidth: 120\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          shrink: true,\n          id: \"demo-simple-select-label\",\n          children: \"Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          value: this.state.database,\n          onChange: this.handleChange,\n          children: this.state.databases.map(d => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: d,\n            children: d\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default DatabaseSelect;","map":{"version":3,"sources":["C:/Users/vincent/git/playground/src/Components/DatabaseSelect/DatabaseSelect.js"],"names":["React","Typography","InputLabel","MenuItem","FormControl","Select","CircularProgress","Divider","CollapsableAlert","DatabaseSelect","Component","state","configureService","ConfigureService","database","databases","anchorEl","loadingCurrentDatabase","loadingAvailableDatabases","loadDatabases","getCurrentDatabase","data","setState","bind","console","log","listAllDatabases","componentDidMount","render","margin","minWidth","handleChange","map","d"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { CircularProgress, Divider } from \"@material-ui/core\";\r\nimport CollapsableAlert from \"../CollapsableAlert/CollapsableAlert\";\r\n\r\n\r\nclass DatabaseSelect extends React.Component {\r\n    state = {\r\n        configureService: new ConfigureService(),\r\n        database: null,\r\n        databases: [],\r\n        anchorEl: null,\r\n        loadingCurrentDatabase: true,\r\n        loadingAvailableDatabases: true,\r\n    };\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.loadDatabases()\r\n    }\r\n\r\n    loadDatabases = () => {\r\n        this.state.configureService.getCurrentDatabase(\r\n            function (data) {\r\n                this.setState({ database: data.data })\r\n                this.setState({ loadingCurrentDatabase: false })\r\n            }.bind(this),\r\n            function (data) {\r\n                console.log(data)\r\n                this.setState({ loadingCurrentDatabase: false })\r\n            }.bind(this));\r\n\r\n        this.state.configureService.listAllDatabases(\r\n            function (data) {\r\n                this.setState({ databases: data.data })\r\n                this.setState({ loadingAvailableDatabases: false })\r\n            }.bind(this),\r\n            function (data) {\r\n                console.log(data)\r\n                this.setState({ loadingAvailableDatabases: false })\r\n            }.bind(this));\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loadingCurrentDatabase || this.state.loadingAvailableDatabases) {\r\n            return (\r\n                <>\r\n                    <Typography variant=\"h6\" noWrap>Configure Database</Typography>\r\n                    <CircularProgress />\r\n                </>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {this.state.database == null && <CollapsableAlert severity=\"warning\" message=\"Unable to fetch current database\" />}\r\n                <FormControl style={{ margin: 1, minWidth: 120 }}>\r\n                    <InputLabel shrink={true} id=\"demo-simple-select-label\">Database</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={this.state.database}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        {this.state.databases.map(d => (\r\n                            <MenuItem value={d}>{d}</MenuItem>\r\n                        ))}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DatabaseSelect"]},"metadata":{},"sourceType":"module"}