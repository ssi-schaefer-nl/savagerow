{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\playground\\\\src\\\\Components\\\\Tables\\\\SavageTable.js\";\nimport React from \"react\";\nimport ReactDataGrid from \"react-data-grid\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Example extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rows: this.props.rows,\n      columns: this.props.columns\n    };\n\n    this.onGridRowsUpdated = ({\n      fromRow,\n      toRow,\n      updated\n    }) => {\n      this.setState(state => {\n        const rows = state.rows.slice();\n\n        for (let i = fromRow; i <= toRow; i++) {\n          rows[i] = { ...rows[i],\n            ...updated\n          };\n        }\n\n        return {\n          rows\n        };\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.rows);\n    console.log(this.state.columns);\n    return /*#__PURE__*/_jsxDEV(ReactDataGrid, {\n      columns: this.state.columns,\n      rows: this.state.rows,\n      defaultColumnOptions: {\n        sortable: true,\n        resizable: true\n      },\n      rowGetter: i => this.state.rows[i],\n      rowsCount: 4,\n      onGridRowsUpdated: this.onGridRowsUpdated,\n      enableCellSelect: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Example;","map":{"version":3,"sources":["C:/Users/vincent/git/playground/src/Components/Tables/SavageTable.js"],"names":["React","ReactDataGrid","Example","Component","state","rows","props","columns","onGridRowsUpdated","fromRow","toRow","updated","setState","slice","i","render","console","log","sortable","resizable"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,cAAP;;;AAGA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACJC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADb;AAEJE,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC;AAFhB,KAD0B;;AAAA,SAMlCC,iBANkC,GAMd,CAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAAiC;AACjD,WAAKC,QAAL,CAAcR,KAAK,IAAI;AACnB,cAAMC,IAAI,GAAGD,KAAK,CAACC,IAAN,CAAWQ,KAAX,EAAb;;AACA,aAAK,IAAIC,CAAC,GAAGL,OAAb,EAAsBK,CAAC,IAAIJ,KAA3B,EAAkCI,CAAC,EAAnC,EAAuC;AACnCT,UAAAA,IAAI,CAACS,CAAD,CAAJ,GAAU,EAAE,GAAGT,IAAI,CAACS,CAAD,CAAT;AAAc,eAAGH;AAAjB,WAAV;AACH;;AACD,eAAO;AAAEN,UAAAA;AAAF,SAAP;AACH,OAND;AAOH,KAdiC;AAAA;;AAgBlCU,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,IAAvB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWG,OAAvB;AACA,wBACI,QAAC,aAAD;AACI,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,OADxB;AAEI,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,IAFrB;AAGI,MAAA,oBAAoB,EAAE;AAClBa,QAAAA,QAAQ,EAAE,IADQ;AAElBC,QAAAA,SAAS,EAAE;AAFO,OAH1B;AAOI,MAAA,SAAS,EAAEL,CAAC,IAAI,KAAKV,KAAL,CAAWC,IAAX,CAAgBS,CAAhB,CAPpB;AAQI,MAAA,SAAS,EAAE,CARf;AASI,MAAA,iBAAiB,EAAE,KAAKN,iBAT5B;AAUI,MAAA,gBAAgB,EAAE;AAVtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAjCiC;;AAoCtC,eAAeN,OAAf","sourcesContent":["import React from \"react\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport \"./styles.css\";\r\n\r\n\r\nclass Example extends React.Component {\r\n    state = { \r\n        rows: this.props.rows,\r\n        columns: this.props.columns\r\n     };\r\n\r\n    onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\r\n        this.setState(state => {\r\n            const rows = state.rows.slice();\r\n            for (let i = fromRow; i <= toRow; i++) {\r\n                rows[i] = { ...rows[i], ...updated };\r\n            }\r\n            return { rows };\r\n        });\r\n    };\r\n\r\n    render() {\r\n        console.log(this.state.rows);\r\n        console.log(this.state.columns);\r\n        return (\r\n            <ReactDataGrid\r\n                columns={this.state.columns}\r\n                rows={this.state.rows}\r\n                defaultColumnOptions={{\r\n                    sortable: true,\r\n                    resizable: true\r\n                  }}\r\n                rowGetter={i => this.state.rows[i]}\r\n                rowsCount={4}\r\n                onGridRowsUpdated={this.onGridRowsUpdated}\r\n                enableCellSelect={false}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Example;"]},"metadata":{},"sourceType":"module"}