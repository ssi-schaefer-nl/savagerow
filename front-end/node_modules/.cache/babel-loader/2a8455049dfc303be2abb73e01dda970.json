{"ast":null,"code":"import { __extends } from \"tslib\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar DropDownEditor =\n/** @class */\nfunction (_super) {\n  __extends(DropDownEditor, _super);\n\n  function DropDownEditor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.setSelectRef = function (select) {\n      _this.select = select;\n    };\n\n    return _this;\n  }\n\n  DropDownEditor.prototype.getInputNode = function () {\n    return this.select;\n  };\n\n  DropDownEditor.prototype.getValue = function () {\n    var _a;\n\n    return _a = {}, _a[this.props.column.key] = this.select.value, _a;\n  };\n\n  DropDownEditor.prototype.renderOptions = function () {\n    return this.props.options.map(function (name) {\n      if (typeof name === 'string') {\n        return React.createElement(\"option\", {\n          key: name,\n          value: name\n        }, name);\n      }\n\n      return React.createElement(\"option\", {\n        key: name.id,\n        value: name.value,\n        title: name.title\n      }, name.text || name.value);\n    });\n  };\n\n  DropDownEditor.prototype.render = function () {\n    return React.createElement(\"select\", {\n      ref: this.setSelectRef,\n      className: \"rdg-select-editor\",\n      defaultValue: this.props.value,\n      onBlur: this.props.onBlur\n    }, this.renderOptions());\n  };\n\n  DropDownEditor.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      value: PropTypes.string,\n      text: PropTypes.string\n    })])).isRequired\n  };\n  DropDownEditor.propTypes = {\n    value: PropTypes.any.isRequired,\n    onBlur: PropTypes.func.isRequired // column: PropTypes.shape(Column).isRequired\n\n  };\n  return DropDownEditor;\n}(React.Component);\n\nexport default DropDownEditor;","map":{"version":3,"sources":["../../src/editors/DropDownEditor.js"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,SAAP,MAAsB,YAAtB;;AAEA,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4C,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AAA5C,WAAA,cAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AA6BE,IAAA,KAAA,CAAA,YAAA,GAAe,UAAC,MAAD,EAAO;AACpB,MAAA,KAAI,CAAC,MAAL,GAAc,MAAd;AACD,KAFD;;;AAyCD;;AAnDC,EAAA,cAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACE,WAAO,KAAK,MAAZ;AACD,GAFD;;AAIA,EAAA,cAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;;;AACE,WAAA,EAAA,GAAA,EAAA,EACE,EAAA,CAAC,KAAK,KAAL,CAAW,MAAX,CAAkB,GAAnB,CAAA,GAAyB,KAAK,MAAL,CAAY,KADvC,EAEE,EAFF;AAGD,GAJD;;AAUA,EAAA,cAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACE,WAAO,KAAK,KAAL,CAAW,OAAX,CAAmB,GAAnB,CAAuB,UAAA,IAAA,EAAI;AAChC,UAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC5B,eACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,UAAA,GAAG,EAAE,IADP;AAEE,UAAA,KAAK,EAAE;AAFT,SAAA,EAIG,IAJH,CADF;AAQD;;AAED,aACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,QAAA,GAAG,EAAE,IAAI,CAAC,EADZ;AAEE,QAAA,KAAK,EAAE,IAAI,CAAC,KAFd;AAGE,QAAA,KAAK,EAAE,IAAI,CAAC;AAHd,OAAA,EAKG,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,KALrB,CADF;AASD,KArBM,CAAP;AAsBD,GAvBD;;AAyBA,EAAA,cAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,WACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,MAAA,GAAG,EAAE,KAAK,YADZ;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,YAAY,EAAE,KAAK,KAAL,CAAW,KAH3B;AAIE,MAAA,MAAM,EAAE,KAAK,KAAL,CAAW;AAJrB,KAAA,EAMG,KAAK,aAAL,EANH,CADF;AAUD,GAXD;;AAzDO,EAAA,cAAA,CAAA,SAAA,GAAY;AACjB,IAAA,OAAO,EAAE,SAAS,CAAC,OAAV,CAAkB,SAAS,CAAC,SAAV,CAAoB,CAC7C,SAAS,CAAC,MADmC,EAE7C,SAAS,CAAC,KAAV,CAAgB;AACd,MAAA,EAAE,EAAE,SAAS,CAAC,MADA;AAEd,MAAA,KAAK,EAAE,SAAS,CAAC,MAFH;AAGd,MAAA,KAAK,EAAE,SAAS,CAAC,MAHH;AAId,MAAA,IAAI,EAAE,SAAS,CAAC;AAJF,KAAhB,CAF6C,CAApB,CAAlB,EAQL;AATa,GAAZ;AAYA,EAAA,cAAA,CAAA,SAAA,GAAY;AACjB,IAAA,KAAK,EAAE,SAAS,CAAC,GAAV,CAAc,UADJ;AAEjB,IAAA,MAAM,EAAE,SAAS,CAAC,IAAV,CAAe,UAFN,CAGjB;;AAHiB,GAAZ;AAyDT,SAAA,cAAA;AAAC,CAtED,CAA4C,KAAK,CAAC,SAAlD,CAAA;;eAAqB,c","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class DropDownEditor extends React.Component {\n  static propTypes = {\n    options: PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        id: PropTypes.string,\n        title: PropTypes.string,\n        value: PropTypes.string,\n        text: PropTypes.string\n      })\n    ])).isRequired\n  };\n\n  static propTypes = {\n    value: PropTypes.any.isRequired,\n    onBlur: PropTypes.func.isRequired\n    // column: PropTypes.shape(Column).isRequired\n  };\n\n  getInputNode() {\n    return this.select;\n  }\n\n  getValue() {\n    return {\n      [this.props.column.key]: this.select.value\n    };\n  }\n\n  setSelectRef = (select) => {\n    this.select = select;\n  };\n\n  renderOptions() {\n    return this.props.options.map(name => {\n      if (typeof name === 'string') {\n        return (\n          <option\n            key={name}\n            value={name}\n          >\n            {name}\n          </option>\n        );\n      }\n\n      return (\n        <option\n          key={name.id}\n          value={name.value}\n          title={name.title}\n        >\n          {name.text || name.value}\n        </option>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <select\n        ref={this.setSelectRef}\n        className=\"rdg-select-editor\"\n        defaultValue={this.props.value}\n        onBlur={this.props.onBlur}\n      >\n        {this.renderOptions()}\n      </select>\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}