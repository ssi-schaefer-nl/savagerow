{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\Table\\\\DataGrid\\\\TableDropdownEditor.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DropdownCell extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value\n    };\n    this.ref = /*#__PURE__*/React.createRef();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  getValue() {\n    return {\n      [this.props.column.key]: this.state.value\n    };\n  }\n\n  getInputNode() {\n    return this.ref;\n  }\n\n  onChange(_, value) {\n    this.setState({\n      value\n    }); // This will close the dropdown as soon as an option is selected\n    // this.props.onCommit()\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Autocomplete, {\n      ref: this.ref,\n      autoHighlight: true,\n      value: this.state.value,\n      options: ['option 1', 'option 2', 'option 3'],\n      getOptionLabel: s => s,\n      getOptionDisabled: s => this.state.value === s,\n      onChange: this.onChange,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        size: \"small\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nDropdownCell.propTypes = {\n  value: PropTypes.any,\n  onCommit: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/Table/DataGrid/TableDropdownEditor.js"],"names":["React","PropTypes","TextField","Autocomplete","DropdownCell","Component","constructor","props","state","value","ref","createRef","onChange","bind","getValue","column","key","getInputNode","_","setState","render","s","params","propTypes","any","onCommit","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,OAAO,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAEF,KAAK,CAACE;AAAf,KAAb;AAEA,SAAKC,GAAL,gBAAWV,KAAK,CAACW,SAAN,EAAX;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACT,WAAO;AAAE,OAAC,KAAKP,KAAL,CAAWQ,MAAX,CAAkBC,GAAnB,GAAyB,KAAKR,KAAL,CAAWC;AAAtC,KAAP;AACD;;AAEDQ,EAAAA,YAAY,GAAG;AACb,WAAO,KAAKP,GAAZ;AACD;;AAEDE,EAAAA,QAAQ,CAACM,CAAD,EAAIT,KAAJ,EAAW;AACjB,SAAKU,QAAL,CAAc;AAAEV,MAAAA;AAAF,KAAd,EADiB,CAEjB;AACA;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,YAAD;AACE,MAAA,GAAG,EAAE,KAAKV,GADZ;AAEE,MAAA,aAAa,MAFf;AAGE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KAHpB;AAIE,MAAA,OAAO,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,CAJX;AAKE,MAAA,cAAc,EAAEY,CAAC,IAAIA,CALvB;AAME,MAAA,iBAAiB,EAAEA,CAAC,IAAI,KAAKb,KAAL,CAAWC,KAAX,KAAqBY,CAN/C;AAOE,MAAA,QAAQ,EAAE,KAAKT,QAPjB;AAQE,MAAA,WAAW,EAAEU,MAAM,iBACf,QAAC,SAAD,OACQA,MADR;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,SAAS;AAHb;AAAA;AAAA;AAAA;AAAA;AATN;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA3C+C;AA8ClDlB,YAAY,CAACmB,SAAb,GAAyB;AACvBd,EAAAA,KAAK,EAAER,SAAS,CAACuB,GADM;AAEvBC,EAAAA,QAAQ,EAAExB,SAAS,CAACyB;AAFG,CAAzB","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\nexport class DropdownCell extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = { value: props.value }\r\n\r\n    this.ref = React.createRef()\r\n    this.onChange = this.onChange.bind(this)\r\n  }\r\n\r\n  getValue() {\r\n    return { [this.props.column.key]: this.state.value }\r\n  }\r\n\r\n  getInputNode() {\r\n    return this.ref\r\n  }\r\n\r\n  onChange(_, value) {\r\n    this.setState({ value })\r\n    // This will close the dropdown as soon as an option is selected\r\n    // this.props.onCommit()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Autocomplete\r\n        ref={this.ref}\r\n        autoHighlight\r\n        value={this.state.value}\r\n        options={['option 1', 'option 2', 'option 3']}\r\n        getOptionLabel={s => s}\r\n        getOptionDisabled={s => this.state.value === s}\r\n        onChange={this.onChange}\r\n        renderInput={params => (\r\n            <TextField\r\n                {...params}\r\n                size='small'\r\n                fullWidth\r\n            />\r\n        )}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nDropdownCell.propTypes = {\r\n  value: PropTypes.any,\r\n  onCommit: PropTypes.func\r\n}"]},"metadata":{},"sourceType":"module"}