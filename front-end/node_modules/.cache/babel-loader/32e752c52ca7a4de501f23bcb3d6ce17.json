{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\Table\\\\DataGridTable.js\";\nimport DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './highlight.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DataGridTable = props => {\n  if (props.columns.length == 0) {\n    return null;\n  }\n\n  const columns = props.columns.map(col => ({\n    key: col.column,\n    name: col.column,\n    resizable: true,\n    nullable: col.nullable,\n    editor: col.editable ? TextEditor : undefined\n  }));\n  var rows = [...props.rows];\n  const onRowChange = props.onRowChange;\n  const onRowSelect = props.onRowSelect;\n  const highlightedRows = props.highlightRows ? props.highlightRows : [];\n\n  const onRowDelete = (e, {\n    rowIdx\n  }) => {\n    props.onDelete(rowIdx);\n  };\n\n  const onRowInsertAbove = (e, {\n    rowIdx\n  }) => {\n    props.onInsertAbove(rowIdx);\n  };\n\n  const onRowInsertBelow = (e, {\n    rowIdx\n  }) => {\n    props.onInsertBelow(rowIdx);\n  };\n\n  const onRowSave = (e, {\n    rowIdx\n  }) => {\n    props.onSave(rowIdx);\n  };\n\n  const onRefresh = (e, {\n    rowIdx\n  }) => {\n    props.onRefresh(rowIdx);\n  };\n\n  const RowRenderer = props => {\n    var rowTooltip = \"Row \" + props.rowIdx;\n    var cn = \"row\";\n    const highlight = highlightedRows.find(hr => hr.id == props.rowIdx);\n\n    if (highlight != undefined) {\n      rowTooltip = rowTooltip.concat(\" - \" + highlight.message);\n      cn = highlight.type === \"warning\" ? \"row-warning\" : \"row-error\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(ContextMenuTrigger, {\n      id: \"grid-context-menu\",\n      collect: () => ({\n        rowIdx: props.rowIdx\n      }),\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: rowTooltip,\n        enterDelay: 1000,\n        enterNextDelay: 1000,\n        interactive: true,\n        placement: \"bottom-start\",\n        arrow: true,\n        children: /*#__PURE__*/_jsxDEV(GridRow, { ...props,\n          className: cn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: columns,\n      rows: rows,\n      onRowsChange: (updatedRows, index) => {\n        var idx = index.indexes[0];\n        rows[idx] = updatedRows[idx];\n        onRowChange(updatedRows[idx], idx);\n      },\n      rowGetter: i => rows[i],\n      enableCellSelect: true,\n      rowRenderer: RowRenderer,\n      style: {\n        'height': \"65vh\",\n        overflowX: 'hidden'\n      },\n      className: \"fill-grid\" // rowClass={row => highlightedRows.includes(rows.indexOf(row)) ? \"row-highlighted\" : \"row\"}\n      ,\n      minHeight: \"1000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContextMenu, {\n      id: \"grid-context-menu\",\n      style: {\n        background: \"#fafafa\",\n        borderRadius: \"0px 30px 0px 0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRowSave,\n        children: \"Save Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRowDelete,\n        children: \"Delete Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SubMenu, {\n        title: \"Insert Row\",\n        onClick: onRowInsertAbove,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: onRowInsertAbove,\n          children: \"Above\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: onRowInsertBelow,\n          children: \"Below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRefresh,\n        children: \"Refresh table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = DataGridTable;\nexport default DataGridTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataGridTable\");","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/Table/DataGridTable.js"],"names":["DataGrid","TextEditor","Row","GridRow","ContextMenu","MenuItem","SubMenu","ContextMenuTrigger","Tooltip","DataGridTable","props","columns","length","map","col","key","column","name","resizable","nullable","editor","editable","undefined","rows","onRowChange","onRowSelect","highlightedRows","highlightRows","onRowDelete","e","rowIdx","onDelete","onRowInsertAbove","onInsertAbove","onRowInsertBelow","onInsertBelow","onRowSave","onSave","onRefresh","RowRenderer","rowTooltip","cn","highlight","find","hr","id","concat","message","type","updatedRows","index","idx","indexes","i","overflowX","background","borderRadius"],"mappings":"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","sourcesContent":["import DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\r\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport './highlight.css'\r\n\r\n\r\nconst DataGridTable = (props) => {\r\n    if (props.columns.length == 0) {\r\n        return null\r\n    }\r\n\r\n    const columns = props.columns.map(col => ({\r\n        key: col.column,\r\n        name: col.column,\r\n        resizable: true,\r\n        nullable: col.nullable,\r\n        editor: col.editable ? TextEditor : undefined\r\n    }));\r\n\r\n    var rows = [...props.rows]\r\n    const onRowChange = props.onRowChange\r\n    const onRowSelect = props.onRowSelect\r\n    const highlightedRows = props.highlightRows ? props.highlightRows : []\r\n    const onRowDelete = (e, { rowIdx }) => {\r\n        props.onDelete(rowIdx)\r\n    }\r\n\r\n    const onRowInsertAbove = (e, { rowIdx }) => {\r\n        props.onInsertAbove(rowIdx)\r\n    }\r\n\r\n    const onRowInsertBelow = (e, { rowIdx }) => {\r\n        props.onInsertBelow(rowIdx)\r\n    }\r\n\r\n    const onRowSave = (e, { rowIdx }) => {\r\n        props.onSave(rowIdx)\r\n    }\r\n\r\n\r\n    const onRefresh = (e, { rowIdx }) => {\r\n        props.onRefresh(rowIdx)\r\n    }\r\n\r\n    const RowRenderer = (props) => {\r\n        var rowTooltip = \"Row \" + props.rowIdx\r\n        var cn = \"row\"\r\n        const highlight = highlightedRows.find(hr => hr.id == props.rowIdx)\r\n        \r\n        if(highlight != undefined) {\r\n            rowTooltip = rowTooltip.concat(\" - \" + highlight.message)\r\n            cn = highlight.type === \"warning\" ? \"row-warning\" : \"row-error\"\r\n        }\r\n\r\n        return (\r\n            <ContextMenuTrigger id=\"grid-context-menu\" collect={() => ({ rowIdx: props.rowIdx })}>\r\n                <Tooltip\r\n                    title={rowTooltip}\r\n                    enterDelay={1000}\r\n                    enterNextDelay={1000}\r\n                    interactive\r\n                    placement=\"bottom-start\"\r\n                    arrow\r\n                >\r\n                    <GridRow {...props} className={cn}/>\r\n                </Tooltip>\r\n            </ContextMenuTrigger>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <DataGrid\r\n                columns={columns}\r\n                rows={rows}\r\n                onRowsChange={(updatedRows, index) => {\r\n                    var idx = index.indexes[0]\r\n                    rows[idx] = updatedRows[idx]\r\n                    onRowChange(updatedRows[idx], idx)\r\n                }}\r\n                rowGetter={i => rows[i]}\r\n                enableCellSelect={true}\r\n                rowRenderer={RowRenderer}\r\n                style={{ 'height': \"65vh\", overflowX: 'hidden' }}\r\n                className=\"fill-grid\"\r\n                // rowClass={row => highlightedRows.includes(rows.indexOf(row)) ? \"row-highlighted\" : \"row\"}\r\n                minHeight=\"1000\"\r\n            />\r\n\r\n            <ContextMenu id=\"grid-context-menu\" style={{ background: \"#fafafa\", borderRadius: \"0px 30px 0px 0px\" }}>\r\n                <MenuItem onClick={onRowSave}>Save Row</MenuItem>\r\n                <MenuItem onClick={onRowDelete}>Delete Row</MenuItem>\r\n                <SubMenu title=\"Insert Row\" onClick={onRowInsertAbove}>\r\n                    <MenuItem onClick={onRowInsertAbove}>Above</MenuItem>\r\n                    <MenuItem onClick={onRowInsertBelow}>Below</MenuItem>\r\n                </SubMenu>\r\n                <MenuItem divider />\r\n                <MenuItem onClick={onRefresh}>Refresh table</MenuItem>\r\n                <MenuItem divider />\r\n                <MenuItem ><b>Cancel</b></MenuItem>\r\n            </ContextMenu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataGridTable"]},"metadata":{},"sourceType":"module"}