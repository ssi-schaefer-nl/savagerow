{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\playground\\\\src\\\\Views\\\\Tables.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SavageTable from \"../Components/Table/Table\";\nimport { Toolbar } from \"@material-ui/core\";\nimport ConfigureService from \"../Service/ConfigureService\";\nimport CollapsableAlert from \"../Components/CollapsableAlert/CollapsableAlert\";\nimport DatabaseSelect from \"../Components/DatabaseSelect/DatabaseSelect\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Tables extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tables: [],\n      configureService: new ConfigureService(),\n      loading: true,\n      database: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.state.configureService.getCurrentDatabase(function (data) {\n      this.setState({\n        database: data.data\n      });\n    }.bind(this), function (data) {\n      this.setState({\n        database: null,\n        loadCurrentDatabaseError: true\n      });\n      console.log(data);\n    }.bind(this));\n    this.state.configureService.getTables(function (data) {\n      this.setState({\n        tables: data.data\n      });\n      this.setState({\n        loading: false\n      });\n    }.bind(this), function (data) {\n      console.log(data);\n      this.setState({\n        loading: false,\n        loadTableDataError: true\n      });\n    }.bind(this));\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n\n    if (!this.state.loadCurrentDatabaseError && this.state.database.length == 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          marginBottom: \"2em\"\n        },\n        children: \"No database is selected. Please select a database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatabaseSelect, {\n        onSelect: () => window.location.reload(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n\n    if (this.state.loadTableDataError || this.state.loadCurrentDatabaseError) {\n      return /*#__PURE__*/_jsxDEV(CollapsableAlert, {\n        severity: \"error\",\n        message: \"Error while retrieving data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(ScrollableTabsButtonAuto, {\n      tables: this.state.tables,\n      database: this.state.database\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction ScrollableTabsButtonAuto(props) {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"default\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"primary\",\n          style: {\n            marginRight: \"1em\",\n            fontWeight: \"bold\"\n          },\n          children: props.database\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          selectionFollowsFocus: true,\n          value: value,\n          onChange: handleChange,\n          indicatorColor: \"primary\",\n          textColor: \"secundary\",\n          variant: \"scrollable\",\n          scrollButtons: \"auto\",\n          \"aria-label\": \"scrollable auto tabs example\",\n          children: props.tables.map((table, index) => /*#__PURE__*/_jsxDEV(Tab, {\n            label: table,\n            ...a11yProps(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"primary\",\n          style: {\n            marginLeft: \"1em\",\n            fontWeight: \"bold\"\n          },\n          children: props.database\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), props.tables.map((table, index) => /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: index,\n      children: /*#__PURE__*/_jsxDEV(SavageTable, {\n        table: table\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ScrollableTabsButtonAuto, \"BDkWVlEh8+DaKPHysXJ2gpEmtFI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ScrollableTabsButtonAuto;\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%'\n  }\n}));\nexport default Tables;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ScrollableTabsButtonAuto\");\n$RefreshReg$(_c2, \"TabPanel\");","map":{"version":3,"sources":["C:/Users/vincent/git/playground/src/Views/Tables.js"],"names":["React","Component","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","SavageTable","Toolbar","ConfigureService","CollapsableAlert","DatabaseSelect","Tables","state","tables","configureService","loading","database","componentDidMount","getCurrentDatabase","data","setState","bind","loadCurrentDatabaseError","console","log","getTables","loadTableDataError","render","length","marginBottom","window","location","reload","ScrollableTabsButtonAuto","props","classes","useStyles","value","setValue","useState","handleChange","event","newValue","root","marginRight","fontWeight","map","table","index","a11yProps","marginLeft","TabPanel","children","other","propTypes","node","any","isRequired","id","theme","flexGrow","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SavageTable from \"../Components/Table/Table\";\nimport { Toolbar } from \"@material-ui/core\";\nimport ConfigureService from \"../Service/ConfigureService\";\nimport CollapsableAlert from \"../Components/CollapsableAlert/CollapsableAlert\";\nimport DatabaseSelect from \"../Components/DatabaseSelect/DatabaseSelect\";\n\nclass Tables extends Component {\n  state = {\n    tables: [],\n    configureService: new ConfigureService(),\n    loading: true,\n    database: \"\",\n  }\n\n  componentDidMount() {\n    this.state.configureService.getCurrentDatabase(\n      function (data) {\n        this.setState({ database: data.data })\n      }.bind(this),\n      function (data) {\n        this.setState({ database: null, loadCurrentDatabaseError: true })\n        console.log(data)\n      }.bind(this));\n\n    this.state.configureService.getTables(\n      function (data) {\n        this.setState({ tables: data.data })\n        this.setState({ loading: false })\n      }.bind(this),\n      function (data) {\n        console.log(data)\n        this.setState({ loading: false, loadTableDataError: true })\n\n      }.bind(this));\n\n\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (<></>)\n    }\n\n    if (!this.state.loadCurrentDatabaseError && this.state.database.length == 0) return (\n      <div>\n        <Typography style={{marginBottom:\"2em\"}}>No database is selected. Please select a database</Typography>\n        <DatabaseSelect  onSelect={() => window.location.reload(false)}/>\n      </div>\n    )\n    if (this.state.loadTableDataError || this.state.loadCurrentDatabaseError) {\n      return (<CollapsableAlert severity=\"error\" message=\"Error while retrieving data.\" />)\n    }\n\n    return (\n      <ScrollableTabsButtonAuto tables={this.state.tables} database={this.state.database} />\n    );\n  }\n}\n\n\nfunction ScrollableTabsButtonAuto(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar className={classes.root}>\n          <Typography variant=\"h6\" color=\"primary\" style={{marginRight: \"1em\", fontWeight: \"bold\"}}>\n            {props.database}\n          </Typography>\n          <Tabs\n            selectionFollowsFocus\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"secundary\"\n            variant=\"scrollable\"\n      \n            scrollButtons=\"auto\"\n            aria-label=\"scrollable auto tabs example\"\n          >\n            {props.tables.map((table, index) => (\n              <Tab label={table} {...a11yProps(index)} />\n            ))}\n\n          </Tabs>\n          <Typography variant=\"h6\" color=\"primary\" style={{marginLeft: \"1em\", fontWeight: \"bold\"}}>\n            {props.database}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      {props.tables.map((table, index) => (\n        <TabPanel  value={value} index={index} >\n          <SavageTable table={table} />\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n  },\n}));\n\nexport default Tables;"]},"metadata":{},"sourceType":"module"}