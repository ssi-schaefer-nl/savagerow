{"ast":null,"code":"import React, { useContext, createContext, useRef, useEffect, Children, cloneElement, useReducer, useState } from 'react';\nimport cx from 'clsx';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar Context = /*#__PURE__*/createContext({});\n/**\r\n * Access parent ref tracker.\r\n */\n\nfunction useRefTrackerContext() {\n  return useContext(Context);\n}\n\nvar RefTrackerProvider = function RefTrackerProvider(props) {\n  return React.createElement(Context.Provider, {\n    value: props.refTracker\n  }, props.children);\n};\n\nfunction createEventManager() {\n  var eventList = new Map();\n  return {\n    on: function on(event, handler) {\n      var _eventList$get; //eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\n\n      eventList.has(event) ? (_eventList$get = eventList.get(event)) == null ? void 0 : _eventList$get.add(handler) : eventList.set(event, new Set([handler]));\n      return this;\n    },\n    off: function off(event, handler) {\n      handler ? eventList.get(event)[\"delete\"](handler) : eventList[\"delete\"](event);\n      return this;\n    },\n    emit: function emit(event, args) {\n      if (process.env.NODE !== 'production') {\n        var currentEv = event;\n\n        if (!eventList.has(event) && currentEv !== 0\n        /* HIDE_ALL */\n        ) {\n            console.error(\"It seems that the menu you are trying to display is not renderer or you have a menu id mismatch.\", \"You used the menu id: \" + event);\n          }\n      }\n\n      eventList.has(event) && eventList.get(event).forEach(function (handler) {\n        handler(args);\n      });\n      return this;\n    }\n  };\n}\n\nvar eventManager = /*#__PURE__*/createEventManager();\n\nfunction usePrevious(value) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n/**\r\n * Used to store children refs\r\n */\n\n\nfunction useRefTracker() {\n  return useRef(new Map()).current;\n}\n\nvar contextMenu = {\n  show: function show(_ref) {\n    var id = _ref.id,\n        event = _ref.event,\n        props = _ref.props,\n        position = _ref.position;\n    if (event.preventDefault) event.preventDefault();\n    eventManager.emit(0\n    /* HIDE_ALL */\n    ).emit(id, {\n      event: event.nativeEvent || event,\n      props: props,\n      position: position\n    });\n  },\n  hideAll: function hideAll() {\n    eventManager.emit(0\n    /* HIDE_ALL */\n    );\n  }\n};\n\nfunction useContextMenu(props) {\n  return {\n    show: function show(event, params) {\n      if (process.env.NODE_ENV === 'development') {\n        if (!(props == null ? void 0 : props.id) && !(params == null ? void 0 : params.id)) console.error(\"You need to provide an id when initializing the hook `useContextMenu({ id: 'your id' })` or when you display the menu `show(e, { id: 'your id' })`. The later is used to override the one defined during initialization.\");\n      }\n\n      contextMenu.show({\n        id: (params == null ? void 0 : params.id) || (props == null ? void 0 : props.id),\n        props: (params == null ? void 0 : params.props) || (props == null ? void 0 : props.props),\n        event: event,\n        position: params == null ? void 0 : params.position\n      });\n    },\n    hideAll: function hideAll() {\n      contextMenu.hideAll();\n    }\n  };\n}\n/**\r\n * Used to control keyboard navigation\r\n */\n\n\nfunction createMenuController() {\n  var menuList = new Map();\n  var focusedIndex;\n  var parentNode;\n  var isAtRoot;\n  var currentItems;\n  var forceCloseSubmenu = false;\n\n  function init(rootMenu) {\n    currentItems = rootMenu;\n    focusedIndex = -1;\n    isAtRoot = true;\n  }\n\n  function focusSelectedItem() {\n    currentItems[focusedIndex].node.focus();\n  }\n\n  function isSubmenuFocused() {\n    return focusedIndex >= 0 && currentItems[focusedIndex].isSubmenu;\n  }\n\n  function getSubmenuItems() {\n    return Array.from(currentItems[focusedIndex].submenuRefTracker.values());\n  }\n\n  function isFocused() {\n    if (focusedIndex === -1) {\n      // focus first item\n      moveDown();\n      return false;\n    }\n\n    return true;\n  }\n\n  function moveDown() {\n    if (focusedIndex + 1 < currentItems.length) {\n      focusedIndex++;\n    } else if (focusedIndex + 1 === currentItems.length) {\n      focusedIndex = 0;\n    }\n\n    if (forceCloseSubmenu) closeSubmenu();\n    focusSelectedItem();\n  }\n\n  function moveUp() {\n    if (focusedIndex === -1 || focusedIndex === 0) {\n      focusedIndex = currentItems.length - 1;\n    } else if (focusedIndex - 1 < currentItems.length) {\n      focusedIndex--;\n    }\n\n    if (forceCloseSubmenu) closeSubmenu();\n    focusSelectedItem();\n  }\n\n  function openSubmenu() {\n    if (isFocused() && isSubmenuFocused()) {\n      var submenuItems = getSubmenuItems();\n      var currentNode = currentItems[focusedIndex].node;\n      menuList.set(currentNode, {\n        isRoot: isAtRoot,\n        focusedIndex: focusedIndex,\n        parentNode: parentNode || currentNode,\n        items: currentItems\n      });\n      currentNode.classList.add(\"react-contexify__submenu--is-open\"\n      /* submenuOpen */\n      );\n      parentNode = currentNode;\n\n      if (submenuItems.length > 0) {\n        focusedIndex = 0;\n        currentItems = submenuItems;\n      } else {\n        forceCloseSubmenu = true;\n      }\n\n      isAtRoot = false;\n      focusSelectedItem();\n      return true;\n    }\n\n    return false;\n  }\n\n  function closeSubmenu() {\n    if (isFocused() && !isAtRoot) {\n      var _menuList$get = menuList.get(parentNode),\n          isRoot = _menuList$get.isRoot,\n          items = _menuList$get.items,\n          parentFocusedIndex = _menuList$get.focusedIndex,\n          menuParentNode = _menuList$get.parentNode;\n\n      parentNode.classList.remove(\"react-contexify__submenu--is-open\"\n      /* submenuOpen */\n      );\n      currentItems = items;\n      parentNode = menuParentNode;\n\n      if (isRoot) {\n        isAtRoot = true;\n        menuList.clear();\n      }\n\n      if (!forceCloseSubmenu) {\n        focusedIndex = parentFocusedIndex;\n        focusSelectedItem();\n      }\n    }\n  }\n\n  return {\n    init: init,\n    moveDown: moveDown,\n    moveUp: moveUp,\n    openSubmenu: openSubmenu,\n    closeSubmenu: closeSubmenu\n  };\n}\n\nvar theme = {\n  light: 'light',\n  dark: 'dark'\n};\nvar animation = {\n  fade: 'fade',\n  flip: 'flip',\n  scale: 'scale',\n  slide: 'slide'\n};\n\nvar NOOP = function NOOP() {};\n\nfunction isFn(v) {\n  return typeof v === 'function';\n}\n\nfunction isStr(v) {\n  return typeof v === 'string';\n}\n\nfunction isTouchEvent(e) {\n  return e.type === 'touchend';\n}\n\nfunction cloneItems(children, props) {\n  return Children.map( // remove null item\n  Children.toArray(children).filter(Boolean), function (item) {\n    return cloneElement(item, props);\n  });\n}\n\nfunction getMousePosition(e) {\n  var pos = {\n    x: 0,\n    y: 0\n  };\n\n  if (isTouchEvent(e) && e.changedTouches && e.changedTouches.length > 0) {\n    pos.x = e.changedTouches[0].clientX;\n    pos.y = e.changedTouches[0].clientY;\n  } else {\n    pos.x = e.clientX;\n    pos.y = e.clientY;\n  }\n\n  if (!pos.x || pos.x < 0) pos.x = 0;\n  if (!pos.y || pos.y < 0) pos.y = 0;\n  return pos;\n}\n\nfunction getPredicateValue(predicate, payload) {\n  return isFn(predicate) ? predicate(payload) : predicate;\n}\n\nfunction hasExitAnimation(animation) {\n  return !!(animation && (isStr(animation) || 'exit' in animation && animation.exit));\n}\n\nfunction reducer(state, payload) {\n  return isFn(payload) ? _extends({}, state, payload(state)) : _extends({}, state, payload);\n}\n\nvar Menu = function Menu(_ref) {\n  var _cx3;\n\n  var id = _ref.id,\n      theme = _ref.theme,\n      style = _ref.style,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$animation = _ref.animation,\n      animation = _ref$animation === void 0 ? 'scale' : _ref$animation,\n      _ref$onHidden = _ref.onHidden,\n      onHidden = _ref$onHidden === void 0 ? NOOP : _ref$onHidden,\n      _ref$onShown = _ref.onShown,\n      onShown = _ref$onShown === void 0 ? NOOP : _ref$onShown,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"id\", \"theme\", \"style\", \"className\", \"children\", \"animation\", \"onHidden\", \"onShown\"]);\n\n  var _useReducer = useReducer(reducer, {\n    x: 0,\n    y: 0,\n    visible: false,\n    triggerEvent: {},\n    propsFromTrigger: null,\n    willLeave: false\n  }),\n      state = _useReducer[0],\n      setState = _useReducer[1];\n\n  var nodeRef = useRef(null);\n  var didMount = useRef(false);\n  var wasVisible = usePrevious(state.visible);\n  var refTracker = useRefTracker();\n\n  var _useState = useState(function () {\n    return createMenuController();\n  }),\n      menuController = _useState[0]; // subscribe event manager\n\n\n  useEffect(function () {\n    didMount.current = true;\n    eventManager.on(id, show).on(0\n    /* HIDE_ALL */\n    , hide);\n    return function () {\n      eventManager.off(id, show).off(0\n      /* HIDE_ALL */\n      , hide);\n    }; // hide rely on setState(dispatch), which is guaranted to be the same across render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]); // handle show/ hide callback\n\n  useEffect(function () {\n    if (didMount.current && state.visible !== wasVisible) {\n      state.visible ? onShown() : onHidden();\n    } // wasWisible is a ref\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [state.visible, onHidden, onShown]); // collect menu items for keyboard navigation\n\n  useEffect(function () {\n    if (!state.visible) {\n      refTracker.clear();\n    } else {\n      menuController.init(Array.from(refTracker.values()));\n    }\n  }, [state.visible, menuController, refTracker]); // compute menu position\n\n  useEffect(function () {\n    if (state.visible) {\n      var _window = window,\n          windowWidth = _window.innerWidth,\n          windowHeight = _window.innerHeight;\n      var _nodeRef$current = nodeRef.current,\n          menuWidth = _nodeRef$current.offsetWidth,\n          menuHeight = _nodeRef$current.offsetHeight;\n      var _x = state.x,\n          _y = state.y;\n\n      if (_x + menuWidth > windowWidth) {\n        _x -= _x + menuWidth - windowWidth;\n      }\n\n      if (_y + menuHeight > windowHeight) {\n        _y -= _y + menuHeight - windowHeight;\n      }\n\n      setState({\n        x: _x,\n        y: _y\n      });\n    } // state.visible and state{x,y} are updated together\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [state.visible]); // subscribe dom events\n\n  useEffect(function () {\n    function handleKeyboard(e) {\n      e.preventDefault();\n\n      switch (e.key) {\n        case 'Enter':\n          if (!menuController.openSubmenu()) hide();\n          break;\n\n        case 'Escape':\n          hide();\n          break;\n\n        case 'ArrowUp':\n          menuController.moveUp();\n          break;\n\n        case 'ArrowDown':\n          menuController.moveDown();\n          break;\n\n        case 'ArrowRight':\n          menuController.openSubmenu();\n          break;\n\n        case 'ArrowLeft':\n          menuController.closeSubmenu();\n          break;\n      }\n    }\n\n    if (state.visible) {\n      window.addEventListener('resize', hide);\n      window.addEventListener('contextmenu', hide);\n      window.addEventListener('click', hide);\n      window.addEventListener('scroll', hide);\n      window.addEventListener('keydown', handleKeyboard); // This let us debug the menu in the console in dev mode\n\n      if (process.env.NODE_ENV !== 'development') {\n        window.addEventListener('blur', hide);\n      }\n    }\n\n    return function () {\n      window.removeEventListener('resize', hide);\n      window.removeEventListener('contextmenu', hide);\n      window.removeEventListener('click', hide);\n      window.removeEventListener('scroll', hide);\n      window.removeEventListener('keydown', handleKeyboard);\n\n      if (process.env.NODE_ENV !== 'development') {\n        window.removeEventListener('blur', hide);\n      }\n    }; // state.visible will let us get the right reference to `hide`\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.visible, menuController]);\n\n  function show(_ref2) {\n    var event = _ref2.event,\n        props = _ref2.props,\n        position = _ref2.position;\n    event.stopPropagation();\n\n    var _ref3 = position || getMousePosition(event),\n        x = _ref3.x,\n        y = _ref3.y; // prevent react from batching the state update\n    // if the menu is already visible we have to recompute bounding rect based on position\n\n\n    setTimeout(function () {\n      setState({\n        visible: true,\n        willLeave: false,\n        x: x,\n        y: y,\n        triggerEvent: event,\n        propsFromTrigger: props\n      });\n    }, 0);\n  }\n\n  function hide(event) {\n    // Safari trigger a click event when you ctrl + trackpad\n    // Firefox:  trigger a click event when right click occur\n    var e = event;\n\n    if (typeof e !== 'undefined' && (e.button === 2 || e.ctrlKey === true) && e.type !== 'contextmenu') {\n      return;\n    }\n\n    hasExitAnimation(animation) ? setState(function (state) {\n      return {\n        willLeave: state.visible\n      };\n    }) : setState(function (state) {\n      return {\n        visible: state.visible ? false : state.visible\n      };\n    });\n  }\n\n  function handleAnimationEnd() {\n    if (state.willLeave && state.visible) {\n      setState({\n        visible: false,\n        willLeave: false\n      });\n    }\n  }\n\n  function computeAnimationClasses() {\n    if (!animation) return null;\n\n    if (isStr(animation)) {\n      var _cx;\n\n      return cx((_cx = {}, _cx[\"react-contexify__will-enter--\"\n      /* animationWillEnter */\n      + animation] = animation && visible && !willLeave, _cx[\"react-contexify__will-leave--\"\n      /* animationWillLeave */\n      + animation + \" \" + \"react-contexify__will-leave--\"\n      /* animationWillLeave */\n      + \"'disabled'\"] = animation && visible && willLeave, _cx));\n    } else if ('enter' in animation && 'exit' in animation) {\n      var _cx2;\n\n      return cx((_cx2 = {}, _cx2[\"react-contexify__will-enter--\"\n      /* animationWillEnter */\n      + animation.enter] = animation.enter && visible && !willLeave, _cx2[\"react-contexify__will-leave--\"\n      /* animationWillLeave */\n      + animation.exit + \" \" + \"react-contexify__will-leave--\"\n      /* animationWillLeave */\n      + \"'disabled'\"] = animation.exit && visible && willLeave, _cx2));\n    }\n\n    return null;\n  }\n\n  var visible = state.visible,\n      triggerEvent = state.triggerEvent,\n      propsFromTrigger = state.propsFromTrigger,\n      x = state.x,\n      y = state.y,\n      willLeave = state.willLeave;\n  var cssClasses = cx(\"react-contexify\"\n  /* menu */\n  , className, (_cx3 = {}, _cx3[\"react-contexify__theme--\"\n  /* theme */\n  + theme] = theme, _cx3), computeAnimationClasses());\n\n  var menuStyle = _extends({}, style, {\n    left: x,\n    top: y,\n    opacity: 1\n  });\n\n  return React.createElement(RefTrackerProvider, {\n    refTracker: refTracker\n  }, visible && React.createElement(\"div\", Object.assign({}, rest, {\n    className: cssClasses,\n    onAnimationEnd: handleAnimationEnd,\n    style: menuStyle,\n    ref: nodeRef,\n    role: \"menu\"\n  }), cloneItems(children, {\n    propsFromTrigger: propsFromTrigger,\n    triggerEvent: triggerEvent\n  })));\n};\n\nvar Item = function Item(_ref) {\n  var _cx;\n\n  var children = _ref.children,\n      className = _ref.className,\n      style = _ref.style,\n      triggerEvent = _ref.triggerEvent,\n      data = _ref.data,\n      propsFromTrigger = _ref.propsFromTrigger,\n      _ref$onClick = _ref.onClick,\n      onClick = _ref$onClick === void 0 ? NOOP : _ref$onClick,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$hidden = _ref.hidden,\n      hidden = _ref$hidden === void 0 ? false : _ref$hidden,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"children\", \"className\", \"style\", \"triggerEvent\", \"data\", \"propsFromTrigger\", \"onClick\", \"disabled\", \"hidden\"]);\n\n  var refTracker = useRefTrackerContext();\n  var handlerParams = {\n    data: data,\n    triggerEvent: triggerEvent,\n    props: propsFromTrigger\n  };\n  var isDisabled = getPredicateValue(disabled, handlerParams);\n  var isHidden = getPredicateValue(hidden, handlerParams);\n\n  function handleClick(e) {\n    handlerParams.event = e;\n    isDisabled ? e.stopPropagation() : onClick(handlerParams);\n  }\n\n  function trackRef(node) {\n    if (node && !isDisabled) refTracker.set(node, {\n      node: node,\n      isSubmenu: false\n    });\n  }\n\n  function handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      handlerParams.event = e;\n      onClick(handlerParams);\n    }\n  }\n\n  if (isHidden) return null;\n  var cssClasses = cx(\"react-contexify__item\"\n  /* item */\n  , className, (_cx = {}, _cx[\"react-contexify__item--disabled\"\n  /* itemDisabled */\n  ] = isDisabled, _cx));\n  return React.createElement(\"div\", Object.assign({}, rest, {\n    className: cssClasses,\n    style: style,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown,\n    ref: trackRef,\n    tabIndex: -1,\n    role: \"menuitem\",\n    \"aria-disabled\": isDisabled\n  }), React.createElement(\"div\", {\n    className: \"react-contexify__item__content\"\n    /* itemContent */\n\n  }, children));\n};\n\nfunction Separator() {\n  return React.createElement(\"div\", {\n    className: \"react-contexify__separator\"\n    /* separator */\n\n  });\n}\n\nvar Submenu = function Submenu(_ref) {\n  var _cx;\n\n  var _ref$arrow = _ref.arrow,\n      arrow = _ref$arrow === void 0 ? '▶' : _ref$arrow,\n      children = _ref.children,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$hidden = _ref.hidden,\n      hidden = _ref$hidden === void 0 ? false : _ref$hidden,\n      label = _ref.label,\n      className = _ref.className,\n      triggerEvent = _ref.triggerEvent,\n      propsFromTrigger = _ref.propsFromTrigger,\n      style = _ref.style,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"arrow\", \"children\", \"disabled\", \"hidden\", \"label\", \"className\", \"triggerEvent\", \"propsFromTrigger\", \"style\"]);\n\n  var menuRefTracker = useRefTrackerContext();\n  var refTracker = useRefTracker();\n  var nodeRef = useRef(null);\n\n  var _useState = useState({\n    left: '100%',\n    top: 0,\n    bottom: 'initial'\n  }),\n      position = _useState[0],\n      setPosition = _useState[1];\n\n  var handlerParams = {\n    triggerEvent: triggerEvent,\n    props: propsFromTrigger\n  };\n  var isDisabled = getPredicateValue(disabled, handlerParams);\n  var isHidden = getPredicateValue(hidden, handlerParams);\n  useEffect(function () {\n    if (nodeRef.current) {\n      var _window = window,\n          innerWidth = _window.innerWidth,\n          innerHeight = _window.innerHeight;\n      var rect = nodeRef.current.getBoundingClientRect();\n      var _style = {};\n\n      if (rect.right < innerWidth) {\n        _style.left = '100%';\n        _style.right = undefined;\n      } else {\n        _style.right = '100%';\n        _style.left = undefined;\n      }\n\n      if (rect.bottom > innerHeight) {\n        _style.bottom = 0;\n        _style.top = 'initial';\n      } else {\n        _style.bottom = 'initial';\n      }\n\n      setPosition(_style);\n    }\n  }, []);\n\n  function handleClick(e) {\n    e.stopPropagation();\n  }\n\n  function trackRef(node) {\n    if (node && !isDisabled) menuRefTracker.set(node, {\n      node: node,\n      isSubmenu: true,\n      submenuRefTracker: refTracker\n    });\n  }\n\n  if (isHidden) return null;\n  var cssClasses = cx(\"react-contexify__item\"\n  /* item */\n  , className, (_cx = {}, _cx[\"react-contexify__item--disabled\"\n  /* itemDisabled */\n  ] = isDisabled, _cx));\n\n  var submenuStyle = _extends({}, style, position);\n\n  return React.createElement(RefTrackerProvider, {\n    refTracker: refTracker\n  }, React.createElement(\"div\", Object.assign({}, rest, {\n    className: cssClasses,\n    ref: trackRef,\n    tabIndex: -1,\n    role: \"menuitem\",\n    \"aria-haspopup\": true,\n    \"aria-disabled\": isDisabled\n  }), React.createElement(\"div\", {\n    className: \"react-contexify__item__content\"\n    /* itemContent */\n    ,\n    onClick: handleClick\n  }, label, React.createElement(\"span\", {\n    className: \"react-contexify__submenu-arrow\"\n    /* submenuArrow */\n\n  }, arrow)), React.createElement(\"div\", {\n    className: \"react-contexify react-contexify__submenu\"\n    /* submenu */\n    ,\n    ref: nodeRef,\n    style: submenuStyle\n  }, cloneItems(children, {\n    propsFromTrigger: propsFromTrigger,\n    // injected by the parent\n    triggerEvent: triggerEvent\n  }))));\n};\n\nexport { Item, Menu, Separator, Submenu, animation, contextMenu, theme, useContextMenu };","map":{"version":3,"sources":["../src/components/RefTrackerProvider.tsx","../src/core/eventManager.ts","../src/hooks/usePrevious.ts","../src/hooks/useRefTracker.ts","../src/core/contextMenu.ts","../src/hooks/useContextMenu.ts","../src/components/menuController.ts","../src/constants.ts","../src/components/utils.ts","../src/components/Menu.tsx","../src/components/Item.tsx","../src/components/Separator.tsx","../src/components/Submenu.tsx"],"names":["Context","createContext","useRefTrackerContext","useContext","RefTrackerProvider","value","props","refTracker","eventList","on","off","handler","emit","process","currentEv","console","eventManager","createEventManager","usePrevious","ref","useRef","useEffect","useRefTracker","contextMenu","show","id","event","position","hideAll","useContextMenu","params","createMenuController","menuList","forceCloseSubmenu","currentItems","focusedIndex","isAtRoot","Array","moveDown","closeSubmenu","focusSelectedItem","isFocused","isSubmenuFocused","submenuItems","getSubmenuItems","currentNode","isRoot","parentNode","items","parentFocusedIndex","menuParentNode","init","moveUp","openSubmenu","theme","light","dark","animation","fade","flip","scale","slide","NOOP","isFn","v","isStr","isTouchEvent","e","cloneItems","children","Children","cloneElement","getMousePosition","pos","x","y","getPredicateValue","predicate","payload","hasExitAnimation","Menu","style","className","onHidden","onShown","rest","state","setState","useReducer","visible","triggerEvent","propsFromTrigger","willLeave","nodeRef","didMount","wasVisible","menuController","useState","windowWidth","windowHeight","menuWidth","menuHeight","hide","window","setTimeout","cx","cssClasses","computeAnimationClasses","menuStyle","left","top","opacity","onAnimationEnd","handleAnimationEnd","role","Item","data","onClick","disabled","hidden","handlerParams","isDisabled","isHidden","node","isSubmenu","handleClick","onKeyDown","handleKeyDown","trackRef","tabIndex","Separator","Submenu","arrow","label","menuRefTracker","setPosition","bottom","innerWidth","innerHeight","rect","submenuRefTracker","submenuStyle"],"mappings":"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","sourcesContent":["import React, { useContext, createContext } from 'react';\nimport { RefTracker } from '../hooks';\n\nconst Context = createContext({} as RefTracker);\n\n/**\n * Access parent ref tracker.\n */\nexport function useRefTrackerContext() {\n  return useContext(Context);\n}\n\nexport interface RefTrackerProviderProps {\n  refTracker: RefTracker;\n}\n\nexport const RefTrackerProvider: React.FC<RefTrackerProviderProps> = props => {\n  return (\n    <Context.Provider value={props.refTracker}>\n      {props.children}\n    </Context.Provider>\n  );\n};\n","import { EVENT } from '../constants';\n\nexport type EventType = string | number | symbol;\nexport type Handler<T = any> = (args: T) => void;\n\nexport interface EventManager<E = EventType> {\n  on<T = any>(event: E, handler: Handler<T>): EventManager<E>;\n  off<T = any>(event: E, handler?: Handler<T>): EventManager<E>;\n  emit<T = any>(event: E, args?: T): EventManager<E>;\n}\n\nfunction createEventManager<E = EventType>(): EventManager<E> {\n  const eventList = new Map<E, Set<Handler>>();\n\n  return {\n    on<T = any>(event: E, handler: Handler<T>) {\n      //eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      eventList.has(event)\n        ? eventList.get(event)?.add(handler)\n        : eventList.set(event, new Set([handler]));\n      return this;\n    },\n    off<T = any>(event: E, handler?: Handler<T>) {\n      handler ? eventList.get(event)!.delete(handler) : eventList.delete(event);\n      return this;\n    },\n    emit<T = any>(event: E, args: T) {\n      if (process.env.NODE !== 'production') {\n        const currentEv = (event as unknown) as number;\n\n        if (!eventList.has(event) && currentEv !== EVENT.HIDE_ALL) {\n          console.error(\n            `It seems that the menu you are trying to display is not renderer or you have a menu id mismatch.`,\n            `You used the menu id: ${event}`\n          );\n        }\n      }\n      eventList.has(event) &&\n        eventList.get(event)!.forEach((handler: Handler<T>) => {\n          handler(args);\n        });\n      return this;\n    },\n  };\n}\n\nexport const eventManager = createEventManager();\n","import { useEffect, useRef } from 'react';\n\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","import { useRef } from 'react';\n\nexport interface RefTrackerValue {\n  node: HTMLElement;\n  isSubmenu: boolean;\n  submenuRefTracker?: RefTracker;\n}\n\nexport type RefTracker = ReturnType<typeof useRefTracker>;\n\n/**\n * Used to store children refs\n */\nexport function useRefTracker() {\n  return useRef<Map<HTMLElement, RefTrackerValue>>(new Map()).current;\n}\n","import { eventManager } from './eventManager';\nimport { MenuId, TriggerEvent } from '../types';\nimport { SyntheticEvent } from 'react';\n\nimport { EVENT } from '../constants';\n\nexport interface ShowContextMenuParams {\n  id: MenuId;\n  event: TriggerEvent;\n  props?: any;\n  position?: {\n    x: number;\n    y: number;\n  } | null;\n}\n\nexport interface ContextMenu {\n  show: (params: ShowContextMenuParams) => void;\n  hideAll: () => void;\n}\n\nconst contextMenu: ContextMenu = {\n  show({ id, event, props, position }) {\n    if (event.preventDefault) event.preventDefault();\n\n    eventManager.emit(EVENT.HIDE_ALL).emit(id, {\n      event: (event as SyntheticEvent).nativeEvent || event,\n      props,\n      position,\n    });\n  },\n  hideAll() {\n    eventManager.emit(EVENT.HIDE_ALL);\n  },\n};\n\nexport { contextMenu };\n","import { contextMenu } from '../core';\nimport { ContextMenuParams, TriggerEvent } from '../types';\n\nexport type UseContextMenuProps = Partial<\n  Pick<ContextMenuParams, 'id' | 'props'>\n>;\n\nexport function useContextMenu(props?: UseContextMenuProps) {\n  return {\n    show(event: TriggerEvent, params?: Omit<ContextMenuParams, 'event'>) {\n      if (process.env.NODE_ENV === 'development') {\n        if (!props?.id && !params?.id)\n          console.error(\n            \"You need to provide an id when initializing the hook `useContextMenu({ id: 'your id' })` or when you display the menu `show(e, { id: 'your id' })`. The later is used to override the one defined during initialization.\"\n          );\n      }\n      contextMenu.show({\n        id: (params?.id || props?.id) as string,\n        props: params?.props || props?.props,\n        event: event,\n        position: params?.position,\n      });\n    },\n    hideAll() {\n      contextMenu.hideAll();\n    },\n  };\n}\n","import { RefTrackerValue } from '../hooks';\nimport { STYLE } from '../constants';\n\ninterface Menu<T = RefTrackerValue> {\n  items: T[];\n  isRoot: boolean;\n  focusedIndex: number;\n  parentNode: HTMLElement;\n}\n\n/**\n * Used to control keyboard navigation\n */\nexport function createMenuController() {\n  const menuList = new Map<HTMLElement, Menu>();\n  let focusedIndex: number;\n  let parentNode: HTMLElement;\n  let isAtRoot: boolean;\n  let currentItems: RefTrackerValue[];\n  let forceCloseSubmenu = false;\n\n  function init(rootMenu: RefTrackerValue[]) {\n    currentItems = rootMenu;\n    focusedIndex = -1;\n    isAtRoot = true;\n  }\n\n  function focusSelectedItem() {\n    currentItems[focusedIndex].node.focus();\n  }\n\n  function isSubmenuFocused() {\n    return focusedIndex >= 0 && currentItems[focusedIndex].isSubmenu;\n  }\n\n  function getSubmenuItems() {\n    return Array.from(currentItems[focusedIndex].submenuRefTracker!.values());\n  }\n\n  function isFocused() {\n    if (focusedIndex === -1) {\n      // focus first item\n      moveDown();\n      return false;\n    }\n\n    return true;\n  }\n\n  function moveDown() {\n    if (focusedIndex + 1 < currentItems.length) {\n      focusedIndex++;\n    } else if (focusedIndex + 1 === currentItems.length) {\n      focusedIndex = 0;\n    }\n\n    if (forceCloseSubmenu) closeSubmenu();\n\n    focusSelectedItem();\n  }\n\n  function moveUp() {\n    if (focusedIndex === -1 || focusedIndex === 0) {\n      focusedIndex = currentItems.length - 1;\n    } else if (focusedIndex - 1 < currentItems.length) {\n      focusedIndex--;\n    }\n\n    if (forceCloseSubmenu) closeSubmenu();\n\n    focusSelectedItem();\n  }\n\n  function openSubmenu() {\n    if (isFocused() && isSubmenuFocused()) {\n      const submenuItems = getSubmenuItems();\n      const currentNode = currentItems[focusedIndex].node;\n\n      menuList.set(currentNode, {\n        isRoot: isAtRoot,\n        focusedIndex,\n        parentNode: parentNode || currentNode,\n        items: currentItems,\n      });\n\n      currentNode.classList.add(STYLE.submenuOpen);\n      parentNode = currentNode;\n\n      if (submenuItems.length > 0) {\n        focusedIndex = 0;\n        currentItems = submenuItems;\n      } else {\n        forceCloseSubmenu = true;\n      }\n\n      isAtRoot = false;\n\n      focusSelectedItem();\n      return true;\n    }\n    return false;\n  }\n\n  function closeSubmenu() {\n    if (isFocused() && !isAtRoot) {\n      const {\n        isRoot,\n        items,\n        focusedIndex: parentFocusedIndex,\n        parentNode: menuParentNode,\n      } = menuList.get(parentNode)!;\n\n      parentNode.classList.remove(STYLE.submenuOpen);\n\n      currentItems = items;\n      parentNode = menuParentNode;\n\n      if (isRoot) {\n        isAtRoot = true;\n        menuList.clear();\n      }\n      if (!forceCloseSubmenu) {\n        focusedIndex = parentFocusedIndex;\n        focusSelectedItem();\n      }\n    }\n  }\n\n  return {\n    init,\n    moveDown,\n    moveUp,\n    openSubmenu,\n    closeSubmenu,\n  };\n}\n","/*\n * css classes mapping\n * */\nexport const enum STYLE {\n  menu = 'react-contexify',\n  submenu = 'react-contexify react-contexify__submenu',\n  submenuArrow = 'react-contexify__submenu-arrow',\n  submenuOpen = 'react-contexify__submenu--is-open',\n  separator = 'react-contexify__separator',\n  item = 'react-contexify__item',\n  itemDisabled = 'react-contexify__item--disabled',\n  itemContent = 'react-contexify__item__content',\n  theme = 'react-contexify__theme--',\n  animationWillEnter = 'react-contexify__will-enter--',\n  animationWillLeave = 'react-contexify__will-leave--',\n}\n\nexport const enum EVENT {\n  HIDE_ALL,\n}\n\nexport const theme = {\n  light: 'light',\n  dark: 'dark',\n};\n\nexport const animation = {\n  fade: 'fade',\n  flip: 'flip',\n  scale: 'scale',\n  slide: 'slide',\n};\n\nexport const NOOP = () => {};\n","import { Children, cloneElement, ReactNode, ReactElement } from 'react';\n\nimport {\n  BooleanPredicate,\n  PredicateParams,\n  MenuAnimation,\n  TriggerEvent,\n} from '../types';\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isTouchEvent(e: TriggerEvent): e is TouchEvent {\n  return e.type === 'touchend';\n}\n\nexport function cloneItems(\n  children: ReactNode,\n  props: { triggerEvent: TriggerEvent; propsFromTrigger?: object }\n) {\n  return Children.map(\n    // remove null item\n    Children.toArray(children).filter(Boolean),\n    item => cloneElement(item as ReactElement<any>, props)\n  );\n}\n\nexport function getMousePosition(e: TriggerEvent) {\n  const pos = {\n    x: 0,\n    y: 0,\n  };\n\n  if (isTouchEvent(e) && e.changedTouches && e.changedTouches.length > 0) {\n    pos.x = e.changedTouches[0].clientX;\n    pos.y = e.changedTouches[0].clientY;\n  } else {\n    pos.x = (e as MouseEvent).clientX;\n    pos.y = (e as MouseEvent).clientY;\n  }\n\n  if (!pos.x || pos.x < 0) pos.x = 0;\n\n  if (!pos.y || pos.y < 0) pos.y = 0;\n\n  return pos;\n}\n\nexport function getPredicateValue(\n  predicate: BooleanPredicate,\n  payload: PredicateParams\n) {\n  return isFn(predicate) ? predicate(payload) : predicate;\n}\n\nexport function hasExitAnimation(animation: MenuAnimation) {\n  return !!(\n    animation &&\n    (isStr(animation) || ('exit' in animation && animation.exit))\n  );\n}\n","/* global: window */\nimport React, {\n  ReactNode,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\nimport cx from 'clsx';\n\nimport { RefTrackerProvider } from './RefTrackerProvider';\n\nimport { eventManager } from '../core/eventManager';\nimport {\n  TriggerEvent,\n  MenuId,\n  ContextMenuParams,\n  MenuAnimation,\n} from '../types';\nimport { usePrevious, useRefTracker } from '../hooks';\nimport { createMenuController } from './menuController';\nimport { NOOP, STYLE, EVENT } from '../constants';\nimport {\n  cloneItems,\n  getMousePosition,\n  hasExitAnimation,\n  isFn,\n  isStr,\n} from './utils';\n\nexport interface MenuProps\n  extends Omit<React.HTMLAttributes<HTMLElement>, 'id'> {\n  /**\n   * Unique id to identify the menu. Use to Trigger the corresponding menu\n   */\n  id: MenuId;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Theme is appended to `react-contexify__theme--${given theme}`.\n   *\n   * Built-in theme are `light` and `dark`\n   */\n  theme?: string;\n\n  /**\n   * Animation is appended to\n   * - `.react-contexify__will-enter--${given animation}`\n   * - `.react-contexify__will-leave--${given animation}`\n   *\n   * - To disable all animations you can pass `false`\n   * - To disable only the enter or the exit animation you can provide an object `{enter: false, exit: 'exitAnimation'}`\n   *\n   * - default is set to `scale`\n   *\n   * To use the built-in animation a helper in available\n   * `import { animation } from 'react-contexify`\n   *\n   * animation.fade\n   */\n  animation?: MenuAnimation;\n\n  /**\n   * Invoked after the menu is visible.\n   */\n  onShown?: () => void;\n\n  /**\n   * Invoked after the menu has been hidden.\n   */\n  onHidden?: () => void;\n}\n\ninterface MenuState {\n  x: number;\n  y: number;\n  visible: boolean;\n  triggerEvent: TriggerEvent;\n  propsFromTrigger: any;\n  willLeave: boolean;\n}\n\nfunction reducer(\n  state: MenuState,\n  payload: Partial<MenuState> | ((state: MenuState) => Partial<MenuState>)\n) {\n  return isFn(payload)\n    ? { ...state, ...payload(state) }\n    : { ...state, ...payload };\n}\n\nexport const Menu: React.FC<MenuProps> = ({\n  id,\n  theme,\n  style,\n  className,\n  children,\n  animation = 'scale',\n  onHidden = NOOP,\n  onShown = NOOP,\n  ...rest\n}) => {\n  const [state, setState] = useReducer(reducer, {\n    x: 0,\n    y: 0,\n    visible: false,\n    triggerEvent: {} as TriggerEvent,\n    propsFromTrigger: null,\n    willLeave: false,\n  });\n  const nodeRef = useRef<HTMLDivElement>(null);\n  const didMount = useRef(false);\n  const wasVisible = usePrevious(state.visible);\n  const refTracker = useRefTracker();\n  const [menuController] = useState(() => createMenuController());\n\n  // subscribe event manager\n  useEffect(() => {\n    didMount.current = true;\n    eventManager.on(id, show).on(EVENT.HIDE_ALL, hide);\n\n    return () => {\n      eventManager.off(id, show).off(EVENT.HIDE_ALL, hide);\n    };\n    // hide rely on setState(dispatch), which is guaranted to be the same across render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  // handle show/ hide callback\n  useEffect(() => {\n    if (didMount.current && state.visible !== wasVisible) {\n      state.visible ? onShown() : onHidden();\n    }\n    // wasWisible is a ref\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.visible, onHidden, onShown]);\n\n  // collect menu items for keyboard navigation\n  useEffect(() => {\n    if (!state.visible) {\n      refTracker.clear();\n    } else {\n      menuController.init(Array.from(refTracker.values()));\n    }\n  }, [state.visible, menuController, refTracker]);\n\n  // compute menu position\n  useEffect(() => {\n    if (state.visible) {\n      const { innerWidth: windowWidth, innerHeight: windowHeight } = window;\n      const {\n        offsetWidth: menuWidth,\n        offsetHeight: menuHeight,\n      } = nodeRef.current!;\n      let { x, y } = state;\n\n      if (x + menuWidth > windowWidth) {\n        x -= x + menuWidth - windowWidth;\n      }\n\n      if (y + menuHeight > windowHeight) {\n        y -= y + menuHeight - windowHeight;\n      }\n\n      setState({\n        x,\n        y,\n      });\n    }\n\n    // state.visible and state{x,y} are updated together\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.visible]);\n\n  // subscribe dom events\n  useEffect(() => {\n    function handleKeyboard(e: KeyboardEvent) {\n      e.preventDefault();\n      switch (e.key) {\n        case 'Enter':\n          if (!menuController.openSubmenu()) hide();\n          break;\n        case 'Escape':\n          hide();\n          break;\n        case 'ArrowUp':\n          menuController.moveUp();\n          break;\n        case 'ArrowDown':\n          menuController.moveDown();\n          break;\n        case 'ArrowRight':\n          menuController.openSubmenu();\n          break;\n        case 'ArrowLeft':\n          menuController.closeSubmenu();\n          break;\n      }\n    }\n\n    if (state.visible) {\n      window.addEventListener('resize', hide);\n      window.addEventListener('contextmenu', hide);\n      window.addEventListener('click', hide);\n      window.addEventListener('scroll', hide);\n      window.addEventListener('keydown', handleKeyboard);\n\n      // This let us debug the menu in the console in dev mode\n      if (process.env.NODE_ENV !== 'development') {\n        window.addEventListener('blur', hide);\n      }\n    }\n\n    return () => {\n      window.removeEventListener('resize', hide);\n      window.removeEventListener('contextmenu', hide);\n      window.removeEventListener('click', hide);\n      window.removeEventListener('scroll', hide);\n      window.removeEventListener('keydown', handleKeyboard);\n\n      if (process.env.NODE_ENV !== 'development') {\n        window.removeEventListener('blur', hide);\n      }\n    };\n    // state.visible will let us get the right reference to `hide`\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.visible, menuController]);\n\n  function show({ event, props, position }: ContextMenuParams) {\n    event.stopPropagation();\n    const { x, y } = position || getMousePosition(event);\n\n    // prevent react from batching the state update\n    // if the menu is already visible we have to recompute bounding rect based on position\n    setTimeout(() => {\n      setState({\n        visible: true,\n        willLeave: false,\n        x,\n        y,\n        triggerEvent: event,\n        propsFromTrigger: props,\n      });\n    }, 0);\n  }\n\n  function hide(event?: Event) {\n    // Safari trigger a click event when you ctrl + trackpad\n    // Firefox:  trigger a click event when right click occur\n    const e = event as KeyboardEvent & MouseEvent;\n\n    if (\n      typeof e !== 'undefined' &&\n      (e.button === 2 || e.ctrlKey === true) &&\n      e.type !== 'contextmenu'\n    ) {\n      return;\n    }\n\n    hasExitAnimation(animation)\n      ? setState(state => ({ willLeave: state.visible }))\n      : setState(state => ({ visible: state.visible ? false : state.visible }));\n  }\n\n  function handleAnimationEnd() {\n    if (state.willLeave && state.visible) {\n      setState({ visible: false, willLeave: false });\n    }\n  }\n\n  function computeAnimationClasses() {\n    if (!animation) return null;\n\n    if (isStr(animation)) {\n      return cx({\n        [`${STYLE.animationWillEnter}${animation}`]:\n          animation && visible && !willLeave,\n        [`${STYLE.animationWillLeave}${animation} ${STYLE.animationWillLeave}'disabled'`]:\n          animation && visible && willLeave,\n      });\n    } else if ('enter' in animation && 'exit' in animation) {\n      return cx({\n        [`${STYLE.animationWillEnter}${animation.enter}`]:\n          animation.enter && visible && !willLeave,\n        [`${STYLE.animationWillLeave}${animation.exit} ${STYLE.animationWillLeave}'disabled'`]:\n          animation.exit && visible && willLeave,\n      });\n    }\n\n    return null;\n  }\n\n  const { visible, triggerEvent, propsFromTrigger, x, y, willLeave } = state;\n  const cssClasses = cx(\n    STYLE.menu,\n    className,\n    { [`${STYLE.theme}${theme}`]: theme },\n    computeAnimationClasses()\n  );\n\n  const menuStyle = {\n    ...style,\n    left: x,\n    top: y,\n    opacity: 1,\n  };\n\n  return (\n    <RefTrackerProvider refTracker={refTracker}>\n      {visible && (\n        <div\n          {...rest}\n          className={cssClasses}\n          onAnimationEnd={handleAnimationEnd}\n          style={menuStyle}\n          ref={nodeRef}\n          role=\"menu\"\n        >\n          {cloneItems(children, {\n            propsFromTrigger,\n            triggerEvent,\n          })}\n        </div>\n      )}\n    </RefTrackerProvider>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport cx from 'clsx';\n\nimport {\n  ItemParams,\n  InternalProps,\n  BooleanPredicate,\n  HandlerParamsEvent,\n} from '../types';\nimport { useRefTrackerContext } from './RefTrackerProvider';\nimport { NOOP, STYLE } from '../constants';\nimport { getPredicateValue } from './utils';\n\nexport interface ItemProps\n  extends InternalProps,\n    Omit<React.HTMLAttributes<HTMLElement>, 'hidden' | 'disabled' | 'onClick'> {\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Passed to the `Item` onClick callback. Accessible via `data`\n   */\n  data?: any;\n\n  /**\n   * Disable `Item`. If a function is used, a boolean must be returned\n   *\n   * @param props The props passed when you called `show(e, {props: yourProps})`\n   * @param data The data defined on the `Item`\n   * @param triggerEvent The event that triggered the context menu\n   *\n   *\n   * ```\n   * function isItemDisabled({ triggerEvent, props, data }: PredicateParams<type of props, type of data>): boolean\n   * <Item disabled={isItemDisabled} data={data}>content</Item>\n   * ```\n   */\n  disabled?: BooleanPredicate;\n\n  /**\n   * Hide the `Item`. If a function is used, a boolean must be returned\n   *\n   * @param props The props passed when you called `show(e, {props: yourProps})`\n   * @param data The data defined on the `Item`\n   * @param triggerEvent The event that triggered the context menu\n   *\n   *\n   * ```\n   * function isItemHidden({ triggerEvent, props, data }: PredicateParams<type of props, type of data>): boolean\n   * <Item hidden={isItemHidden} data={data}>content</Item>\n   * ```\n   */\n  hidden?: BooleanPredicate;\n\n  /**\n   * Callback when the `Item` is clicked.\n   *\n   * @param event The event that occured on the Item node\n   * @param props The props passed when you called `show(e, {props: yourProps})`\n   * @param data The data defined on the `Item`\n   * @param triggerEvent The event that triggered the context menu\n   *\n   * ```\n   * function handleItemClick({ triggerEvent, event, props, data }: ItemParams<type of props, type of data>){\n   *    // retrieve the id of the Item or any other dom attribute\n   *    const id = e.currentTarget.id;\n   *\n   *    // access the props and the data\n   *    console.log(props, data);\n   *\n   *    // access the coordinate of the mouse when the menu has been displayed\n   *    const {  clientX, clientY } = triggerEvent;\n   *\n   * }\n   *\n   * <Item id=\"item-id\" onClick={handleItemClick} data={{key: 'value'}}>Something</Item>\n   * ```\n   */\n  onClick?: (args: ItemParams) => void;\n}\n\nexport const Item: React.FC<ItemProps> = ({\n  children,\n  className,\n  style,\n  triggerEvent,\n  data,\n  propsFromTrigger,\n  onClick = NOOP,\n  disabled = false,\n  hidden = false,\n  ...rest\n}) => {\n  const refTracker = useRefTrackerContext();\n  const handlerParams = {\n    data,\n    triggerEvent: triggerEvent as HandlerParamsEvent,\n    props: propsFromTrigger,\n  };\n  const isDisabled = getPredicateValue(disabled, handlerParams);\n  const isHidden = getPredicateValue(hidden, handlerParams);\n\n  function handleClick(e: React.MouseEvent<HTMLElement>) {\n    (handlerParams as ItemParams).event = e;\n    isDisabled ? e.stopPropagation() : onClick(handlerParams as ItemParams);\n  }\n\n  function trackRef(node: HTMLElement | null) {\n    if (node && !isDisabled)\n      refTracker.set(node, {\n        node,\n        isSubmenu: false,\n      });\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLElement>) {\n    if (e.key === 'Enter') {\n      (handlerParams as ItemParams).event = e;\n      onClick(handlerParams as ItemParams);\n    }\n  }\n\n  if (isHidden) return null;\n\n  const cssClasses = cx(STYLE.item, className, {\n    [`${STYLE.itemDisabled}`]: isDisabled,\n  });\n\n  return (\n    <div\n      {...rest}\n      className={cssClasses}\n      style={style}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      ref={trackRef}\n      tabIndex={-1}\n      role=\"menuitem\"\n      aria-disabled={isDisabled}\n    >\n      <div className={STYLE.itemContent}>{children}</div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { STYLE } from '../constants';\n\nexport function Separator() {\n  return <div className={STYLE.separator} />;\n}\n","import React, { ReactNode, useEffect, useRef, useState } from 'react';\nimport cx from 'clsx';\n\nimport { InternalProps, BooleanPredicate, HandlerParamsEvent } from '../types';\nimport { RefTrackerProvider, useRefTrackerContext } from './RefTrackerProvider';\nimport { useRefTracker } from '../hooks';\nimport { STYLE } from '../constants';\nimport { cloneItems, getPredicateValue } from './utils';\n\nexport interface SubMenuProps\n  extends InternalProps,\n    Omit<React.HTMLAttributes<HTMLElement>, 'hidden'> {\n  /**\n   * Any valid node that can be rendered\n   */\n  label: ReactNode;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Render a custom arrow\n   */\n  arrow?: ReactNode;\n\n  /**\n   * Disable the `Submenu`. If a function is used, a boolean must be returned\n   */\n  disabled?: BooleanPredicate;\n\n  /**\n   * Hide the `Submenu` and his children. If a function is used, a boolean must be returned\n   */\n  hidden?: BooleanPredicate;\n}\n\ninterface SubMenuState {\n  left?: string | number;\n  right?: string | number;\n  top?: string | number;\n  bottom?: string | number;\n}\n\nexport const Submenu: React.FC<SubMenuProps> = ({\n  arrow = '▶',\n  children,\n  disabled = false,\n  hidden = false,\n  label,\n  className,\n  triggerEvent,\n  propsFromTrigger,\n  style,\n  ...rest\n}) => {\n  const menuRefTracker = useRefTrackerContext();\n  const refTracker = useRefTracker();\n  const nodeRef = useRef<HTMLDivElement>(null);\n  const [position, setPosition] = useState<SubMenuState>({\n    left: '100%',\n    top: 0,\n    bottom: 'initial',\n  });\n  const handlerParams = {\n    triggerEvent: triggerEvent as HandlerParamsEvent,\n    props: propsFromTrigger,\n  };\n  const isDisabled = getPredicateValue(disabled, handlerParams);\n  const isHidden = getPredicateValue(hidden, handlerParams);\n\n  useEffect(() => {\n    if (nodeRef.current) {\n      const { innerWidth, innerHeight } = window;\n      const rect = nodeRef.current.getBoundingClientRect();\n      const style: SubMenuState = {};\n\n      if (rect.right < innerWidth) {\n        style.left = '100%';\n        style.right = undefined;\n      } else {\n        style.right = '100%';\n        style.left = undefined;\n      }\n\n      if (rect.bottom > innerHeight) {\n        style.bottom = 0;\n        style.top = 'initial';\n      } else {\n        style.bottom = 'initial';\n      }\n\n      setPosition(style);\n    }\n  }, []);\n\n  function handleClick(e: React.SyntheticEvent) {\n    e.stopPropagation();\n  }\n\n  function trackRef(node: HTMLElement | null) {\n    if (node && !isDisabled)\n      menuRefTracker.set(node, {\n        node,\n        isSubmenu: true,\n        submenuRefTracker: refTracker,\n      });\n  }\n\n  if (isHidden) return null;\n\n  const cssClasses = cx(STYLE.item, className, {\n    [`${STYLE.itemDisabled}`]: isDisabled,\n  });\n\n  const submenuStyle = {\n    ...style,\n    ...position,\n  };\n\n  return (\n    <RefTrackerProvider refTracker={refTracker}>\n      <div\n        {...rest}\n        className={cssClasses}\n        ref={trackRef}\n        tabIndex={-1}\n        role=\"menuitem\"\n        aria-haspopup\n        aria-disabled={isDisabled}\n      >\n        <div className={STYLE.itemContent} onClick={handleClick}>\n          {label}\n          <span className={STYLE.submenuArrow}>{arrow}</span>\n        </div>\n        <div className={STYLE.submenu} ref={nodeRef} style={submenuStyle}>\n          {cloneItems(children, {\n            propsFromTrigger,\n            // injected by the parent\n            triggerEvent: triggerEvent!,\n          })}\n        </div>\n      </div>\n    </RefTrackerProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}