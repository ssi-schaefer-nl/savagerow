{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\Table\\\\DefineColumnDialog\\\\DefineColumnDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst datatypes = [\"string\", \"number\", \"date\"];\nexport default function DefineColumnDialog(props) {\n  _s();\n\n  const {\n    open,\n    onSubmit,\n    handleClose\n  } = props;\n  const [dataType, setDataType] = useState(datatypes[0]);\n  const [nullable, setNullable] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Define Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Define the column by entering the fields below.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              autoFocus: true,\n              margin: \"dense\",\n              id: \"name\",\n              required: true,\n              label: \"Column name\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"datatype\",\n              select: true,\n              required: true,\n              label: \"Datatype\",\n              value: dataType,\n              onChange: e => setDataType(e.target.value),\n              children: datatypes.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              label: \"Nullable\",\n              checked: nullable,\n              onChange: e => {\n                console.log(e.target.value);\n                setNullable(e.target.value);\n              },\n              inputProps: {\n                'aria-label': 'primary checkbox'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DefineColumnDialog, \"qyHGS5uBMDU7i7CtHBm6tpgNDQc=\");\n\n_c = DefineColumnDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefineColumnDialog\");","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/Table/DefineColumnDialog/DefineColumnDialog.js"],"names":["React","useState","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","MenuItem","Checkbox","Grid","datatypes","DefineColumnDialog","props","open","onSubmit","handleClose","dataType","setDataType","nullable","setNullable","e","target","value","map","option","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst datatypes = [\r\n    \"string\",\r\n    \"number\",\r\n    \"date\"\r\n]\r\n\r\nexport default function DefineColumnDialog(props) {\r\n    const { open, onSubmit, handleClose } = props\r\n    const [dataType, setDataType] = useState(datatypes[0])\r\n    const [nullable, setNullable] = useState(true)\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Define Column</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <DialogContentText>\r\n                            Define the column by entering the fields below.\r\n                    </DialogContentText>\r\n                        <Grid item>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"name\"\r\n                                required\r\n                                label=\"Column name\"\r\n                                fullWidth\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField\r\n                                id=\"datatype\"\r\n                                select\r\n                                required\r\n                                label=\"Datatype\"\r\n                                value={dataType}\r\n                                onChange={(e) => setDataType(e.target.value)}\r\n                            >\r\n                                {datatypes.map((option) => (\r\n                                    <MenuItem key={option} value={option}>\r\n                                        {option}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Checkbox\r\n                                label=\"Nullable\"\r\n                                checked={nullable}\r\n                                onChange={(e) => {console.log(e.target.value); setNullable(e.target.value)}}\r\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n\r\n\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Subscribe\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}