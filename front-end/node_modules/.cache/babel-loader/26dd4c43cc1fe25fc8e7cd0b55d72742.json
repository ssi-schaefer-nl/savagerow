{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\playground\\\\src\\\\Components\\\\Tables\\\\SavageTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default App = _s(() => {\n  _s();\n\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const [rowData, setRowData] = useState([{\n    make: \"Toyota\",\n    model: \"Celica\",\n    price: 35000\n  }, {\n    make: \"Ford\",\n    model: \"Mondeo\",\n    price: 32000\n  }, {\n    make: \"Porsche\",\n    model: \"Boxter\",\n    price: 72000\n  }]);\n\n  const onGridReady = params => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: 400,\n      width: 600\n    },\n    children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n      onGridReady: onGridReady,\n      rowData: rowData,\n      children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"make\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}, \"bMgubsDobxPbcOBFuANudAjrSf0=\");","map":{"version":3,"sources":["C:/Users/vincent/git/playground/src/Components/Tables/SavageTable.js"],"names":["React","useState","AgGridColumn","AgGridReact","App","gridApi","setGridApi","gridColumnApi","setGridColumnApi","rowData","setRowData","make","model","price","onGridReady","params","api","columnApi","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,eAA1C;AAEA,OAAO,oBAAP;AACA,OAAO,2CAAP;AACA,OAAO,mDAAP;;AAEA,eAAeC,GAAG,MAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CACnC;AAAEU,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAE,QAAzB;AAAmCC,IAAAA,KAAK,EAAE;AAA1C,GADmC,EAEnC;AAAEF,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE,QAAvB;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GAFmC,EAGnC;AAAEF,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,KAAK,EAAE,QAA1B;AAAoCC,IAAAA,KAAK,EAAE;AAA3C,GAHmC,CAAD,CAAtC;;AAMA,QAAMC,WAAW,GAAGC,MAAM,IAAI;AAC1BT,IAAAA,UAAU,CAACS,MAAM,CAACC,GAAR,CAAV;AACAR,IAAAA,gBAAgB,CAACO,MAAM,CAACE,SAAR,CAAhB;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAxC;AAAA,2BACI,QAAC,WAAD;AACI,MAAA,WAAW,EAAEL,WADjB;AAEI,MAAA,OAAO,EAAEL,OAFb;AAAA,8BAGI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA1BiB,iCAAlB","sourcesContent":["import React, { useState } from 'react';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\n\r\nimport 'ag-grid-enterprise';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n\r\nexport default App = () => {\r\n    const [gridApi, setGridApi] = useState(null);\r\n    const [gridColumnApi, setGridColumnApi] = useState(null);\r\n\r\n    const [rowData, setRowData] = useState([\r\n        { make: \"Toyota\", model: \"Celica\", price: 35000 },\r\n        { make: \"Ford\", model: \"Mondeo\", price: 32000 },\r\n        { make: \"Porsche\", model: \"Boxter\", price: 72000 }\r\n    ]);\r\n\r\n    const onGridReady = params => {\r\n        setGridApi(params.api);\r\n        setGridColumnApi(params.columnApi);\r\n    }\r\n\r\n    return (\r\n        <div className=\"ag-theme-alpine\" style={{ height: 400, width: 600 }}>\r\n            <AgGridReact\r\n                onGridReady={onGridReady}\r\n                rowData={rowData}>\r\n                <AgGridColumn field=\"make\"></AgGridColumn>\r\n                <AgGridColumn field=\"model\"></AgGridColumn>\r\n                <AgGridColumn field=\"price\"></AgGridColumn>\r\n            </AgGridReact>\r\n        </div>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}