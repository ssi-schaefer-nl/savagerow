{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\Table\\\\DataGridTable.js\",\n    _s = $RefreshSig$();\n\nimport DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\nimport React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './react-contextmenu.css';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport './highlight.css';\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 12\n  }\n}))(Tooltip);\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nconst DataGridTable = props => {\n  _s();\n\n  const [columnFilter, setColumnFilter] = useState([]);\n  const classes = useStyles();\n\n  if (props.columns.length == 0) {\n    return null;\n  }\n\n  const columns = props.columns.map(col => ({\n    key: col.column,\n    name: col.column,\n    resizable: true,\n    nullable: col.nullable,\n    editor: col.editable ? TextEditor : undefined\n  }));\n  var rows = [...props.rows];\n  const onRowChange = props.onRowChange;\n  const highlightedRows = props.highlightRows ? props.highlightRows : [];\n\n  const onRowDelete = (e, {\n    rowIdx\n  }) => {\n    props.onDelete(rowIdx);\n  };\n\n  const onRowInsertAbove = (e, {\n    rowIdx\n  }) => {\n    props.onInsertAbove(rowIdx);\n  };\n\n  const onRowInsertBelow = (e, {\n    rowIdx\n  }) => {\n    props.onInsertBelow(rowIdx);\n  };\n\n  const onRowSave = (e, {\n    rowIdx\n  }) => {\n    props.onSave(rowIdx);\n  };\n\n  const onRefresh = (e, {\n    rowIdx\n  }) => {\n    props.onRefresh(rowIdx);\n  };\n\n  const RowRenderer = props => {\n    var classname = \"row\";\n    var rowTooltip = \"Row \" + props.rowIdx;\n    var highlightedRow = highlightedRows.find(hr => hr.id == props.rowIdx);\n\n    if (highlightedRow != undefined) {\n      rowTooltip = rowTooltip.concat(\" - \" + highlightedRow.message);\n      classname = highlightedRow.type === \"warning\" ? \"row-warning\" : \"row-error\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(ContextMenuTrigger, {\n      id: \"grid-context-menu\",\n      collect: () => ({\n        rowIdx: props.rowIdx\n      }),\n      holdToDisplay: \"-1\",\n      children: /*#__PURE__*/_jsxDEV(LightTooltip, {\n        title: rowTooltip,\n        enterDelay: 1000,\n        enterNextDelay: 1000,\n        interactive: true,\n        placement: \"bottom-start\",\n        arrow: true,\n        children: /*#__PURE__*/_jsxDEV(GridRow, { ...props,\n          className: classname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Filter columns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-mutiple-name-label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-mutiple-name-label\",\n            id: \"demo-mutiple-name\",\n            multiple: true,\n            onChange: console.log,\n            input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 36\n            }, this),\n            MenuProps: MenuProps,\n            children: columns.map(c => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: c.key,\n              children: c.key\n            }, c.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: columnFilter.length > 0 ? columns.filter(c => columnFilter.includes(c.key)) : columns,\n      rows: rows,\n      onRowsChange: (updatedRows, index) => {\n        var idx = index.indexes[0];\n        rows[idx] = updatedRows[idx];\n        onRowChange(updatedRows[idx], idx);\n      },\n      rowGetter: i => rows[i],\n      enableCellSelect: true,\n      rowRenderer: RowRenderer,\n      style: {\n        marginTop: '1em',\n        'height': \"65vh\",\n        overflowX: 'hidden'\n      },\n      className: \"fill-grid\",\n      minHeight: \"1000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContextMenu, {\n      id: \"grid-context-menu\",\n      style: {\n        background: \"#fafafa\",\n        borderRadius: \"0px 30px 0px 0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRowSave,\n        children: \"Save Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRowDelete,\n        children: \"Delete Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SubMenu, {\n        title: \"Insert Row\",\n        onClick: onRowInsertAbove,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: onRowInsertAbove,\n          children: \"Above\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: onRowInsertBelow,\n          children: \"Below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRefresh,\n        children: \"Refresh table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DataGridTable, \"gFUfBw5PgFADIhwLNFRJ2c0WfN0=\", false, function () {\n  return [useStyles];\n});\n\n_c = DataGridTable;\nexport default DataGridTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataGridTable\");","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/Table/DataGridTable.js"],"names":["DataGrid","TextEditor","Row","GridRow","React","useState","withStyles","makeStyles","ContextMenu","MenuItem","SubMenu","ContextMenuTrigger","Tooltip","Input","InputLabel","Select","FormControl","Grid","Typography","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","useStyles","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","DataGridTable","props","columnFilter","setColumnFilter","classes","columns","length","map","col","key","column","name","resizable","nullable","editor","editable","undefined","rows","onRowChange","highlightedRows","highlightRows","onRowDelete","e","rowIdx","onDelete","onRowInsertAbove","onInsertAbove","onRowInsertBelow","onInsertBelow","onRowSave","onSave","onRefresh","RowRenderer","classname","rowTooltip","highlightedRow","find","hr","id","concat","message","type","console","log","c","filter","includes","updatedRows","index","idx","indexes","i","overflowX","background","borderRadius"],"mappings":"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","sourcesContent":["import DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\r\nimport React, { useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport './react-contextmenu.css'\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport './highlight.css'\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.white,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 12,\r\n    },\r\n}))(Tooltip);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      maxWidth: 300,\r\n    },\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\nconst DataGridTable = (props) => {\r\n    const [columnFilter, setColumnFilter] = useState([])\r\n    const classes = useStyles();\r\n\r\n    if (props.columns.length == 0) {\r\n        return null\r\n    }\r\n\r\n    const columns = props.columns.map(col => ({\r\n        key: col.column,\r\n        name: col.column,\r\n        resizable: true,\r\n        nullable: col.nullable,\r\n        editor: col.editable ? TextEditor : undefined\r\n    }));\r\n\r\n    var rows = [...props.rows]\r\n    const onRowChange = props.onRowChange\r\n    const highlightedRows = props.highlightRows ? props.highlightRows : []\r\n\r\n\r\n    const onRowDelete = (e, { rowIdx }) => {\r\n        props.onDelete(rowIdx)\r\n    }\r\n\r\n    const onRowInsertAbove = (e, { rowIdx }) => {\r\n        props.onInsertAbove(rowIdx)\r\n    }\r\n\r\n    const onRowInsertBelow = (e, { rowIdx }) => {\r\n        props.onInsertBelow(rowIdx)\r\n    }\r\n\r\n    const onRowSave = (e, { rowIdx }) => {\r\n        props.onSave(rowIdx)\r\n    }\r\n\r\n\r\n    const onRefresh = (e, { rowIdx }) => {\r\n        props.onRefresh(rowIdx)\r\n    }\r\n\r\n    const RowRenderer = (props) => {\r\n        var classname = \"row\"\r\n        var rowTooltip = \"Row \" + props.rowIdx\r\n\r\n        var highlightedRow = highlightedRows.find(hr => hr.id == props.rowIdx)\r\n        if (highlightedRow != undefined) {\r\n            rowTooltip = rowTooltip.concat(\" - \" + highlightedRow.message)\r\n            classname = highlightedRow.type === \"warning\" ? \"row-warning\" : \"row-error\"\r\n        }\r\n\r\n        return (\r\n            <ContextMenuTrigger id=\"grid-context-menu\" collect={() => ({ rowIdx: props.rowIdx })} holdToDisplay=\"-1\">\r\n                <LightTooltip\r\n                    title={rowTooltip}\r\n                    enterDelay={1000}\r\n                    enterNextDelay={1000}\r\n                    interactive\r\n                    placement=\"bottom-start\"\r\n                    arrow\r\n                >\r\n                    <GridRow {...props} className={classname} />\r\n                </LightTooltip>\r\n            </ContextMenuTrigger>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={2}>\r\n                <Grid item>\r\n                    <Typography>Filter columns</Typography>\r\n                </Grid>\r\n                <Grid item xs={3} >\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-mutiple-name-label\">Name</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-mutiple-name-label\"\r\n                            id=\"demo-mutiple-name\"\r\n                            multiple\r\n                            onChange={console.log}\r\n                            input={<Input />}\r\n                            MenuProps={MenuProps}\r\n                        >\r\n                            {columns.map((c) => (\r\n                                <MenuItem key={c.key} value={c.key}>\r\n                                    {c.key}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    {/* <Select\r\n                        isMulti\r\n                        options={columns.map(col => ({ value: col.key, label: col.key }))}\r\n                        onChange={(e) => setColumnFilter(e.map(f => f.value))}\r\n                        placeholder=\"Column filters\"\r\n                        closeMenuOnSelect={false}\r\n\r\n                    /> */}\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n            <DataGrid\r\n                columns={columnFilter.length > 0 ? columns.filter(c => columnFilter.includes(c.key)) : columns}\r\n                rows={rows}\r\n                onRowsChange={(updatedRows, index) => {\r\n                    var idx = index.indexes[0]\r\n                    rows[idx] = updatedRows[idx]\r\n                    onRowChange(updatedRows[idx], idx)\r\n                }}\r\n                rowGetter={i => rows[i]}\r\n                enableCellSelect={true}\r\n                rowRenderer={RowRenderer}\r\n                style={{ marginTop: '1em', 'height': \"65vh\", overflowX: 'hidden' }}\r\n                className=\"fill-grid\"\r\n                minHeight=\"1000\"\r\n            />\r\n\r\n            <ContextMenu\r\n                id=\"grid-context-menu\"\r\n                style={{ background: \"#fafafa\", borderRadius: \"0px 30px 0px 0px\" }}\r\n            >\r\n                <MenuItem onClick={onRowSave}>Save Row</MenuItem>\r\n                <MenuItem onClick={onRowDelete}>Delete Row</MenuItem>\r\n                <SubMenu title=\"Insert Row\" onClick={onRowInsertAbove}>\r\n                    <MenuItem onClick={onRowInsertAbove}>Above</MenuItem>\r\n                    <MenuItem onClick={onRowInsertBelow}>Below</MenuItem>\r\n                </SubMenu>\r\n                <MenuItem divider />\r\n                <MenuItem onClick={onRefresh}>Refresh table</MenuItem>\r\n                <MenuItem divider />\r\n                <MenuItem ><b>Cancel</b></MenuItem>\r\n            </ContextMenu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataGridTable"]},"metadata":{},"sourceType":"module"}