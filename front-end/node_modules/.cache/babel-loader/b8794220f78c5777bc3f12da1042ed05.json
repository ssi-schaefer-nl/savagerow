{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\playground\\\\src\\\\Views\\\\ConfigureSavageRow.js\";\nimport React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ConfigureService from '../Service/ConfigureService';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Configure extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configureService: new ConfigureService(),\n      database: null,\n      databases: [],\n      anchorEl: null\n    };\n\n    this.loadDatabases = () => {\n      this.state.configureService.getCurrentDatabase(function (data) {\n        this.setState({\n          database: data.data\n        });\n      }.bind(this), function (data) {\n        console.log(data);\n      }.bind(this));\n      this.state.configureService.listAllDatabases(function (data) {\n        this.setState({\n          databases: data.data\n        });\n      }.bind(this), function (data) {\n        console.log(data);\n      }.bind(this));\n    };\n\n    this.handleChange = e => {\n      var database = e.target.value;\n      console.log(database);\n      this.state.configureService.changeDatabases(database, function (data) {\n        console.log(\"changed db\");\n        this.setState({\n          database: database\n        });\n      }.bind(this), function (data) {\n        console.log(\"did not change db\");\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.loadDatabases();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        noWrap: true,\n        children: \"Configure Database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        style: {\n          margin: 1,\n          minWidth: 120\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          shrink: false,\n          id: \"demo-simple-select-label\",\n          children: \"Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          value: this.state.database,\n          onChange: this.handleChange,\n          children: this.state.databases.map(d => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: d,\n            children: d\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Configure;","map":{"version":3,"sources":["C:/Users/vincent/git/playground/src/Views/ConfigureSavageRow.js"],"names":["React","TextField","makeStyles","Typography","ConfigureService","InputLabel","MenuItem","FormHelperText","FormControl","Select","Configure","Component","constructor","props","state","configureService","database","databases","anchorEl","loadDatabases","getCurrentDatabase","data","setState","bind","console","log","listAllDatabases","handleChange","e","target","value","changeDatabases","componentDidMount","render","margin","minWidth","map","d"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ConfigureService from '../Service/ConfigureService'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n   \r\nclass Configure extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        configureService: new ConfigureService(),\r\n        database: null,\r\n        databases: [],\r\n        anchorEl: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadDatabases()\r\n    }\r\n\r\n    loadDatabases = () => {\r\n        this.state.configureService.getCurrentDatabase(\r\n            function (data) {\r\n                this.setState({ database: data.data })\r\n            }.bind(this),\r\n            function (data) {\r\n                console.log(data)\r\n            }.bind(this));\r\n\r\n        this.state.configureService.listAllDatabases(\r\n            function (data) {\r\n                this.setState({ databases: data.data })\r\n            }.bind(this),\r\n            function (data) {\r\n                console.log(data)\r\n            }.bind(this));\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        var database = e.target.value\r\n        console.log(database)\r\n\r\n        this.state.configureService.changeDatabases(\r\n            database,\r\n            function (data) {\r\n                console.log(\"changed db\")\r\n                this.setState({ database: database })\r\n            }.bind(this),\r\n            function (data) {\r\n                console.log(\"did not change db\")\r\n            });\r\n    }\r\n\r\n    render() {\r\n        \r\n\r\n\r\n        return (\r\n            <>\r\n                <Typography variant=\"h6\" noWrap>Configure Database</Typography>\r\n                <FormControl style={{margin: 1, minWidth: 120}}>\r\n                    <InputLabel                         shrink={false}\r\n id=\"demo-simple-select-label\">Database</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={this.state.database}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        {this.state.databases.map(d => (\r\n                            <MenuItem value={d}>{d}</MenuItem>\r\n                        ))}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Configure;\r\n"]},"metadata":{},"sourceType":"module"}