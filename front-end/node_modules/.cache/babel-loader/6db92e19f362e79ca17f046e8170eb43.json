{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\Table\\\\DataGrid\\\\DataGridTable.js\",\n    _s = $RefreshSig$();\n\nimport DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\nimport React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './react-contextmenu.css';\nimport './highlight.css';\nimport { TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 12\n  }\n}))(Tooltip);\n\nconst DataGridTable = props => {\n  _s();\n\n  const [renameColumn, setRenameColumn] = useState(null);\n  const [newColumnName, setNewColumnName] = useState(null);\n\n  if (props.columns.length == 0) {\n    return null;\n  }\n\n  var rows = [...props.rows];\n  const onRowChange = props.onRowChange;\n  const highlightedRows = props.highlightRows ? props.highlightRows : [];\n\n  const HeaderRenderer = item => {\n    if (renameColumn == item.column.key) {\n      setNewColumnName(renameColumn);\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          autoComplete: \"off\",\n          margin: \"dense\",\n          id: \"name\",\n          value: newColumnName,\n          onChange: e => setNewColumnName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ContextMenuTrigger, {\n        id: \"header-context-menu\",\n        collect: () => ({\n          column: item.column.key\n        }),\n        holdToDisplay: \"-1\",\n        children: item.column.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const columns = props.columns.map(col => ({\n    key: col.column,\n    name: col.column,\n    headerRenderer: HeaderRenderer,\n    resizable: true,\n    nullable: col.nullable,\n    editor: col.editable ? TextEditor : undefined\n  }));\n\n  const onRowDelete = (e, {\n    rowIdx\n  }) => props.onDelete(rowIdx);\n\n  const onRowInsert = (e, {\n    rowIdx\n  }) => props.onInsert(rowIdx);\n\n  const onRowSave = (e, {\n    rowIdx\n  }) => props.onSave(rowIdx);\n\n  const onRefresh = (e, {\n    rowIdx\n  }) => props.onRefresh(rowIdx);\n\n  const onColumnDelete = (e, {\n    column\n  }) => props.onColumnDelete(column);\n\n  const onColumnRename = (e, {\n    column\n  }) => setRenameColumn(column);\n\n  const onColumnInsert = (e, {\n    column\n  }) => props.onColumnInsert(column);\n\n  console.log(renameColumn);\n\n  const RowRenderer = props => {\n    var classname = \"row\";\n    var rowTooltip = \"Row \" + props.rowIdx;\n    var highlightedRow = highlightedRows.find(hr => hr.id == props.rowIdx);\n\n    if (highlightedRow != undefined) {\n      rowTooltip = rowTooltip.concat(\" - \" + highlightedRow.message);\n      classname = highlightedRow.type === \"warning\" ? \"row-warning\" : \"row-error\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(ContextMenuTrigger, {\n      id: \"grid-context-menu\",\n      collect: () => ({\n        rowIdx: props.rowIdx\n      }),\n      holdToDisplay: \"-1\",\n      children: /*#__PURE__*/_jsxDEV(LightTooltip, {\n        title: rowTooltip,\n        enterDelay: 1000,\n        enterNextDelay: 1000,\n        interactive: true,\n        placement: \"bottom-start\",\n        arrow: true,\n        children: /*#__PURE__*/_jsxDEV(GridRow, { ...props,\n          className: classname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: columns,\n      rows: rows,\n      onRowsChange: (updatedRows, index) => {\n        var idx = index.indexes[0];\n        rows[idx] = updatedRows[idx];\n        onRowChange(updatedRows[idx], idx);\n      },\n      rowGetter: i => rows[i],\n      enableCellSelect: true,\n      rowRenderer: RowRenderer,\n      headerRenderer: HeaderRenderer,\n      style: {\n        marginTop: '1em',\n        'height': \"65vh\",\n        overflowX: 'hidden'\n      },\n      className: \"fill-grid\",\n      minHeight: \"1000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContextMenu, {\n      id: \"grid-context-menu\",\n      style: {\n        background: \"#fafafa\",\n        borderRadius: \"0px 30px 0px 0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        disabled: true,\n        children: \"Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRowSave,\n        children: \"Save Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRowDelete,\n        children: \"Delete Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRowInsert,\n        children: \"Insert Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRefresh,\n        children: \"Refresh table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContextMenu, {\n      id: \"header-context-menu\",\n      style: {\n        background: \"#fafafa\",\n        borderRadius: \"0px 30px 0px 0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        disabled: true,\n        children: \"Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onColumnDelete,\n        children: \"Delete Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onColumnRename,\n        children: \"Rename Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onColumnInsert,\n        children: \"Add Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DataGridTable, \"X+dnwHrzMifSVZVm7+O9RETCF2k=\");\n\n_c = DataGridTable;\nexport default DataGridTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataGridTable\");","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/Table/DataGrid/DataGridTable.js"],"names":["DataGrid","TextEditor","Row","GridRow","React","useState","withStyles","makeStyles","ContextMenu","MenuItem","SubMenu","ContextMenuTrigger","Tooltip","TextField","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","DataGridTable","props","renameColumn","setRenameColumn","newColumnName","setNewColumnName","columns","length","rows","onRowChange","highlightedRows","highlightRows","HeaderRenderer","item","column","key","e","target","value","name","map","col","headerRenderer","resizable","nullable","editor","editable","undefined","onRowDelete","rowIdx","onDelete","onRowInsert","onInsert","onRowSave","onSave","onRefresh","onColumnDelete","onColumnRename","onColumnInsert","console","log","RowRenderer","classname","rowTooltip","highlightedRow","find","hr","id","concat","message","type","updatedRows","index","idx","indexes","i","marginTop","overflowX","background","borderRadius"],"mappings":"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","sourcesContent":["import DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\r\nimport React, { useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport './react-contextmenu.css'\r\nimport './highlight.css'\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.white,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 12,\r\n    },\r\n}))(Tooltip);\r\n\r\n\r\n\r\nconst DataGridTable = (props) => {\r\n    const [renameColumn, setRenameColumn] = useState(null)\r\n    const [newColumnName, setNewColumnName] = useState(null)\r\n\r\n    if (props.columns.length == 0) {\r\n        return null\r\n    }\r\n\r\n    var rows = [...props.rows]\r\n    const onRowChange = props.onRowChange\r\n    const highlightedRows = props.highlightRows ? props.highlightRows : []\r\n\r\n\r\n    const HeaderRenderer = (item) => {\r\n        if (renameColumn == item.column.key) {\r\n            setNewColumnName(renameColumn)\r\n            return (\r\n                <form noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        autoFocus\r\n                        autoComplete='off'\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        value={newColumnName}\r\n                        onChange={(e) => setNewColumnName(e.target.value)}\r\n                        required\r\n                    />\r\n                </form>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <ContextMenuTrigger id=\"header-context-menu\" collect={() => ({ column: item.column.key })} holdToDisplay=\"-1\">\r\n\r\n                    {item.column.name}\r\n                </ContextMenuTrigger>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\nconst columns = props.columns.map(col => ({\r\n    key: col.column,\r\n    name: col.column,\r\n    headerRenderer: HeaderRenderer,\r\n    resizable: true,\r\n    nullable: col.nullable,\r\n    editor: col.editable ? TextEditor : undefined\r\n}));\r\n\r\n\r\nconst onRowDelete = (e, { rowIdx }) => props.onDelete(rowIdx)\r\nconst onRowInsert = (e, { rowIdx }) => props.onInsert(rowIdx)\r\nconst onRowSave = (e, { rowIdx }) => props.onSave(rowIdx)\r\nconst onRefresh = (e, { rowIdx }) => props.onRefresh(rowIdx)\r\nconst onColumnDelete = (e, { column }) => props.onColumnDelete(column)\r\nconst onColumnRename = (e, { column }) => setRenameColumn(column)\r\nconst onColumnInsert = (e, { column }) => props.onColumnInsert(column)\r\n\r\n\r\nconsole.log(renameColumn)\r\nconst RowRenderer = (props) => {\r\n    var classname = \"row\"\r\n    var rowTooltip = \"Row \" + props.rowIdx\r\n\r\n    var highlightedRow = highlightedRows.find(hr => hr.id == props.rowIdx)\r\n    if (highlightedRow != undefined) {\r\n        rowTooltip = rowTooltip.concat(\" - \" + highlightedRow.message)\r\n        classname = highlightedRow.type === \"warning\" ? \"row-warning\" : \"row-error\"\r\n    }\r\n\r\n    return (\r\n        <ContextMenuTrigger id=\"grid-context-menu\" collect={() => ({ rowIdx: props.rowIdx })} holdToDisplay=\"-1\">\r\n            <LightTooltip\r\n                title={rowTooltip}\r\n                enterDelay={1000}\r\n                enterNextDelay={1000}\r\n                interactive\r\n                placement=\"bottom-start\"\r\n                arrow\r\n            >\r\n                <GridRow {...props} className={classname} />\r\n            </LightTooltip>\r\n        </ContextMenuTrigger>\r\n    );\r\n}\r\n\r\n\r\nreturn (\r\n    <>\r\n        <DataGrid\r\n            columns={columns}\r\n            rows={rows}\r\n            onRowsChange={(updatedRows, index) => {\r\n                var idx = index.indexes[0]\r\n                rows[idx] = updatedRows[idx]\r\n                onRowChange(updatedRows[idx], idx)\r\n            }}\r\n            rowGetter={i => rows[i]}\r\n            enableCellSelect={true}\r\n            rowRenderer={RowRenderer}\r\n            headerRenderer={HeaderRenderer}\r\n            style={{ marginTop: '1em', 'height': \"65vh\", overflowX: 'hidden' }}\r\n            className=\"fill-grid\"\r\n            minHeight=\"1000\"\r\n        />\r\n\r\n        <ContextMenu\r\n            id=\"grid-context-menu\"\r\n            style={{ background: \"#fafafa\", borderRadius: \"0px 30px 0px 0px\" }}\r\n        >\r\n            <MenuItem disabled>Row</MenuItem>\r\n            <MenuItem onClick={onRowSave}>Save Row</MenuItem>\r\n            <MenuItem onClick={onRowDelete}>Delete Row</MenuItem>\r\n            <MenuItem onClick={onRowInsert}>Insert Row</MenuItem>\r\n            <MenuItem divider />\r\n            <MenuItem onClick={onRefresh}>Refresh table</MenuItem>\r\n            <MenuItem divider />\r\n            <MenuItem ><b>Cancel</b></MenuItem>\r\n        </ContextMenu>\r\n\r\n        <ContextMenu\r\n            id=\"header-context-menu\"\r\n            style={{ background: \"#fafafa\", borderRadius: \"0px 30px 0px 0px\" }}\r\n        >\r\n            <MenuItem disabled>Column</MenuItem>\r\n            <MenuItem onClick={onColumnDelete}>Delete Column</MenuItem>\r\n            <MenuItem onClick={onColumnRename}>Rename Column</MenuItem>\r\n            <MenuItem onClick={onColumnInsert}>Add Column</MenuItem>\r\n\r\n        </ContextMenu>\r\n    </>\r\n)\r\n}\r\n\r\nexport default DataGridTable"]},"metadata":{},"sourceType":"module"}