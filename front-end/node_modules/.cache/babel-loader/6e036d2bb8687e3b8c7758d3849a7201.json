{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createSourceConnector;\n\nvar _wrapConnectorHooks = require('./wrapConnectorHooks');\n\nvar _wrapConnectorHooks2 = _interopRequireDefault(_wrapConnectorHooks);\n\nvar _areOptionsEqual = require('./areOptionsEqual');\n\nvar _areOptionsEqual2 = _interopRequireDefault(_areOptionsEqual);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction createSourceConnector(backend) {\n  var currentHandlerId = void 0;\n  var currentDragSourceNode = void 0;\n  var currentDragSourceOptions = void 0;\n  var disconnectCurrentDragSource = void 0;\n  var currentDragPreviewNode = void 0;\n  var currentDragPreviewOptions = void 0;\n  var disconnectCurrentDragPreview = void 0;\n\n  function reconnectDragSource() {\n    if (disconnectCurrentDragSource) {\n      disconnectCurrentDragSource();\n      disconnectCurrentDragSource = null;\n    }\n\n    if (currentHandlerId && currentDragSourceNode) {\n      disconnectCurrentDragSource = backend.connectDragSource(currentHandlerId, currentDragSourceNode, currentDragSourceOptions);\n    }\n  }\n\n  function reconnectDragPreview() {\n    if (disconnectCurrentDragPreview) {\n      disconnectCurrentDragPreview();\n      disconnectCurrentDragPreview = null;\n    }\n\n    if (currentHandlerId && currentDragPreviewNode) {\n      disconnectCurrentDragPreview = backend.connectDragPreview(currentHandlerId, currentDragPreviewNode, currentDragPreviewOptions);\n    }\n  }\n\n  function receiveHandlerId(handlerId) {\n    if (handlerId === currentHandlerId) {\n      return;\n    }\n\n    currentHandlerId = handlerId;\n    reconnectDragSource();\n    reconnectDragPreview();\n  }\n\n  var hooks = (0, _wrapConnectorHooks2.default)({\n    dragSource: function connectDragSource(node, options) {\n      if (node === currentDragSourceNode && (0, _areOptionsEqual2.default)(options, currentDragSourceOptions)) {\n        return;\n      }\n\n      currentDragSourceNode = node;\n      currentDragSourceOptions = options;\n      reconnectDragSource();\n    },\n    dragPreview: function connectDragPreview(node, options) {\n      if (node === currentDragPreviewNode && (0, _areOptionsEqual2.default)(options, currentDragPreviewOptions)) {\n        return;\n      }\n\n      currentDragPreviewNode = node;\n      currentDragPreviewOptions = options;\n      reconnectDragPreview();\n    }\n  });\n  return {\n    receiveHandlerId: receiveHandlerId,\n    hooks: hooks\n  };\n}","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/node_modules/react-dnd/lib/createSourceConnector.js"],"names":["Object","defineProperty","exports","value","default","createSourceConnector","_wrapConnectorHooks","require","_wrapConnectorHooks2","_interopRequireDefault","_areOptionsEqual","_areOptionsEqual2","obj","__esModule","backend","currentHandlerId","currentDragSourceNode","currentDragSourceOptions","disconnectCurrentDragSource","currentDragPreviewNode","currentDragPreviewOptions","disconnectCurrentDragPreview","reconnectDragSource","connectDragSource","reconnectDragPreview","connectDragPreview","receiveHandlerId","handlerId","hooks","dragSource","node","options","dragPreview"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = createSourceConnector;\n\nvar _wrapConnectorHooks = require('./wrapConnectorHooks');\n\nvar _wrapConnectorHooks2 = _interopRequireDefault(_wrapConnectorHooks);\n\nvar _areOptionsEqual = require('./areOptionsEqual');\n\nvar _areOptionsEqual2 = _interopRequireDefault(_areOptionsEqual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createSourceConnector(backend) {\n\tvar currentHandlerId = void 0;\n\n\tvar currentDragSourceNode = void 0;\n\tvar currentDragSourceOptions = void 0;\n\tvar disconnectCurrentDragSource = void 0;\n\n\tvar currentDragPreviewNode = void 0;\n\tvar currentDragPreviewOptions = void 0;\n\tvar disconnectCurrentDragPreview = void 0;\n\n\tfunction reconnectDragSource() {\n\t\tif (disconnectCurrentDragSource) {\n\t\t\tdisconnectCurrentDragSource();\n\t\t\tdisconnectCurrentDragSource = null;\n\t\t}\n\n\t\tif (currentHandlerId && currentDragSourceNode) {\n\t\t\tdisconnectCurrentDragSource = backend.connectDragSource(currentHandlerId, currentDragSourceNode, currentDragSourceOptions);\n\t\t}\n\t}\n\n\tfunction reconnectDragPreview() {\n\t\tif (disconnectCurrentDragPreview) {\n\t\t\tdisconnectCurrentDragPreview();\n\t\t\tdisconnectCurrentDragPreview = null;\n\t\t}\n\n\t\tif (currentHandlerId && currentDragPreviewNode) {\n\t\t\tdisconnectCurrentDragPreview = backend.connectDragPreview(currentHandlerId, currentDragPreviewNode, currentDragPreviewOptions);\n\t\t}\n\t}\n\n\tfunction receiveHandlerId(handlerId) {\n\t\tif (handlerId === currentHandlerId) {\n\t\t\treturn;\n\t\t}\n\n\t\tcurrentHandlerId = handlerId;\n\t\treconnectDragSource();\n\t\treconnectDragPreview();\n\t}\n\n\tvar hooks = (0, _wrapConnectorHooks2.default)({\n\t\tdragSource: function connectDragSource(node, options) {\n\t\t\tif (node === currentDragSourceNode && (0, _areOptionsEqual2.default)(options, currentDragSourceOptions)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcurrentDragSourceNode = node;\n\t\t\tcurrentDragSourceOptions = options;\n\n\t\t\treconnectDragSource();\n\t\t},\n\n\t\tdragPreview: function connectDragPreview(node, options) {\n\t\t\tif (node === currentDragPreviewNode && (0, _areOptionsEqual2.default)(options, currentDragPreviewOptions)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcurrentDragPreviewNode = node;\n\t\t\tcurrentDragPreviewOptions = options;\n\n\t\t\treconnectDragPreview();\n\t\t}\n\t});\n\n\treturn {\n\t\treceiveHandlerId: receiveHandlerId,\n\t\thooks: hooks\n\t};\n}"]},"metadata":{},"sourceType":"script"}