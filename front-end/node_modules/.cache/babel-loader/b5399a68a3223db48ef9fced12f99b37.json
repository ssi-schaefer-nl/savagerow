{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\MultiSelect\\\\MultiSelect.js\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MultiSelect = props => {\n  const customStyles = {\n    valueContainer: (provided, state) => ({ ...provided,\n      textOverflow: \"ellipsis\",\n      maxWidth: \"90%\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      display: \"initial\"\n    })\n  };\n\n  const multiValueContainer = ({\n    selectProps,\n    data\n  }) => {\n    const label = data.label;\n    const allSelected = selectProps.value;\n    const index = allSelected.findIndex(selected => selected.label === label);\n    const isLastSelected = index === allSelected.length - 1;\n    const labelSuffix = isLastSelected ? \"\" : \", \";\n    const val = `${label}${labelSuffix}`;\n    return val;\n  };\n\n  const {\n    options,\n    placeholder,\n    onChange\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Select, {\n    options: options,\n    isMulti: true,\n    components: {\n      MultiValueContainer: multiValueContainer\n    },\n    menuContainerStyle: {\n      top: 'auto',\n      bottom: '100%'\n    },\n    onChange: onChange,\n    closeMenuOnSelect: false,\n    hideSelectedOptions: false,\n    styles: customStyles,\n    isSearchable: false,\n    placeholder: placeholder\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}; // MultiSelect.propTypes = {\n//   optionGroups: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       label: PropTypes.string, //for group\n//       options: PropTypes.arrayOf(\n//         // group options\n//         PropTypes.arrayOf(\n//           PropTypes.shape({\n//             //\n//             value: PropTypes.oneOf([\n//               PropTypes.string,\n//               PropTypes.number,\n//               PropTypes.object\n//             ]).isRequired,\n//             label: PropTypes.string.isRequired\n//           })\n//         ).isRequired\n//       )\n//     })\n//   )\n// };\n\n\n_c = MultiSelect;\nexport default MultiSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiSelect\");","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/MultiSelect/MultiSelect.js"],"names":["React","Select","MultiSelect","props","customStyles","valueContainer","provided","state","textOverflow","maxWidth","whiteSpace","overflow","display","multiValueContainer","selectProps","data","label","allSelected","value","index","findIndex","selected","isLastSelected","length","labelSuffix","val","options","placeholder","onChange","MultiValueContainer","top","bottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;;;AAIA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,cAAc,EAAE,CAACC,QAAD,EAAWC,KAAX,MAAsB,EAClC,GAAGD,QAD+B;AAElCE,MAAAA,YAAY,EAAE,UAFoB;AAGlCC,MAAAA,QAAQ,EAAE,KAHwB;AAIlCC,MAAAA,UAAU,EAAE,QAJsB;AAKlCC,MAAAA,QAAQ,EAAE,QALwB;AAMlCC,MAAAA,OAAO,EAAE;AANyB,KAAtB;AADC,GAArB;;AAWA,QAAMC,mBAAmB,GAAG,CAAC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAD,KAA2B;AACnD,UAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;AACA,UAAMC,WAAW,GAAGH,WAAW,CAACI,KAAhC;AACA,UAAMC,KAAK,GAAGF,WAAW,CAACG,SAAZ,CAAsBC,QAAQ,IAAIA,QAAQ,CAACL,KAAT,KAAmBA,KAArD,CAAd;AACA,UAAMM,cAAc,GAAGH,KAAK,KAAKF,WAAW,CAACM,MAAZ,GAAqB,CAAtD;AACA,UAAMC,WAAW,GAAGF,cAAc,GAAG,EAAH,GAAQ,IAA1C;AACA,UAAMG,GAAG,GAAI,GAAET,KAAM,GAAEQ,WAAY,EAAnC;AACA,WAAOC,GAAP;AACH,GARD;;AAWA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,MAAqCzB,KAA3C;AAGA,sBACI,QAAC,MAAD;AACI,IAAA,OAAO,EAAEuB,OADb;AAEI,IAAA,OAAO,MAFX;AAGI,IAAA,UAAU,EAAE;AACRG,MAAAA,mBAAmB,EAAEhB;AADb,KAHhB;AAMI,IAAA,kBAAkB,EAAE;AAACiB,MAAAA,GAAG,EAAE,MAAN;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KANxB;AAOI,IAAA,QAAQ,EAAEH,QAPd;AAQI,IAAA,iBAAiB,EAAE,KARvB;AASI,IAAA,mBAAmB,EAAE,KATzB;AAUI,IAAA,MAAM,EAAExB,YAVZ;AAWI,IAAA,YAAY,EAAE,KAXlB;AAYI,IAAA,WAAW,EAAEuB;AAZjB;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA7CD,C,CA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAlEMzB,W;AAqEN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport Select from \"react-select\";\r\n\r\n\r\n\r\nconst MultiSelect = (props) => {\r\n\r\n    const customStyles = {\r\n        valueContainer: (provided, state) => ({\r\n            ...provided,\r\n            textOverflow: \"ellipsis\",\r\n            maxWidth: \"90%\",\r\n            whiteSpace: \"nowrap\",\r\n            overflow: \"hidden\",\r\n            display: \"initial\"\r\n        })\r\n    };\r\n\r\n    const multiValueContainer = ({ selectProps, data }) => {\r\n        const label = data.label;\r\n        const allSelected = selectProps.value;\r\n        const index = allSelected.findIndex(selected => selected.label === label);\r\n        const isLastSelected = index === allSelected.length - 1;\r\n        const labelSuffix = isLastSelected ? \"\" : \", \";\r\n        const val = `${label}${labelSuffix}`;\r\n        return val;\r\n    };\r\n\r\n\r\n    const { options, placeholder, onChange } = props;\r\n\r\n\r\n    return (\r\n        <Select\r\n            options={options}\r\n            isMulti\r\n            components={{\r\n                MultiValueContainer: multiValueContainer\r\n            }}\r\n            menuContainerStyle={{top: 'auto', bottom: '100%'}}\r\n            onChange={onChange}\r\n            closeMenuOnSelect={false}\r\n            hideSelectedOptions={false}\r\n            styles={customStyles}\r\n            isSearchable={false}\r\n            placeholder={placeholder}\r\n        />\r\n\r\n    );\r\n\r\n}\r\n// MultiSelect.propTypes = {\r\n//   optionGroups: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       label: PropTypes.string, //for group\r\n//       options: PropTypes.arrayOf(\r\n//         // group options\r\n//         PropTypes.arrayOf(\r\n//           PropTypes.shape({\r\n//             //\r\n//             value: PropTypes.oneOf([\r\n//               PropTypes.string,\r\n//               PropTypes.number,\r\n//               PropTypes.object\r\n//             ]).isRequired,\r\n//             label: PropTypes.string.isRequired\r\n//           })\r\n//         ).isRequired\r\n//       )\r\n//     })\r\n//   )\r\n// };\r\n\r\n\r\nexport default MultiSelect"]},"metadata":{},"sourceType":"module"}