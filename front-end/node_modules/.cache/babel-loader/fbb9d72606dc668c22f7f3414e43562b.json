{"ast":null,"code":"var filterRows = function (filters, rows) {\n  if (rows === void 0) {\n    rows = [];\n  }\n\n  return rows.filter(function (r) {\n    var include = true;\n\n    for (var columnKey in filters) {\n      if (filters.hasOwnProperty(columnKey)) {\n        var colFilter = filters[columnKey]; // check if custom filter function exists\n\n        if (colFilter.filterValues && typeof colFilter.filterValues === 'function') {\n          include &= colFilter.filterValues(r, colFilter, columnKey);\n        } else if (typeof colFilter.filterTerm === 'string') {\n          // default filter action\n          var rowValue = r[columnKey];\n\n          if (rowValue !== undefined && rowValue !== null) {\n            if (rowValue.toString().toLowerCase().indexOf(colFilter.filterTerm.toLowerCase()) === -1) {\n              include &= false;\n            }\n          } else {\n            include &= false;\n          }\n        }\n      }\n    }\n\n    return Boolean(include);\n  });\n};\n\nexport default filterRows;","map":{"version":3,"sources":["../../src/data/RowFilterer.js"],"names":[],"mappings":"AAAA,IAAM,UAAU,GAAG,UAAC,OAAD,EAAU,IAAV,EAAmB;AAAT,MAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,EAAA;AAAS;;AACpC,SAAO,IAAI,CAAC,MAAL,CAAY,UAAA,CAAA,EAAC;AAClB,QAAI,OAAO,GAAG,IAAd;;AACA,SAAK,IAAM,SAAX,IAAwB,OAAxB,EAAiC;AAC/B,UAAI,OAAO,CAAC,cAAR,CAAuB,SAAvB,CAAJ,EAAuC;AACrC,YAAM,SAAS,GAAG,OAAO,CAAC,SAAD,CAAzB,CADqC,CAErC;;AACA,YAAI,SAAS,CAAC,YAAV,IAA0B,OAAO,SAAS,CAAC,YAAjB,KAAkC,UAAhE,EAA4E;AAC1E,UAAA,OAAO,IAAI,SAAS,CAAC,YAAV,CAAuB,CAAvB,EAA0B,SAA1B,EAAqC,SAArC,CAAX;AACD,SAFD,MAEO,IAAI,OAAO,SAAS,CAAC,UAAjB,KAAgC,QAApC,EAA8C;AACnD;AACA,cAAM,QAAQ,GAAG,CAAC,CAAC,SAAD,CAAlB;;AACA,cAAI,QAAQ,KAAK,SAAb,IAA0B,QAAQ,KAAK,IAA3C,EAAiD;AAC/C,gBAAI,QAAQ,CAAC,QAAT,GAAoB,WAApB,GAAkC,OAAlC,CAA0C,SAAS,CAAC,UAAV,CAAqB,WAArB,EAA1C,MAAkF,CAAC,CAAvF,EAA0F;AACxF,cAAA,OAAO,IAAI,KAAX;AACD;AACF,WAJD,MAIO;AACL,YAAA,OAAO,IAAI,KAAX;AACD;AACF;AACF;AACF;;AACD,WAAO,OAAO,CAAC,OAAD,CAAd;AACD,GAtBM,CAAP;AAuBD,CAxBD;;AA0BA,eAAe,UAAf","sourcesContent":["const filterRows = (filters, rows = []) => {\n  return rows.filter(r => {\n    let include = true;\n    for (const columnKey in filters) {\n      if (filters.hasOwnProperty(columnKey)) {\n        const colFilter = filters[columnKey];\n        // check if custom filter function exists\n        if (colFilter.filterValues && typeof colFilter.filterValues === 'function') {\n          include &= colFilter.filterValues(r, colFilter, columnKey);\n        } else if (typeof colFilter.filterTerm === 'string') {\n          // default filter action\n          const rowValue = r[columnKey];\n          if (rowValue !== undefined && rowValue !== null) {\n            if (rowValue.toString().toLowerCase().indexOf(colFilter.filterTerm.toLowerCase()) === -1) {\n              include &= false;\n            }\n          } else {\n            include &= false;\n          }\n        }\n      }\n    }\n    return Boolean(include);\n  });\n};\n\nexport default filterRows;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}