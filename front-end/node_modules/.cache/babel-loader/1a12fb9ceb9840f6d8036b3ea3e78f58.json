{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\MultiSelect\\\\MultiSelect.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nconst MultiSelect = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    placeholder,\n    onChange,\n    options\n  } = props;\n  const [selection, setSelection] = React.useState([]);\n  const customStyles = {\n    valueContainer: (provided, state) => ({ ...provided,\n      textOverflow: \"ellipsis\",\n      maxWidth: \"90%\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      display: \"initial\"\n    })\n  };\n\n  const multiValueContainer = ({\n    selectProps,\n    data\n  }) => {\n    const label = data.label;\n    const allSelected = selectProps.value;\n    const index = allSelected.findIndex(selected => selected.label === label);\n    const isLastSelected = index === allSelected.length - 1;\n    const labelSuffix = isLastSelected ? \"\" : \", \";\n    const val = `${label}${labelSuffix}`;\n    return val;\n  };\n\n  const onChangeSelection = event => {\n    console.log(\"--------------------\");\n    console.log(event.target.value);\n    setSelection(event.target.value);\n    onChange(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    className: classes.formControl,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      id: \"demo-mutiple-checkbox-label\",\n      children: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"demo-mutiple-checkbox-label\",\n      id: \"demo-mutiple-checkbox\",\n      multiple: true,\n      value: selection,\n      onChange: onChangeSelection,\n      input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 24\n      }, this),\n      renderValue: selected => {\n        console.log(selected);\n        console.log(\"--------\");\n        selected.join(', ');\n      },\n      MenuProps: MenuProps,\n      children: options.map(o => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: o,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: options.indexOf(o) > -1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: o\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, o, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this) // <Select\n  //     options={options}\n  //     isMulti\n  //     components={{\n  //         MultiValueContainer: multiValueContainer\n  //     }}\n  //     menuPlacement = \"top\"\n  //     onChange={onChange}\n  //     closeMenuOnSelect={false}\n  //     hideSelectedOptions={false}\n  //     styles={customStyles}\n  //     isSearchable={false}\n  //     placeholder={placeholder}\n  // />\n  ;\n}; // MultiSelect.propTypes = {\n//   optionGroups: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       label: PropTypes.string, //for group\n//       options: PropTypes.arrayOf(\n//         // group options\n//         PropTypes.arrayOf(\n//           PropTypes.shape({\n//             //\n//             value: PropTypes.oneOf([\n//               PropTypes.string,\n//               PropTypes.number,\n//               PropTypes.object\n//             ]).isRequired,\n//             label: PropTypes.string.isRequired\n//           })\n//         ).isRequired\n//       )\n//     })\n//   )\n// };\n\n\n_s(MultiSelect, \"FZ+l3vPmzGbZ7Oo+F359DhkGlyY=\", false, function () {\n  return [useStyles];\n});\n\n_c = MultiSelect;\nexport default MultiSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiSelect\");","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/MultiSelect/MultiSelect.js"],"names":["React","makeStyles","useTheme","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","MultiSelect","props","classes","placeholder","onChange","options","selection","setSelection","useState","customStyles","valueContainer","provided","state","textOverflow","whiteSpace","overflow","multiValueContainer","selectProps","data","label","allSelected","value","index","findIndex","selected","isLastSelected","length","labelSuffix","val","onChangeSelection","event","console","log","target","join","map","o","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACrCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADC;AAETC,IAAAA,QAAQ,EAAE,GAFD;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GADwB;AAMrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GAN8B;AAUrCC,EAAAA,IAAI,EAAE;AACFP,IAAAA,MAAM,EAAE;AADN,GAV+B;AAarCQ,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAEX,KAAK,CAACG,OAAN,CAAc,CAAd;AADN;AAb4B,CAAZ,CAAD,CAA5B;AAmBA,MAAMS,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD5B;AAEHK,MAAAA,KAAK,EAAE;AAFJ;AADC;AADE,CAAlB;;AASA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,OAAO,GAAGtB,SAAS,EAAzB;AACA,QAAM;AAACuB,IAAAA,WAAD;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA;AAAxB,MAAoCJ,KAA1C;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BrC,KAAK,CAACsC,QAAN,CAAe,EAAf,CAAlC;AAEA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,cAAc,EAAE,CAACC,QAAD,EAAWC,KAAX,MAAsB,EAClC,GAAGD,QAD+B;AAElCE,MAAAA,YAAY,EAAE,UAFoB;AAGlC3B,MAAAA,QAAQ,EAAE,KAHwB;AAIlC4B,MAAAA,UAAU,EAAE,QAJsB;AAKlCC,MAAAA,QAAQ,EAAE,QALwB;AAMlC3B,MAAAA,OAAO,EAAE;AANyB,KAAtB;AADC,GAArB;;AAWA,QAAM4B,mBAAmB,GAAG,CAAC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAD,KAA2B;AACnD,UAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;AACA,UAAMC,WAAW,GAAGH,WAAW,CAACI,KAAhC;AACA,UAAMC,KAAK,GAAGF,WAAW,CAACG,SAAZ,CAAsBC,QAAQ,IAAIA,QAAQ,CAACL,KAAT,KAAmBA,KAArD,CAAd;AACA,UAAMM,cAAc,GAAGH,KAAK,KAAKF,WAAW,CAACM,MAAZ,GAAqB,CAAtD;AACA,UAAMC,WAAW,GAAGF,cAAc,GAAG,EAAH,GAAQ,IAA1C;AACA,UAAMG,GAAG,GAAI,GAAET,KAAM,GAAEQ,WAAY,EAAnC;AACA,WAAOC,GAAP;AACH,GARD;;AAUA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaZ,KAAzB;AACAd,IAAAA,YAAY,CAACuB,KAAK,CAACG,MAAN,CAAaZ,KAAd,CAAZ;AACAjB,IAAAA,QAAQ,CAAC0B,KAAK,CAACG,MAAN,CAAaZ,KAAd,CAAR;AACH,GALD;;AAOA,sBACI,QAAC,WAAD;AAAa,IAAA,SAAS,EAAEnB,OAAO,CAACpB,WAAhC;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,6BAAf;AAAA,gBAA8CqB;AAA9C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AACI,MAAA,OAAO,EAAC,6BADZ;AAEI,MAAA,EAAE,EAAC,uBAFP;AAGI,MAAA,QAAQ,MAHZ;AAII,MAAA,KAAK,EAAEG,SAJX;AAKI,MAAA,QAAQ,EAAEuB,iBALd;AAMI,MAAA,KAAK,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cANX;AAOI,MAAA,WAAW,EAAGL,QAAD,IAAc;AAACO,QAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAAuBO,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAAyBR,QAAAA,QAAQ,CAACU,IAAT,CAAc,IAAd;AAAoB,OAPpG;AAQI,MAAA,SAAS,EAAEvC,SARf;AAAA,gBAUKU,OAAO,CAAC8B,GAAR,CAAaC,CAAD,iBACT,QAAC,QAAD;AAAkB,QAAA,KAAK,EAAEA,CAAzB;AAAA,gCACI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAE/B,OAAO,CAACgC,OAAR,CAAgBD,CAAhB,IAAqB,CAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAeA,CAAf;AAAA;AAAA;AAAA;AAAA,cADH;AAVL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAqBI;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCJ;AAuCH,CAxED,C,CAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA7FMpC,W;UACcpB,S;;;KADdoB,W;AAgGN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst MultiSelect = (props) => {\r\n    const classes = useStyles();\r\n    const {placeholder, onChange, options } = props;\r\n    const [selection, setSelection] = React.useState([]);\r\n\r\n    const customStyles = {\r\n        valueContainer: (provided, state) => ({\r\n            ...provided,\r\n            textOverflow: \"ellipsis\",\r\n            maxWidth: \"90%\",\r\n            whiteSpace: \"nowrap\",\r\n            overflow: \"hidden\",\r\n            display: \"initial\"\r\n        })\r\n    };\r\n\r\n    const multiValueContainer = ({ selectProps, data }) => {\r\n        const label = data.label;\r\n        const allSelected = selectProps.value;\r\n        const index = allSelected.findIndex(selected => selected.label === label);\r\n        const isLastSelected = index === allSelected.length - 1;\r\n        const labelSuffix = isLastSelected ? \"\" : \", \";\r\n        const val = `${label}${labelSuffix}`;\r\n        return val;\r\n    };\r\n\r\n    const onChangeSelection = (event) => {\r\n        console.log(\"--------------------\")\r\n        console.log(event.target.value)\r\n        setSelection(event.target.value)\r\n        onChange(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-mutiple-checkbox-label\">{placeholder}</InputLabel>\r\n            <Select\r\n                labelId=\"demo-mutiple-checkbox-label\"\r\n                id=\"demo-mutiple-checkbox\"\r\n                multiple\r\n                value={selection}\r\n                onChange={onChangeSelection}\r\n                input={<Input />}\r\n                renderValue={(selected) => {console.log(selected); console.log(\"--------\"); selected.join(', ')}}\r\n                MenuProps={MenuProps}\r\n            >\r\n                {options.map((o) => (\r\n                    <MenuItem key={o} value={o}>\r\n                        <Checkbox checked={options.indexOf(o) > -1} />\r\n                        <ListItemText primary={o} />\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n        // <Select\r\n        //     options={options}\r\n        //     isMulti\r\n        //     components={{\r\n        //         MultiValueContainer: multiValueContainer\r\n        //     }}\r\n        //     menuPlacement = \"top\"\r\n\r\n        //     onChange={onChange}\r\n        //     closeMenuOnSelect={false}\r\n        //     hideSelectedOptions={false}\r\n        //     styles={customStyles}\r\n        //     isSearchable={false}\r\n        //     placeholder={placeholder}\r\n        // />\r\n\r\n    );\r\n\r\n}\r\n// MultiSelect.propTypes = {\r\n//   optionGroups: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       label: PropTypes.string, //for group\r\n//       options: PropTypes.arrayOf(\r\n//         // group options\r\n//         PropTypes.arrayOf(\r\n//           PropTypes.shape({\r\n//             //\r\n//             value: PropTypes.oneOf([\r\n//               PropTypes.string,\r\n//               PropTypes.number,\r\n//               PropTypes.object\r\n//             ]).isRequired,\r\n//             label: PropTypes.string.isRequired\r\n//           })\r\n//         ).isRequired\r\n//       )\r\n//     })\r\n//   )\r\n// };\r\n\r\n\r\nexport default MultiSelect"]},"metadata":{},"sourceType":"module"}