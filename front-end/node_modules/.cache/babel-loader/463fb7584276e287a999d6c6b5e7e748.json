{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\playground\\\\src\\\\Components\\\\Tables\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SavageTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headers: [],\n      data: [],\n      tableDataService: new TableDataService(),\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.state.tableDataService.getTableData(function (data) {\n      this.setState({\n        headers: createHeaders(data.data[0])\n      });\n      this.setState({\n        data: createData(data.data)\n      });\n      this.setState({\n        loading: false\n      });\n    }.bind(this), function (data) {\n      console.log(data);\n    });\n  }\n\n  createHeaders(row) {\n    return Object.keys(row);\n  }\n\n  createHeaders(rows) {\n    return rows.map(row => Object.values(row));\n  }\n\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\nexport default function BasicTable(props) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: props.headers[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), props.headers.slice(1).map(headerName => /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: headerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.calories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.fat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.carbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.protein\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicTable, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["C:/Users/vincent/git/playground/src/Components/Tables/Table.js"],"names":["React","Component","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","SavageTable","state","headers","data","tableDataService","TableDataService","loading","componentDidMount","getTableData","setState","createHeaders","createData","bind","console","log","row","Object","keys","rows","map","values","useStyles","table","minWidth","name","calories","fat","carbs","protein","BasicTable","props","classes","slice","headerName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;;;AAGA,MAAMC,WAAN,SAA0BZ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAmBlCa,KAnBkC,GAmB1B;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,gBAAgB,EAAE,IAAIC,gBAAJ,EAHZ;AAINC,MAAAA,OAAO,EAAE;AAJH,KAnB0B;AAAA;;AAClCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,KAAL,CAAWG,gBAAX,CAA4BI,YAA5B,CAAyC,UAAUL,IAAV,EAAgB;AACvD,WAAKM,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAEQ,aAAa,CAACP,IAAI,CAACA,IAAL,CAAU,CAAV,CAAD;AAAxB,OAAd;AACA,WAAKM,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAEQ,UAAU,CAACR,IAAI,CAACA,IAAN;AAAlB,OAAd;AACA,WAAKM,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJwC,CAIvCM,IAJuC,CAIlC,IAJkC,CAAzC,EAIc,UAAUT,IAAV,EAAgB;AAC5BU,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACD,KAND;AAOD;;AAEDO,EAAAA,aAAa,CAACK,GAAD,EAAM;AACjB,WAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,CAAP;AACD;;AAEDL,EAAAA,aAAa,CAACQ,IAAD,EAAO;AAClB,WAAOA,IAAI,CAACC,GAAL,CAASJ,GAAG,IAAIC,MAAM,CAACI,MAAP,CAAcL,GAAd,CAAhB,CAAP;AACD;;AAjBiC;;AA2BpC,MAAMM,SAAS,GAAG7B,UAAU,CAAC;AAC3B8B,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AADoB,CAAD,CAA5B;;AAMA,SAASZ,UAAT,CAAoBa,IAApB,EAA0BC,QAA1B,EAAoCC,GAApC,EAAyCC,KAAzC,EAAgDC,OAAhD,EAAyD;AACvD,SAAO;AAAEJ,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,GAAlB;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA;AAA9B,GAAP;AACD;;AAED,MAAMV,IAAI,GAAG,CACXP,UAAU,CAAC,gBAAD,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,EAA7B,EAAiC,GAAjC,CADC,EAEXA,UAAU,CAAC,oBAAD,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,EAAjC,EAAqC,GAArC,CAFC,EAGXA,UAAU,CAAC,QAAD,EAAW,GAAX,EAAgB,IAAhB,EAAsB,EAAtB,EAA0B,GAA1B,CAHC,EAIXA,UAAU,CAAC,SAAD,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,EAAtB,EAA0B,GAA1B,CAJC,EAKXA,UAAU,CAAC,aAAD,EAAgB,GAAhB,EAAqB,IAArB,EAA2B,EAA3B,EAA+B,GAA/B,CALC,CAAb;AAQA,eAAe,SAASkB,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AAEA,sBACE,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAEtB,KAA3B;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEgC,OAAO,CAACT,KAA1B;AAAiC,oBAAW,cAA5C;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAA,sBAAYQ,KAAK,CAAC5B,OAAN,CAAc,CAAd;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG4B,KAAK,CAAC5B,OAAN,CAAc8B,KAAd,CAAoB,CAApB,EAAuBb,GAAvB,CAA4Bc,UAAD,iBAC1B,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA,sBAA0BA;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,SAAD;AAAA,kBACGf,IAAI,CAACC,GAAL,CAAUJ,GAAD,iBACR,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,IAArB;AAA0B,YAAA,KAAK,EAAC,KAAhC;AAAA,sBACGA,GAAG,CAACS;AADP;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA,sBAA0BT,GAAG,CAACU;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA,sBAA0BV,GAAG,CAACW;AAA9B;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA,sBAA0BX,GAAG,CAACY;AAA9B;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA,sBAA0BZ,GAAG,CAACa;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA,WAAeb,GAAG,CAACS,IAAnB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA9BuBK,U;UACNR,S;;;KADMQ,U","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nclass SavageTable extends Component {\r\n  componentDidMount() {\r\n    this.state.tableDataService.getTableData(function (data) {\r\n      this.setState({ headers: createHeaders(data.data[0]) })\r\n      this.setState({ data: createData(data.data) })\r\n      this.setState({ loading: false })\r\n    }.bind(this), function (data) {\r\n      console.log(data)\r\n    });\r\n  }\r\n\r\n  createHeaders(row) {\r\n    return Object.keys(row);\r\n  }\r\n\r\n  createHeaders(rows) {\r\n    return rows.map(row => Object.values(row));\r\n  }\r\n\r\n  state = {\r\n    headers: [],\r\n    data: [],\r\n    tableDataService: new TableDataService(),\r\n    loading: true\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function BasicTable(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>{props.headers[0]}</TableCell>\r\n            {props.headers.slice(1).map((headerName) => (\r\n              <TableCell align=\"right\">{headerName}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}