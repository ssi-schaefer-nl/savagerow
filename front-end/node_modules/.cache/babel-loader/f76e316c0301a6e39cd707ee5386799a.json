{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\playground\\\\src\\\\Views\\\\Tables.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SavageTable from \"../Components/Table/Table\";\nimport TableDataService from \"../Service/TableDataServices\";\nimport { Toolbar } from \"@material-ui/core\";\nimport ConfigureService from \"../Service/ConfigureService\";\nimport CollapsableAlert from \"../Components/CollapsableAlert/CollapsableAlert\";\nimport Collapse from '@material-ui/core/Collapse';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Tables extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tables: [],\n      tableDataService: new TableDataService(),\n      configureService: new ConfigureService(),\n      loading: true,\n      database: null\n    };\n  }\n\n  componentDidMount() {\n    this.state.configureService.getCurrentDatabase(function (data) {\n      this.setState({\n        database: data.data\n      });\n    }.bind(this), function (data) {\n      this.setState({\n        database: \"N/a\"\n      });\n      console.log(data);\n    }.bind(this));\n    this.state.tableDataService.getTables(function (data) {\n      this.setState({\n        tables: data.data\n      });\n      this.setState({\n        loading: false\n      });\n    }.bind(this), function (data) {\n      console.log(data);\n      this.setState({\n        loading: false,\n        connectionError: true\n      });\n    }.bind(this));\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n\n    if (this.state.connectionError) {\n      return /*#__PURE__*/_jsxDEV(CollapsableAlert, {\n        severity: \"error\",\n        message: \"Unable to load table data. Check database connection.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(ScrollableTabsButtonAuto, {\n      tables: this.state.tables,\n      database: this.state.database\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction ScrollableTabsButtonAuto(props) {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Collapse, {\n      in: true,\n      collapsedHeight: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        color: \"default\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            children: props.database\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            selectionFollowsFocus: true,\n            value: value,\n            onChange: handleChange,\n            indicatorColor: \"primary\",\n            textColor: \"primary\",\n            variant: \"scrollable\",\n            scrollButtons: \"auto\",\n            \"aria-label\": \"scrollable auto tabs example\",\n            children: props.tables.map((table, index) => /*#__PURE__*/_jsxDEV(Tab, {\n              label: table,\n              ...a11yProps(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), props.tables.map((table, index) => /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: index,\n      children: /*#__PURE__*/_jsxDEV(SavageTable, {\n        table: table\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ScrollableTabsButtonAuto, \"BDkWVlEh8+DaKPHysXJ2gpEmtFI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ScrollableTabsButtonAuto;\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%'\n  }\n}));\nexport default Tables;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ScrollableTabsButtonAuto\");\n$RefreshReg$(_c2, \"TabPanel\");","map":{"version":3,"sources":["C:/Users/vincent/git/playground/src/Views/Tables.js"],"names":["React","Component","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","SavageTable","TableDataService","Toolbar","ConfigureService","CollapsableAlert","Collapse","Tables","state","tables","tableDataService","configureService","loading","database","componentDidMount","getCurrentDatabase","data","setState","bind","console","log","getTables","connectionError","render","ScrollableTabsButtonAuto","props","classes","useStyles","value","setValue","useState","handleChange","event","newValue","root","map","table","index","a11yProps","TabPanel","children","other","propTypes","node","any","isRequired","id","theme","flexGrow","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SavageTable from \"../Components/Table/Table\";\nimport TableDataService from \"../Service/TableDataServices\";\nimport { Toolbar } from \"@material-ui/core\";\nimport ConfigureService from \"../Service/ConfigureService\";\nimport CollapsableAlert from \"../Components/CollapsableAlert/CollapsableAlert\";\nimport Collapse from '@material-ui/core/Collapse';\n\nclass Tables extends Component {\n  state = {\n    tables: [],\n    tableDataService: new TableDataService(),\n    configureService: new ConfigureService(),\n    loading: true,\n    database: null,\n  }\n\n  componentDidMount() {\n    this.state.configureService.getCurrentDatabase(\n      function (data) {\n        this.setState({ database: data.data })\n      }.bind(this),\n      function (data) {\n        this.setState({ database: \"N/a\" })\n        console.log(data)\n      }.bind(this));\n\n    this.state.tableDataService.getTables(\n      function (data) {\n        this.setState({ tables: data.data })\n        this.setState({ loading: false })\n      }.bind(this),\n      function (data) {\n        console.log(data)\n        this.setState({ loading: false, connectionError: true })\n\n      }.bind(this));\n\n\n  }\n\n\n\n  render() {\n    if (this.state.loading) {\n      return (<></>)\n    }\n\n    if (this.state.connectionError) {\n      return (<CollapsableAlert severity=\"error\" message=\"Unable to load table data. Check database connection.\" />)\n    }\n\n    return (\n      <ScrollableTabsButtonAuto tables={this.state.tables} database={this.state.database} />\n    );\n  }\n}\n\n\nfunction ScrollableTabsButtonAuto(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Collapse in={true} collapsedHeight=\"20px\">\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"primary\">\n              {props.database}\n            </Typography>\n            <Tabs\n              selectionFollowsFocus\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n              aria-label=\"scrollable auto tabs example\"\n            >\n              {props.tables.map((table, index) => (\n                <Tab label={table} {...a11yProps(index)} />\n              ))}\n\n            </Tabs>\n          </Toolbar>\n        </AppBar>\n      </Collapse>\n\n      {props.tables.map((table, index) => (\n        <TabPanel value={value} index={index}>\n          <SavageTable table={table} />\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n  },\n}));\n\nexport default Tables;"]},"metadata":{},"sourceType":"module"}