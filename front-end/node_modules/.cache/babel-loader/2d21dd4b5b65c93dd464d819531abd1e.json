{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\playground\\\\src\\\\Components\\\\Tables\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableDataService from '../../Service/TableDataServices';\nimport { CircularProgress } from '@material-ui/core';\nimport SavageDataGrid from './SavageDataGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SavageTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headers: [],\n      data: [],\n      tableDataService: new TableDataService(),\n      loading: true\n    };\n  }\n\n  createHeaders(row) {\n    return Object.keys(row).map(header => ({\n      field: {\n        header\n      }\n    }));\n  }\n\n  createData(rows) {\n    return rows.map(row => Object.values(row));\n  }\n\n  componentDidMount() {\n    this.state.tableDataService.getTableData(this.props.table, function (data) {\n      this.setState({\n        headers: this.createHeaders(data.data[0])\n      });\n      this.setState({\n        data: this.createData(data.data)\n      });\n      this.setState({\n        loading: false\n      });\n    }.bind(this), function (data) {\n      console.log(data);\n      this.setState({\n        loading: false\n      });\n    }.bind(this));\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(SavageDataGrid, {\n      headers: this.state.headers,\n      data: this.state.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this) // <BasicTable headers={this.state.headers} data={this.state.data} />\n    ;\n  }\n\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction BasicTable(props) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: props.headers.map(header => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: props.data.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), row.slice(1).map(col => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: col\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this))]\n          }, row[0], true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(BasicTable, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = BasicTable;\nexport default SavageTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["C:/Users/vincent/git/playground/src/Components/Tables/Table.js"],"names":["React","Component","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TableDataService","CircularProgress","SavageDataGrid","SavageTable","state","headers","data","tableDataService","loading","createHeaders","row","Object","keys","map","header","field","createData","rows","values","componentDidMount","getTableData","props","table","setState","bind","console","log","render","useStyles","minWidth","BasicTable","classes","slice","col"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableDataService from '../../Service/TableDataServices';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport SavageDataGrid from './SavageDataGrid';\r\n\r\n\r\nclass SavageTable extends Component {\r\n  createHeaders(row) {\r\n    return Object.keys(row).map(header => ({field: {header}}));\r\n  }\r\n\r\n  createData(rows) {\r\n    return rows.map(row => Object.values(row));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.state.tableDataService.getTableData(this.props.table,\r\n      function (data) {\r\n        this.setState({ headers: this.createHeaders(data.data[0]) })\r\n        this.setState({ data: this.createData(data.data) })\r\n        this.setState({ loading: false })\r\n      }.bind(this),\r\n      function (data) {\r\n        console.log(data)\r\n        this.setState({ loading: false })\r\n      }.bind(this));\r\n\r\n  }\r\n\r\n\r\n  state = {\r\n    headers: [],\r\n    data: [],\r\n    tableDataService: new TableDataService(),\r\n    loading: true\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (<CircularProgress />)\r\n    }\r\n\r\n    return (\r\n      <SavageDataGrid headers={this.state.headers} data={this.state.data} />\r\n      // <BasicTable headers={this.state.headers} data={this.state.data} />\r\n    )\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\nfunction BasicTable(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.headers.map(header => (\r\n                <TableCell>{header}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.data.map((row) => (\r\n              <TableRow key={row[0]}>\r\n                <TableCell component=\"th\" scope=\"row\">{row[0]}</TableCell>\r\n                {row.slice(1).map((col) => (\r\n                  <TableCell>{col}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SavageTable;"]},"metadata":{},"sourceType":"module"}