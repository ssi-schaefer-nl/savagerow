{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\nreadOnly    Bool    false   Cell will never go in edit mode\nkey String  undefined   By default, each cell is given the key of col number and row number. This would override that key\nclassName   String  undefined   Additional class names for cells.\ncomponent   ReactElement    undefined   Insert a react element or JSX to this field. This will render on edit mode\nforceComponent  bool    false   Renders what's in component at all times, even when not in edit mode\ndisableEvents   bool    false   Makes cell unselectable and read only\ncolSpan number  1   The colSpan of the cell's td element\nrowSpan number  1   The rowSpan of the cell's td element\nwidth   number or String    undefined   Sets the cell's td width using a style attribute. Number is interpreted as pixels, strings are used as-is. Note: This will only work if the table does not have a set width.\noverflow    'wrap'|'nowrap'| 'clip' undefined   How to render overflow text. Overrides grid-level overflow option.\neditor func  undefined A component used to render the cell's value when being edited\nviewer func  undefined A component used to render the cell's value when not being edited\n*/\n\n\nvar CellShape = {\n  readOnly: _propTypes2.default.bool,\n  key: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  component: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func]),\n  forceComponent: _propTypes2.default.bool,\n  disableEvents: _propTypes2.default.bool,\n  disableUpdatedFlag: _propTypes2.default.bool,\n  colSpan: _propTypes2.default.number,\n  rowSpan: _propTypes2.default.number,\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  overflow: _propTypes2.default.oneOf(['wrap', 'nowrap', 'clip']),\n  dataEditor: _propTypes2.default.func,\n  valueViewer: _propTypes2.default.func\n};\nexports.default = CellShape;","map":{"version":3,"sources":["C:/Users/vincent/git/playground/node_modules/react-datasheet/lib/CellShape.js"],"names":["Object","defineProperty","exports","value","_propTypes","require","_propTypes2","_interopRequireDefault","obj","__esModule","default","CellShape","readOnly","bool","key","string","className","component","oneOfType","element","func","forceComponent","disableEvents","disableUpdatedFlag","colSpan","number","rowSpan","width","overflow","oneOf","dataEditor","valueViewer"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACH,UAAD,CAAxC;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIG,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAEN,WAAW,CAACI,OAAZ,CAAoBG,IADhB;AAEdC,EAAAA,GAAG,EAAER,WAAW,CAACI,OAAZ,CAAoBK,MAFX;AAGdC,EAAAA,SAAS,EAAEV,WAAW,CAACI,OAAZ,CAAoBK,MAHjB;AAIdE,EAAAA,SAAS,EAAEX,WAAW,CAACI,OAAZ,CAAoBQ,SAApB,CAA8B,CAACZ,WAAW,CAACI,OAAZ,CAAoBS,OAArB,EAA8Bb,WAAW,CAACI,OAAZ,CAAoBU,IAAlD,CAA9B,CAJG;AAKdC,EAAAA,cAAc,EAAEf,WAAW,CAACI,OAAZ,CAAoBG,IALtB;AAMdS,EAAAA,aAAa,EAAEhB,WAAW,CAACI,OAAZ,CAAoBG,IANrB;AAOdU,EAAAA,kBAAkB,EAAEjB,WAAW,CAACI,OAAZ,CAAoBG,IAP1B;AAQdW,EAAAA,OAAO,EAAElB,WAAW,CAACI,OAAZ,CAAoBe,MARf;AASdC,EAAAA,OAAO,EAAEpB,WAAW,CAACI,OAAZ,CAAoBe,MATf;AAUdE,EAAAA,KAAK,EAAErB,WAAW,CAACI,OAAZ,CAAoBQ,SAApB,CAA8B,CAACZ,WAAW,CAACI,OAAZ,CAAoBe,MAArB,EAA6BnB,WAAW,CAACI,OAAZ,CAAoBK,MAAjD,CAA9B,CAVO;AAWda,EAAAA,QAAQ,EAAEtB,WAAW,CAACI,OAAZ,CAAoBmB,KAApB,CAA0B,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,CAA1B,CAXI;AAYdC,EAAAA,UAAU,EAAExB,WAAW,CAACI,OAAZ,CAAoBU,IAZlB;AAadW,EAAAA,WAAW,EAAEzB,WAAW,CAACI,OAAZ,CAAoBU;AAbnB,CAAhB;AAgBAlB,OAAO,CAACQ,OAAR,GAAkBC,SAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\nreadOnly    Bool    false   Cell will never go in edit mode\nkey String  undefined   By default, each cell is given the key of col number and row number. This would override that key\nclassName   String  undefined   Additional class names for cells.\ncomponent   ReactElement    undefined   Insert a react element or JSX to this field. This will render on edit mode\nforceComponent  bool    false   Renders what's in component at all times, even when not in edit mode\ndisableEvents   bool    false   Makes cell unselectable and read only\ncolSpan number  1   The colSpan of the cell's td element\nrowSpan number  1   The rowSpan of the cell's td element\nwidth   number or String    undefined   Sets the cell's td width using a style attribute. Number is interpreted as pixels, strings are used as-is. Note: This will only work if the table does not have a set width.\noverflow    'wrap'|'nowrap'| 'clip' undefined   How to render overflow text. Overrides grid-level overflow option.\neditor func  undefined A component used to render the cell's value when being edited\nviewer func  undefined A component used to render the cell's value when not being edited\n*/\nvar CellShape = {\n  readOnly: _propTypes2.default.bool,\n  key: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  component: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func]),\n  forceComponent: _propTypes2.default.bool,\n  disableEvents: _propTypes2.default.bool,\n  disableUpdatedFlag: _propTypes2.default.bool,\n  colSpan: _propTypes2.default.number,\n  rowSpan: _propTypes2.default.number,\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  overflow: _propTypes2.default.oneOf(['wrap', 'nowrap', 'clip']),\n  dataEditor: _propTypes2.default.func,\n  valueViewer: _propTypes2.default.func\n};\n\nexports.default = CellShape;"]},"metadata":{},"sourceType":"script"}