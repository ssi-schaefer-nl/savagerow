{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\MultiSelect\\\\MultiSelect.js\";\nimport React, { Component } from \"react\";\nimport Select, { components } from \"react-select\";\nimport FormControl from '@material-ui/core/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: 500\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst MultiSelect = props => {\n  const customStyles = {\n    valueContainer: (provided, state) => ({ ...provided,\n      textOverflow: \"ellipsis\",\n      maxWidth: \"90%\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      display: \"initial\"\n    })\n  };\n\n  const multiValueContainer = ({\n    selectProps,\n    data\n  }) => {\n    const label = data.label;\n    const allSelected = selectProps.value;\n    const index = allSelected.findIndex(selected => selected.label === label);\n    const isLastSelected = index === allSelected.length - 1;\n    const labelSuffix = isLastSelected ? \"\" : \", \";\n    const val = `${label}${labelSuffix}`;\n    return val;\n  };\n\n  const {\n    options,\n    placeholder,\n    onChange\n  } = props;\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    className: classes.formControl,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      id: \"demo-simple-select-label\",\n      children: \"Column Filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      isMulti: true,\n      components: {\n        MultiValueContainer: multiValueContainer\n      },\n      labelId: props.labelId,\n      onChange: onChange,\n      closeMenuOnSelect: false,\n      hideSelectedOptions: false,\n      styles: customStyles,\n      isSearchable: false,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}; // MultiSelect.propTypes = {\n//   optionGroups: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       label: PropTypes.string, //for group\n//       options: PropTypes.arrayOf(\n//         // group options\n//         PropTypes.arrayOf(\n//           PropTypes.shape({\n//             //\n//             value: PropTypes.oneOf([\n//               PropTypes.string,\n//               PropTypes.number,\n//               PropTypes.object\n//             ]).isRequired,\n//             label: PropTypes.string.isRequired\n//           })\n//         ).isRequired\n//       )\n//     })\n//   )\n// };\n\n\n_c = MultiSelect;\nexport default MultiSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiSelect\");","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/MultiSelect/MultiSelect.js"],"names":["React","Component","Select","components","FormControl","useStyles","makeStyles","theme","formControl","margin","spacing","width","selectEmpty","marginTop","MultiSelect","props","customStyles","valueContainer","provided","state","textOverflow","maxWidth","whiteSpace","overflow","display","multiValueContainer","selectProps","data","label","allSelected","value","index","findIndex","selected","isLastSelected","length","labelSuffix","val","options","placeholder","onChange","classes","MultiValueContainer","labelId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,cAAnC;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,MAAMC,SAAS,GAAGC,UAAU,CAAEC,KAAD,KAAY;AACrCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADC;AAETC,IAAAA,KAAK,EAAE;AAFE,GADwB;AAKrCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,SAAS,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd;AADF;AALwB,CAAZ,CAAD,CAA5B;;AAWA,MAAMI,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,cAAc,EAAE,CAACC,QAAD,EAAWC,KAAX,MAAsB,EAClC,GAAGD,QAD+B;AAElCE,MAAAA,YAAY,EAAE,UAFoB;AAGlCC,MAAAA,QAAQ,EAAE,KAHwB;AAIlCC,MAAAA,UAAU,EAAE,QAJsB;AAKlCC,MAAAA,QAAQ,EAAE,QALwB;AAMlCC,MAAAA,OAAO,EAAE;AANyB,KAAtB;AADC,GAArB;;AAWA,QAAMC,mBAAmB,GAAG,CAAC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAD,KAA2B;AACnD,UAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;AACA,UAAMC,WAAW,GAAGH,WAAW,CAACI,KAAhC;AACA,UAAMC,KAAK,GAAGF,WAAW,CAACG,SAAZ,CAAsBC,QAAQ,IAAIA,QAAQ,CAACL,KAAT,KAAmBA,KAArD,CAAd;AACA,UAAMM,cAAc,GAAGH,KAAK,KAAKF,WAAW,CAACM,MAAZ,GAAqB,CAAtD;AACA,UAAMC,WAAW,GAAGF,cAAc,GAAG,EAAH,GAAQ,IAA1C;AACA,UAAMG,GAAG,GAAI,GAAET,KAAM,GAAEQ,WAAY,EAAnC;AACA,WAAOC,GAAP;AACH,GARD;;AAWA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,MAAqCzB,KAA3C;AAGA,sBACI,QAAC,WAAD;AAAa,IAAA,SAAS,EAAE0B,OAAO,CAACjC,WAAhC;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AACI,MAAA,OAAO,EAAE8B,OADb;AAEI,MAAA,OAAO,MAFX;AAGI,MAAA,UAAU,EAAE;AACRI,QAAAA,mBAAmB,EAAEjB;AADb,OAHhB;AAMI,MAAA,OAAO,EAAEV,KAAK,CAAC4B,OANnB;AAOI,MAAA,QAAQ,EAAEH,QAPd;AAQI,MAAA,iBAAiB,EAAE,KARvB;AASI,MAAA,mBAAmB,EAAE,KATzB;AAUI,MAAA,MAAM,EAAExB,YAVZ;AAWI,MAAA,YAAY,EAAE,KAXlB;AAYI,MAAA,WAAW,EAAEuB;AAZjB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA/CD,C,CAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KApEMzB,W;AAuEN,eAAeA,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Select, { components } from \"react-select\";\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        width: 500,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nconst MultiSelect = (props) => {\r\n    const customStyles = {\r\n        valueContainer: (provided, state) => ({\r\n            ...provided,\r\n            textOverflow: \"ellipsis\",\r\n            maxWidth: \"90%\",\r\n            whiteSpace: \"nowrap\",\r\n            overflow: \"hidden\",\r\n            display: \"initial\"\r\n        })\r\n    };\r\n\r\n    const multiValueContainer = ({ selectProps, data }) => {\r\n        const label = data.label;\r\n        const allSelected = selectProps.value;\r\n        const index = allSelected.findIndex(selected => selected.label === label);\r\n        const isLastSelected = index === allSelected.length - 1;\r\n        const labelSuffix = isLastSelected ? \"\" : \", \";\r\n        const val = `${label}${labelSuffix}`;\r\n        return val;\r\n    };\r\n\r\n\r\n    const { options, placeholder, onChange } = props;\r\n\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Column Filters</InputLabel>\r\n            <Select\r\n                options={options}\r\n                isMulti\r\n                components={{\r\n                    MultiValueContainer: multiValueContainer\r\n                }}\r\n                labelId={props.labelId}\r\n                onChange={onChange}\r\n                closeMenuOnSelect={false}\r\n                hideSelectedOptions={false}\r\n                styles={customStyles}\r\n                isSearchable={false}\r\n                placeholder={placeholder}\r\n            />\r\n        </FormControl>\r\n\r\n    );\r\n\r\n}\r\n// MultiSelect.propTypes = {\r\n//   optionGroups: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       label: PropTypes.string, //for group\r\n//       options: PropTypes.arrayOf(\r\n//         // group options\r\n//         PropTypes.arrayOf(\r\n//           PropTypes.shape({\r\n//             //\r\n//             value: PropTypes.oneOf([\r\n//               PropTypes.string,\r\n//               PropTypes.number,\r\n//               PropTypes.object\r\n//             ]).isRequired,\r\n//             label: PropTypes.string.isRequired\r\n//           })\r\n//         ).isRequired\r\n//       )\r\n//     })\r\n//   )\r\n// };\r\n\r\n\r\nexport default MultiSelect"]},"metadata":{},"sourceType":"module"}