{"ast":null,"code":"import HttpHelper from './HttpHelper';\n\nclass TableService {\n  constructor() {\n    this.httpHelper = new HttpHelper();\n  }\n\n  getRowsOfTable(table, onSuccess, onFailure) {\n    var db = localStorage.getItem('database');\n    this.httpHelper.get('/api/' + db + '/table/' + table + '/all').then(res => {\n      onSuccess(res);\n    }).catch(res => {\n      onFailure(res);\n    });\n  }\n\n  getSchemaOfTable(table, onSuccess, onFailure) {\n    var db = localStorage.getItem('database');\n    this.httpHelper.get('/api/' + db + '/table/' + table + '/schema').then(res => {\n      onSuccess(res);\n    }).catch(res => {\n      onFailure(res);\n    });\n  }\n\n  addRowToTable(table, data, onSuccess, onFailure) {\n    var db = localStorage.getItem('database');\n    this.httpHelper.post('/api/' + db + '/table/' + table + '/add', data).then(res => {\n      onSuccess(res);\n    }).catch(res => {\n      onFailure(res);\n    });\n  }\n\n  updateRowOfTable(table, data, onSuccess, onFailure) {\n    var db = localStorage.getItem('database');\n    this.httpHelper.post('/api/' + db + '/table/' + table + '/update', data).then(res => {\n      onSuccess(res);\n    }).catch(res => {\n      onFailure(res);\n    });\n  }\n\n  deleteRowOfTable(table, data, onSuccess, onFailure) {\n    var db = localStorage.getItem('database');\n    this.httpHelper.post('/api/' + db + '/table/' + table + '/delete', data).then(res => {\n      onSuccess(res);\n    }).catch(res => {\n      onFailure(res);\n    });\n  }\n\n  addColumnToTable(table, data, onSuccess, onFailure) {\n    var db = localStorage.getItem('database');\n    this.httpHelper.post('/api/' + db + '/' + table + '/column/add', data).then(res => {\n      onSuccess(res);\n    }).catch(res => {\n      onFailure(res);\n    });\n  }\n\n  dropColumnFromTable(table, column, onSuccess, onFailure) {\n    var db = localStorage.getItem('database');\n    this.httpHelper.post('/api/' + db + '/' + table + '/' + column + '/drop').then(res => {\n      onSuccess(res);\n    }).catch(res => {\n      onFailure(res);\n    });\n  }\n\n}\n\nexport default TableService;","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Service/TableServiceHelper.js"],"names":["HttpHelper","TableService","constructor","httpHelper","getRowsOfTable","table","onSuccess","onFailure","db","localStorage","getItem","get","then","res","catch","getSchemaOfTable","addRowToTable","data","post","updateRowOfTable","deleteRowOfTable","addColumnToTable","dropColumnFromTable","column"],"mappings":"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","sourcesContent":["import HttpHelper from './HttpHelper';\r\n\r\nclass TableService {\r\n    constructor() {\r\n        this.httpHelper = new HttpHelper();\r\n    }\r\n\r\n    getRowsOfTable(table, onSuccess, onFailure) {\r\n        var db = localStorage.getItem('database')\r\n        this.httpHelper.get('/api/'+db+'/table/' + table + '/all')\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) });\r\n    }\r\n\r\n\r\n    getSchemaOfTable(table, onSuccess, onFailure) {\r\n        var db = localStorage.getItem('database')\r\n        this.httpHelper.get('/api/'+db+'/table/' + table + '/schema')\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) });\r\n    }\r\n\r\n\r\n    addRowToTable(table, data, onSuccess, onFailure) {\r\n        var db = localStorage.getItem('database')\r\n        this.httpHelper.post('/api/'+db+'/table/' + table + '/add', data)\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) });\r\n\r\n    }\r\n\r\n    updateRowOfTable(table, data, onSuccess, onFailure) {\r\n        var db = localStorage.getItem('database')\r\n        this.httpHelper.post('/api/'+db+'/table/' + table + '/update', data)\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) });\r\n\r\n    }\r\n\r\n    deleteRowOfTable(table, data, onSuccess, onFailure) {\r\n        var db = localStorage.getItem('database')\r\n        this.httpHelper.post('/api/'+db+'/table/' + table + '/delete', data)\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) });\r\n\r\n    }\r\n\r\n    addColumnToTable(table, data, onSuccess, onFailure) {\r\n        var db = localStorage.getItem('database')\r\n        this.httpHelper.post('/api/'+db+'/'+table+'/column/add', data)\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) });\r\n\r\n    }\r\n\r\n    dropColumnFromTable(table, column, onSuccess, onFailure) {\r\n        var db = localStorage.getItem('database')\r\n        this.httpHelper.post('/api/'+db+'/'+table+'/'+column+'/drop')\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) });\r\n\r\n    }\r\n}\r\n\r\nexport default TableService;"]},"metadata":{},"sourceType":"module"}