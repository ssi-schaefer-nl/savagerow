{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Views\\\\Tables.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SavageTable from \"../Components/Table/Table\";\nimport { Button, Toolbar } from \"@material-ui/core\";\nimport ConfigureService from \"../Service/ConfigureService\";\nimport CollapsableAlert from \"../Components/CollapsableAlert/CollapsableAlert\";\nimport DatabaseSelect from \"../Components/DatabaseSelect/DatabaseSelect\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tables = props => {\n  _s();\n\n  const configureService = new ConfigureService();\n  const classes = useStyles();\n  const database = localStorage.getItem(\"database\");\n  const [tables, setTables] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    var db = localStorage.getItem('database');\n    this.httpHelper.get(`/api/query/${db}/tables`).then(res => {\n      setTables(res.data);\n      setLoading(false);\n    }).catch(() => {\n      setLoading(true);\n      setError(true);\n    });\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  if (database == null) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        marginBottom: \"2em\"\n      },\n      children: \"No database is selected. Please select a database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatabaseSelect, {\n      onSelect: () => window.location.reload(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(CollapsableAlert, {\n      severity: \"error\",\n      message: \"Error while retrieving tables for database: \" + database\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"default\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"primary\",\n          style: {\n            marginRight: \"1em\",\n            fontWeight: \"bold\"\n          },\n          children: database\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          selectionFollowsFocus: true,\n          value: value,\n          onChange: handleChange,\n          indicatorColor: \"primary\",\n          textColor: \"secundary\",\n          variant: \"scrollable\",\n          scrollButtons: \"auto\",\n          \"aria-label\": \"scrollable auto tabs example\",\n          children: tables.map((table, index) => /*#__PURE__*/_jsxDEV(Tab, {\n            label: table,\n            ...a11yProps(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), tables.map((table, index) => /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: index,\n      children: /*#__PURE__*/_jsxDEV(SavageTable, {\n        table: table\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tables, \"ynnLvwPdSevp+5aSrqNgo7fyVvY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Tables;\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      padding: \"1em 0.5em\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%'\n  }\n}));\nexport default Tables;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tables\");\n$RefreshReg$(_c2, \"TabPanel\");","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Views/Tables.js"],"names":["React","Component","useState","useEffect","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","SavageTable","Button","Toolbar","ConfigureService","CollapsableAlert","DatabaseSelect","Tables","props","configureService","classes","useStyles","database","localStorage","getItem","tables","setTables","loading","setLoading","error","setError","value","setValue","handleChange","event","newValue","db","httpHelper","get","then","res","data","catch","marginBottom","window","location","reload","root","marginRight","fontWeight","map","table","index","a11yProps","TabPanel","children","other","propTypes","node","any","isRequired","id","theme","flexGrow","width"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SavageTable from \"../Components/Table/Table\";\nimport { Button, Toolbar } from \"@material-ui/core\";\nimport ConfigureService from \"../Service/ConfigureService\";\nimport CollapsableAlert from \"../Components/CollapsableAlert/CollapsableAlert\";\nimport DatabaseSelect from \"../Components/DatabaseSelect/DatabaseSelect\";\n\nconst Tables = (props) => {\n  const configureService = new ConfigureService()\n  const classes = useStyles();\n  const database = localStorage.getItem(\"database\")\n  const [tables, setTables] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    var db = localStorage.getItem('database')\n    this.httpHelper.get(`/api/query/${db}/tables`)\n      .then(res => {\n        setTables(res.data)\n        setLoading(false)\n      })\n      .catch(() => {\n        setLoading(true)\n        setError(true)\n      })\n  }, [])\n\n\n\n  if (loading) {\n    return (<></>)\n  }\n\n  if (database == null) return (\n    <div>\n      <Typography style={{ marginBottom: \"2em\" }}>No database is selected. Please select a database</Typography>\n      <DatabaseSelect onSelect={() => window.location.reload(false)} />\n    </div>\n  )\n  if (error) {\n    return (<CollapsableAlert severity=\"error\" message={\"Error while retrieving tables for database: \" + database} />)\n  }\n\n  return (\n    <div className={classes.root}>\n\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"primary\" style={{ marginRight: \"1em\", fontWeight: \"bold\" }}>\n            {database}\n          </Typography>\n          <Tabs\n            selectionFollowsFocus\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"secundary\"\n            variant=\"scrollable\"\n\n            scrollButtons=\"auto\"\n            aria-label=\"scrollable auto tabs example\"\n          >\n            {tables.map((table, index) => (\n              <Tab label={table} {...a11yProps(index)} />\n            ))}\n\n          </Tabs>\n\n        </Toolbar>\n      </AppBar>\n\n      {tables.map((table, index) => (\n        <TabPanel value={value} index={index}  >\n          <SavageTable table={table} />\n        </TabPanel>\n      ))}\n    </div>\n  );\n\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3} padding=\"1em 0.5em\">\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n  },\n}));\n\nexport default Tables;"]},"metadata":{},"sourceType":"module"}