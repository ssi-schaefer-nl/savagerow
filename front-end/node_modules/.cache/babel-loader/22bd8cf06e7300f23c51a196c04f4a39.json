{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\Table\\\\DataGrid\\\\DataGridTable.js\",\n    _s = $RefreshSig$();\n\nimport DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\nimport React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './react-contextmenu.css';\nimport './highlight.css';\nimport { TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 12\n  }\n}))(Tooltip);\n\nconst DataGridTable = props => {\n  _s();\n\n  const [selectedColumn, setSelectedColumn] = useState(null);\n  const [selectedRow, setSelectedRow] = useState(null);\n\n  if (props.columns.length == 0) {\n    return null;\n  }\n\n  var rows = [...props.rows];\n  const onRowChange = props.onRowChange;\n  const highlightedRows = props.highlightRows ? props.highlightRows : [];\n\n  const HeaderRenderer = item => {\n    return /*#__PURE__*/_jsxDEV(ContextMenuTrigger, {\n      id: \"header-context-menu\",\n      collect: () => {\n        setSelectedColumn(item.column.name);\n        return {\n          column: item.column.key\n        };\n      },\n      holdToDisplay: \"-1\",\n      children: item.column.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  };\n\n  const columns = props.columns.map(col => ({\n    key: col.column,\n    name: col.column,\n    headerRenderer: HeaderRenderer,\n    resizable: true,\n    nullable: col.nullable,\n    editor: col.editable ? TextEditor : undefined\n  }));\n\n  const onRowDelete = (e, {\n    rowIdx\n  }) => props.onDelete(rowIdx);\n\n  const onRowInsert = (e, {\n    rowIdx\n  }) => props.onInsert(rowIdx);\n\n  const onRowSave = (e, {\n    rowIdx\n  }) => props.onSave(rowIdx);\n\n  const onRefresh = (e, {\n    rowIdx\n  }) => props.onRefresh(rowIdx);\n\n  const onColumnDelete = (e, {\n    column\n  }) => props.onColumnDelete(column);\n\n  const onColumnRename = (e, {\n    column\n  }) => {};\n\n  const onColumnInsert = (e, {\n    column\n  }) => props.onColumnInsert(column);\n\n  const RowRenderer = props => {\n    var classname = \"row\";\n    var rowTooltip = \"Row \" + props.rowIdx;\n    var highlightedRow = highlightedRows.find(hr => hr.id == props.rowIdx);\n\n    if (highlightedRow != undefined) {\n      rowTooltip = rowTooltip.concat(\" - \" + highlightedRow.message);\n      classname = highlightedRow.type === \"warning\" ? \"row-warning\" : \"row-error\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(ContextMenuTrigger, {\n      id: \"grid-context-menu\",\n      collect: () => {\n        setSelectedRow(props.rowIdx);\n        return {\n          rowIdx: props.rowIdx\n        };\n      },\n      holdToDisplay: \"-1\",\n      children: /*#__PURE__*/_jsxDEV(LightTooltip, {\n        title: rowTooltip,\n        enterDelay: 1000,\n        enterNextDelay: 1000,\n        interactive: true,\n        placement: \"bottom-start\",\n        arrow: true,\n        children: /*#__PURE__*/_jsxDEV(GridRow, { ...props,\n          className: classname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: columns,\n      rows: rows,\n      onRowsChange: (updatedRows, index) => {\n        var idx = index.indexes[0];\n        rows[idx] = updatedRows[idx];\n        onRowChange(updatedRows[idx], idx);\n      },\n      rowGetter: i => rows[i],\n      enableCellSelect: true,\n      rowRenderer: RowRenderer,\n      headerRenderer: HeaderRenderer,\n      style: {\n        marginTop: '1em',\n        'height': \"65vh\",\n        overflowX: 'hidden'\n      },\n      className: \"fill-grid\",\n      minHeight: \"1000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContextMenu, {\n      id: \"grid-context-menu\",\n      style: {\n        background: \"#fafafa\",\n        borderRadius: \"0px 30px 0px 0px\",\n        boxShadow: \"2px 2px grey\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        disabled: true,\n        children: \"Row \" + selectedRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRowSave,\n        children: \"Save Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRowDelete,\n        children: \"Delete Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRowInsert,\n        children: \"Insert Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRefresh,\n        children: \"Refresh table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContextMenu, {\n      id: \"header-context-menu\",\n      style: {\n        background: \"#fafafa\",\n        borderRadius: \"0px 30px 0px 0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        disabled: true,\n        children: selectedColumn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onColumnDelete,\n        children: \"Delete Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onColumnRename,\n        children: \"Rename Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onColumnInsert,\n        children: \"Add Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DataGridTable, \"+rVwhdotyLPaWSiP3Bcuc4G3ico=\");\n\n_c = DataGridTable;\nexport default DataGridTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataGridTable\");","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/Table/DataGrid/DataGridTable.js"],"names":["DataGrid","TextEditor","Row","GridRow","React","useState","withStyles","makeStyles","ContextMenu","MenuItem","SubMenu","ContextMenuTrigger","Tooltip","TextField","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","DataGridTable","props","selectedColumn","setSelectedColumn","selectedRow","setSelectedRow","columns","length","rows","onRowChange","highlightedRows","highlightRows","HeaderRenderer","item","column","name","key","map","col","headerRenderer","resizable","nullable","editor","editable","undefined","onRowDelete","e","rowIdx","onDelete","onRowInsert","onInsert","onRowSave","onSave","onRefresh","onColumnDelete","onColumnRename","onColumnInsert","RowRenderer","classname","rowTooltip","highlightedRow","find","hr","id","concat","message","type","updatedRows","index","idx","indexes","i","marginTop","overflowX","background","borderRadius"],"mappings":"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","sourcesContent":["import DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\r\nimport React, { useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport './react-contextmenu.css'\r\nimport './highlight.css'\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.white,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 12,\r\n    },\r\n}))(Tooltip);\r\n\r\n\r\n\r\nconst DataGridTable = (props) => {\r\n    const [selectedColumn, setSelectedColumn] = useState(null)\r\n    const [selectedRow, setSelectedRow] = useState(null)\r\n    if (props.columns.length == 0) {\r\n        return null\r\n    }\r\n\r\n    var rows = [...props.rows]\r\n    const onRowChange = props.onRowChange\r\n    const highlightedRows = props.highlightRows ? props.highlightRows : []\r\n\r\n\r\n    const HeaderRenderer = (item) => {\r\n        return (\r\n            <ContextMenuTrigger\r\n                id=\"header-context-menu\"\r\n                collect={() => {\r\n                    setSelectedColumn(item.column.name)\r\n                    return ({ column: item.column.key })\r\n                }}\r\n                holdToDisplay=\"-1\"\r\n            >\r\n                {item.column.name}\r\n            </ContextMenuTrigger>\r\n        )\r\n\r\n    }\r\n\r\n\r\n    const columns = props.columns.map(col => ({\r\n        key: col.column,\r\n        name: col.column,\r\n        headerRenderer: HeaderRenderer,\r\n        resizable: true,\r\n        nullable: col.nullable,\r\n        editor: col.editable ? TextEditor : undefined\r\n    }));\r\n\r\n\r\n    const onRowDelete = (e, { rowIdx }) => props.onDelete(rowIdx)\r\n    const onRowInsert = (e, { rowIdx }) => props.onInsert(rowIdx)\r\n    const onRowSave = (e, { rowIdx }) => props.onSave(rowIdx)\r\n    const onRefresh = (e, { rowIdx }) => props.onRefresh(rowIdx)\r\n    const onColumnDelete = (e, { column }) => props.onColumnDelete(column)\r\n    const onColumnRename = (e, { column }) => { }\r\n    const onColumnInsert = (e, { column }) => props.onColumnInsert(column)\r\n\r\n\r\n    const RowRenderer = (props) => {\r\n        var classname = \"row\"\r\n        var rowTooltip = \"Row \" + props.rowIdx\r\n\r\n        var highlightedRow = highlightedRows.find(hr => hr.id == props.rowIdx)\r\n        if (highlightedRow != undefined) {\r\n            rowTooltip = rowTooltip.concat(\" - \" + highlightedRow.message)\r\n            classname = highlightedRow.type === \"warning\" ? \"row-warning\" : \"row-error\"\r\n        }\r\n\r\n        return (\r\n            <ContextMenuTrigger id=\"grid-context-menu\" collect={() => {\r\n                setSelectedRow(props.rowIdx)\r\n                return ({ rowIdx: props.rowIdx })\r\n                }} holdToDisplay=\"-1\">\r\n                <LightTooltip\r\n                    title={rowTooltip}\r\n                    enterDelay={1000}\r\n                    enterNextDelay={1000}\r\n                    interactive\r\n                    placement=\"bottom-start\"\r\n                    arrow\r\n                >\r\n                    <GridRow {...props} className={classname} />\r\n                </LightTooltip>\r\n            </ContextMenuTrigger>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <DataGrid\r\n                columns={columns}\r\n                rows={rows}\r\n                onRowsChange={(updatedRows, index) => {\r\n                    var idx = index.indexes[0]\r\n                    rows[idx] = updatedRows[idx]\r\n                    onRowChange(updatedRows[idx], idx)\r\n                }}\r\n                rowGetter={i => rows[i]}\r\n                enableCellSelect={true}\r\n                rowRenderer={RowRenderer}\r\n                headerRenderer={HeaderRenderer}\r\n                style={{ marginTop: '1em', 'height': \"65vh\", overflowX: 'hidden' }}\r\n                className=\"fill-grid\"\r\n                minHeight=\"1000\"\r\n            />\r\n\r\n            <ContextMenu\r\n                id=\"grid-context-menu\"\r\n                style={{ background: \"#fafafa\", borderRadius: \"0px 30px 0px 0px\", boxShadow: \"2px 2px grey\" }}\r\n            >\r\n                <MenuItem disabled>{\"Row \" + selectedRow}</MenuItem>\r\n                <MenuItem divider />\r\n                <MenuItem onClick={onRowSave}>Save Row</MenuItem>\r\n                <MenuItem onClick={onRowDelete}>Delete Row</MenuItem>\r\n                <MenuItem onClick={onRowInsert}>Insert Row</MenuItem>\r\n                <MenuItem divider />\r\n                <MenuItem onClick={onRefresh}>Refresh table</MenuItem>\r\n                <MenuItem divider />\r\n                <MenuItem ><b>Cancel</b></MenuItem>\r\n            </ContextMenu>\r\n\r\n            <ContextMenu\r\n                id=\"header-context-menu\"\r\n                style={{ background: \"#fafafa\", borderRadius: \"0px 30px 0px 0px\" }}\r\n            >\r\n                <MenuItem disabled>{selectedColumn}</MenuItem>\r\n                <MenuItem divider />\r\n                <MenuItem onClick={onColumnDelete}>Delete Column</MenuItem>\r\n                <MenuItem onClick={onColumnRename}>Rename Column</MenuItem>\r\n                <MenuItem divider />\r\n                <MenuItem onClick={onColumnInsert}>Add Column</MenuItem>\r\n\r\n            </ContextMenu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataGridTable"]},"metadata":{},"sourceType":"module"}