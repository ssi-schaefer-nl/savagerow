{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\Table\\\\DataGridControlBar.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { green, grey, yellow } from '@material-ui/core/colors';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport InfoIcon from '@material-ui/icons/Info';\nimport AddIcon from '@material-ui/icons/Add';\nimport MultiSelect from \"../MultiSelect/MultiSelect\";\nimport Paper from '@material-ui/core/Paper';\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DataGridControlBar = props => {\n  const rowCount = props.rowCount;\n  const columnCount = props.columnCount;\n  var actions = [];\n  actions.push( /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n    label: \"Rows: \" + rowCount,\n    icon: /*#__PURE__*/_jsxDEV(StorageIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 74\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 16\n  }, this));\n  actions.push( /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n    label: \"Add Column\",\n    icon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 67\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 16\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      backgroundColor: grey[50],\n      borderWidth: 0.5,\n      borderStyle: \"solid\",\n      borderColor: grey[300]\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(MultiSelect, {\n          labelId: \"demo-simple-select-label\",\n          placeholder: \"Column filters\",\n          options: columns.map(col => ({\n            value: col.key,\n            label: col.key\n          })),\n          onChange: fs => setColumnFilter(fs.map(f => f.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this) // <BottomNavigation showLabels>\n  //   {actions}\n  //   <BottomNavigationAction>\n  //     <MultiSelect\n  //       placeholder=\"Column filters\"\n  //       options={[{ value: \"v\", key: \"k\" }]}\n  //     />\n  //   </BottomNavigationAction>\n  // </BottomNavigation>\n  ;\n};\n\n_c = DataGridControlBar;\nexport default DataGridControlBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataGridControlBar\");","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/Table/DataGridControlBar.js"],"names":["React","Component","useEffect","useState","BottomNavigation","BottomNavigationAction","green","grey","yellow","StorageIcon","InfoIcon","AddIcon","MultiSelect","Paper","Grid","Typography","DataGridControlBar","props","rowCount","columnCount","actions","push","backgroundColor","borderWidth","borderStyle","borderColor","columns","map","col","value","key","label","fs","setColumnFilter","f"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,sBAAP,MAAmC,0CAAnC;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAMC,WAAW,GAAGF,KAAK,CAACE,WAA1B;AACA,MAAIC,OAAO,GAAG,EAAd;AACAA,EAAAA,OAAO,CAACC,IAAR,eAAa,QAAC,sBAAD;AAAwB,IAAA,KAAK,EAAE,WAAWH,QAA1C;AAAoD,IAAA,IAAI,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAA1D;AAAA;AAAA;AAAA;AAAA,UAAb;AACAE,EAAAA,OAAO,CAACC,IAAR,eAAa,QAAC,sBAAD;AAAwB,IAAA,KAAK,EAAE,YAA/B;AAA6C,IAAA,IAAI,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAnD;AAAA;AAAA;AAAA;AAAA,UAAb;AAGA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAEf,IAAI,CAAC,EAAD,CAAvB;AAA6BgB,MAAAA,WAAW,EAAE,GAA1C;AAA+CC,MAAAA,WAAW,EAAE,OAA5D;AAAqEC,MAAAA,WAAW,EAAElB,IAAI,CAAC,GAAD;AAAtF,KAAnC;AAAA,2BAEA,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACI,QAAC,KAAD;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,OAAO,EAAC,0BAArB;AACI,UAAA,WAAW,EAAC,gBADhB;AAEI,UAAA,OAAO,EAAEmB,OAAO,CAACC,GAAR,CAAYC,GAAG,KAAK;AAAEC,YAAAA,KAAK,EAAED,GAAG,CAACE,GAAb;AAAkBC,YAAAA,KAAK,EAAEH,GAAG,CAACE;AAA7B,WAAL,CAAf,CAFb;AAGI,UAAA,QAAQ,EAAGE,EAAD,IAAQC,eAAe,CAACD,EAAE,CAACL,GAAH,CAAOO,CAAC,IAAIA,CAAC,CAACL,KAAd,CAAD;AAHrC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADF,CAaE;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAtBF;AAwBD,CAhCD;;KAAMb,kB;AAkCN,eAAeA,kBAAf","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport { green, grey, yellow } from '@material-ui/core/colors';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport MultiSelect from \"../MultiSelect/MultiSelect\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst DataGridControlBar = (props) => {\r\n  const rowCount = props.rowCount\r\n  const columnCount = props.columnCount\r\n  var actions = []\r\n  actions.push(<BottomNavigationAction label={\"Rows: \" + rowCount} icon={<StorageIcon />} />)\r\n  actions.push(<BottomNavigationAction label={\"Add Column\"} icon={<AddIcon />} />)\r\n\r\n\r\n  return (\r\n    <Grid container spacing={2} style={{ backgroundColor: grey[50], borderWidth: 0.5, borderStyle: \"solid\", borderColor: grey[300] }}> \r\n\r\n    <Grid item xs={4}>\r\n        <Paper>\r\n            <MultiSelect labelId=\"demo-simple-select-label\"\r\n                placeholder=\"Column filters\"\r\n                options={columns.map(col => ({ value: col.key, label: col.key }))}\r\n                onChange={(fs) => setColumnFilter(fs.map(f => f.value))}\r\n            />\r\n        </Paper>\r\n    </Grid>\r\n</Grid>\r\n    // <BottomNavigation showLabels>\r\n    //   {actions}\r\n    //   <BottomNavigationAction>\r\n    //     <MultiSelect\r\n    //       placeholder=\"Column filters\"\r\n    //       options={[{ value: \"v\", key: \"k\" }]}\r\n\r\n    //     />\r\n    //   </BottomNavigationAction>\r\n    // </BottomNavigation>\r\n  )\r\n}\r\n\r\nexport default DataGridControlBar"]},"metadata":{},"sourceType":"module"}