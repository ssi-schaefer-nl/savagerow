{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\playground\\\\src\\\\Views\\\\ConfigureSavageRow.js\";\nimport React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ConfigureService from '../Service/ConfigureService';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Configure extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configureService: new ConfigureService(),\n      database: null,\n      databases: [],\n      anchorEl: null\n    };\n\n    this.loadDatabases = () => {\n      this.state.configureService.listAllDatabases(function (data) {\n        this.setState({\n          databases: JSON.parse(data.data)\n        });\n      }.bind(this), function (data) {\n        console.log(data);\n      }.bind(this));\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.state.database);\n      this.state.configureService.changeDatabases(this.state.database, function (data) {\n        console.log(\"changed db\");\n      }, function (data) {\n        console.log(\"did not change db\");\n      });\n    };\n\n    this.getMenuItems = () => {\n      if (this.state.database) return /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: this.handleClick,\n        children: this.state.databases[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this); // return this.state.databases.map(database => (\n      //     <MenuItem onClick={this.handleClick}>{database}</MenuItem>\n      // ))\n    };\n\n    this.handleClick = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.loadDatabases();\n  }\n\n  render() {\n    console.log(Array.isArray(this.state.databases));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        noWrap: true,\n        children: \"Configure Database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        \"aria-controls\": \"simple-menu\",\n        \"aria-haspopup\": \"true\",\n        onClick: this.handleClick,\n        children: \"Open Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        id: \"simple-menu\",\n        anchorEl: this.state.anchorEl,\n        keepMounted: true,\n        open: Boolean(this.state.anchorEl),\n        onClose: this.handleClose,\n        children: this.getMenuItems()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Configure;","map":{"version":3,"sources":["C:/Users/vincent/git/playground/src/Views/ConfigureSavageRow.js"],"names":["React","TextField","makeStyles","Typography","ConfigureService","Button","Menu","MenuItem","Configure","Component","constructor","props","state","configureService","database","databases","anchorEl","loadDatabases","listAllDatabases","data","setState","JSON","parse","bind","console","log","handleSubmit","event","preventDefault","changeDatabases","getMenuItems","handleClick","currentTarget","handleClose","componentDidMount","render","Array","isArray","Boolean"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ConfigureService from '../Service/ConfigureService'\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nclass Configure extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        configureService: new ConfigureService(),\r\n        database: null,\r\n        databases: [],\r\n        anchorEl: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadDatabases()\r\n    }\r\n\r\n    loadDatabases = () => {\r\n        this.state.configureService.listAllDatabases(\r\n            function (data) {\r\n                this.setState({ databases: JSON.parse(data.data) })\r\n            }.bind(this),\r\n            function (data) {\r\n                console.log(data)\r\n            }.bind(this));\r\n\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.state.database)\r\n        this.state.configureService.changeDatabases(this.state.database,\r\n            function (data) {\r\n                console.log(\"changed db\")\r\n            },\r\n            function (data) {\r\n                console.log(\"did not change db\")\r\n            });\r\n    }\r\n\r\n    render() {\r\n        console.log(Array.isArray(this.state.databases))\r\n        return (\r\n            <>\r\n                <Typography variant=\"h6\" noWrap>Configure Database</Typography>\r\n                <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.handleClick}>\r\n                    Open Menu\r\n                </Button>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(this.state.anchorEl)}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    {this.getMenuItems()}\r\n\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n\r\n    getMenuItems = () => {\r\n        if(this.state.database) \r\n            return (<MenuItem onClick={this.handleClick}>{this.state.databases[0]}</MenuItem>)\r\n        // return this.state.databases.map(database => (\r\n        //     <MenuItem onClick={this.handleClick}>{database}</MenuItem>\r\n        // ))\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null })\r\n    };\r\n\r\n}\r\n\r\nexport default Configure;\r\n"]},"metadata":{},"sourceType":"module"}