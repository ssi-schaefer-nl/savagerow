{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\MultiSelect\\\\MultiSelect.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport Select, { components } from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MultiSelect extends Component {\n  constructor(...args) {\n    super(...args);\n    this.customStyles = {\n      valueContainer: (provided, state) => ({ ...provided,\n        textOverflow: \"ellipsis\",\n        maxWidth: \"90%\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        display: \"initial\"\n      })\n    };\n\n    this.multiValueContainer = ({\n      selectProps,\n      data\n    }) => {\n      const label = data.label;\n      const allSelected = selectProps.value;\n      const index = allSelected.findIndex(selected => selected.label === label);\n      const isLastSelected = index === allSelected.length - 1;\n      const labelSuffix = isLastSelected ? ` (${allSelected.length})` : \", \";\n      const val = `${label}${labelSuffix}`;\n      return val;\n    };\n  }\n\n  render() {\n    const {\n      options\n    } = this.props;\n    const {\n      CustomOption,\n      multiValueContainer,\n      customStyles,\n      ValueContainer\n    } = this;\n    return /*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      isMulti: true,\n      components: {\n        MultiValueContainer: multiValueContainer\n      },\n      closeMenuOnSelect: false,\n      hideSelectedOptions: false,\n      styles: customStyles,\n      isSearchable: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMultiSelect.propTypes = {\n  optionGroups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    //for group\n    options: PropTypes.arrayOf( // group options\n    PropTypes.arrayOf(PropTypes.shape({\n      //\n      value: PropTypes.oneOf([PropTypes.string, PropTypes.number, PropTypes.object]).isRequired,\n      label: PropTypes.string.isRequired\n    })).isRequired)\n  }))\n};\nexport default MultiSelect;","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/MultiSelect/MultiSelect.js"],"names":["React","Component","ReactDOM","PropTypes","Select","components","MultiSelect","customStyles","valueContainer","provided","state","textOverflow","maxWidth","whiteSpace","overflow","display","multiValueContainer","selectProps","data","label","allSelected","value","index","findIndex","selected","isLastSelected","length","labelSuffix","val","render","options","props","CustomOption","ValueContainer","MultiValueContainer","propTypes","optionGroups","arrayOf","shape","string","oneOf","number","object","isRequired"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,cAAnC;;;AAIA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCM,YADkC,GACnB;AACbC,MAAAA,cAAc,EAAE,CAACC,QAAD,EAAWC,KAAX,MAAsB,EACpC,GAAGD,QADiC;AAEpCE,QAAAA,YAAY,EAAE,UAFsB;AAGpCC,QAAAA,QAAQ,EAAE,KAH0B;AAIpCC,QAAAA,UAAU,EAAE,QAJwB;AAKpCC,QAAAA,QAAQ,EAAE,QAL0B;AAMpCC,QAAAA,OAAO,EAAE;AAN2B,OAAtB;AADH,KADmB;;AAAA,SAYlCC,mBAZkC,GAYZ,CAAC;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,KAAD,KAA2B;AAC/C,YAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;AACA,YAAMC,WAAW,GAAGH,WAAW,CAACI,KAAhC;AACA,YAAMC,KAAK,GAAGF,WAAW,CAACG,SAAZ,CAAsBC,QAAQ,IAAIA,QAAQ,CAACL,KAAT,KAAmBA,KAArD,CAAd;AACA,YAAMM,cAAc,GAAGH,KAAK,KAAKF,WAAW,CAACM,MAAZ,GAAqB,CAAtD;AACA,YAAMC,WAAW,GAAGF,cAAc,GAAI,KAAIL,WAAW,CAACM,MAAO,GAA3B,GAAgC,IAAlE;AACA,YAAME,GAAG,GAAI,GAAET,KAAM,GAAEQ,WAAY,EAAnC;AACA,aAAOC,GAAP;AACD,KApBiC;AAAA;;AAsBlCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,UAAM;AACJC,MAAAA,YADI;AAEJhB,MAAAA,mBAFI;AAGJT,MAAAA,YAHI;AAIJ0B,MAAAA;AAJI,QAKF,IALJ;AAMA,wBACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAEH,OADX;AAEE,MAAA,OAAO,MAFT;AAGE,MAAA,UAAU,EAAE;AACVI,QAAAA,mBAAmB,EAAElB;AADX,OAHd;AAME,MAAA,iBAAiB,EAAE,KANrB;AAOE,MAAA,mBAAmB,EAAE,KAPvB;AAQE,MAAA,MAAM,EAAET,YARV;AASE,MAAA,YAAY,EAAE;AAThB;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA3CiC;;AA6CpCD,WAAW,CAAC6B,SAAZ,GAAwB;AACtBC,EAAAA,YAAY,EAAEjC,SAAS,CAACkC,OAAV,CACZlC,SAAS,CAACmC,KAAV,CAAgB;AACdnB,IAAAA,KAAK,EAAEhB,SAAS,CAACoC,MADH;AACW;AACzBT,IAAAA,OAAO,EAAE3B,SAAS,CAACkC,OAAV,EACP;AACAlC,IAAAA,SAAS,CAACkC,OAAV,CACElC,SAAS,CAACmC,KAAV,CAAgB;AACd;AACAjB,MAAAA,KAAK,EAAElB,SAAS,CAACqC,KAAV,CAAgB,CACrBrC,SAAS,CAACoC,MADW,EAErBpC,SAAS,CAACsC,MAFW,EAGrBtC,SAAS,CAACuC,MAHW,CAAhB,EAIJC,UANW;AAOdxB,MAAAA,KAAK,EAAEhB,SAAS,CAACoC,MAAV,CAAiBI;AAPV,KAAhB,CADF,EAUEA,UAZK;AAFK,GAAhB,CADY;AADQ,CAAxB;AAsBA,eAAerC,WAAf","sourcesContent":["\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport Select, { components } from \"react-select\";\r\n\r\n\r\n\r\nclass MultiSelect extends Component {\r\n  customStyles = {\r\n    valueContainer: (provided, state) => ({\r\n      ...provided,\r\n      textOverflow: \"ellipsis\",\r\n      maxWidth: \"90%\",\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      display: \"initial\"\r\n    })\r\n  };\r\n\r\n  multiValueContainer = ({ selectProps, data }) => {\r\n    const label = data.label;\r\n    const allSelected = selectProps.value;\r\n    const index = allSelected.findIndex(selected => selected.label === label);\r\n    const isLastSelected = index === allSelected.length - 1;\r\n    const labelSuffix = isLastSelected ? ` (${allSelected.length})` : \", \";\r\n    const val = `${label}${labelSuffix}`;\r\n    return val;\r\n  };\r\n\r\n  render() {\r\n    const { options } = this.props;\r\n    const {\r\n      CustomOption,\r\n      multiValueContainer,\r\n      customStyles,\r\n      ValueContainer\r\n    } = this;\r\n    return (\r\n      <Select\r\n        options={options}\r\n        isMulti\r\n        components={{\r\n          MultiValueContainer: multiValueContainer\r\n        }}\r\n        closeMenuOnSelect={false}\r\n        hideSelectedOptions={false}\r\n        styles={customStyles}\r\n        isSearchable={false}\r\n      />\r\n    );\r\n  }\r\n}\r\nMultiSelect.propTypes = {\r\n  optionGroups: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string, //for group\r\n      options: PropTypes.arrayOf(\r\n        // group options\r\n        PropTypes.arrayOf(\r\n          PropTypes.shape({\r\n            //\r\n            value: PropTypes.oneOf([\r\n              PropTypes.string,\r\n              PropTypes.number,\r\n              PropTypes.object\r\n            ]).isRequired,\r\n            label: PropTypes.string.isRequired\r\n          })\r\n        ).isRequired\r\n      )\r\n    })\r\n  )\r\n};\r\n\r\nexport default MultiSelect"]},"metadata":{},"sourceType":"module"}