{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\Table\\\\DataGrid\\\\DataGridTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\nimport React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './react-contextmenu.css';\nimport './highlight.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Grid, Typography } from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport TextFormatIcon from '@material-ui/icons/TextFormat';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { Delete, Filter } from \"@material-ui/icons\";\nimport { SelectEditor } from \"./SelectEditor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 12\n  }\n}))(Tooltip);\n\nconst DataGridTable = props => {\n  _s();\n\n  const [selectedColumn, setSelectedColumn] = useState(null);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [openColumnFilter, setOpenColumnFilter] = useState(false);\n  const [columnFilters, setColumnFilters] = useState([]);\n  var rows = [...props.rows];\n  const onRowChange = props.onRowChange;\n  const highlightedRows = props.highlightRows ? props.highlightRows : [];\n  var changingColumnName = null;\n\n  const HeaderRenderer = item => {\n    return /*#__PURE__*/_jsxDEV(ContextMenuTrigger, {\n      id: \"header-context-menu\",\n      collect: () => {\n        setSelectedColumn(item.column.name);\n        return {\n          column: item.column.key\n        };\n      },\n      holdToDisplay: \"-1\",\n      children: /*#__PURE__*/_jsxDEV(InputBase, {\n        inputProps: {\n          'aria-label': 'naked'\n        },\n        autoComplete: \"off\",\n        id: \"name\",\n        onChange: e => {\n          changingColumnName = e.target.value;\n        },\n        defaultValue: item.column.name,\n        value: changingColumnName,\n        onBlur: () => {\n          if (changingColumnName != null) onColumnRename(item.column.name, changingColumnName);\n        },\n        required: true,\n        style: {\n          fontSize: \"1em\",\n          fontWeight: \"bold\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  };\n\n  const RowRenderer = props => {\n    var classname = \"row\";\n    var rowTooltip = \"\";\n    var highlightedRow = highlightedRows.find(hr => hr.id == props.rowIdx);\n\n    if (highlightedRow != undefined) {\n      rowTooltip = highlightedRow.message;\n      classname = highlightedRow.type === \"warning\" ? \"row-warning\" : \"row-error\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(ContextMenuTrigger, {\n      id: \"grid-context-menu\",\n      collect: () => {\n        setSelectedRow(props.rowIdx);\n        return {\n          rowIdx: props.rowIdx\n        };\n      },\n      holdToDisplay: \"-1\",\n      children: highlightedRow == undefined ? /*#__PURE__*/_jsxDEV(GridRow, { ...props,\n        className: classname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(LightTooltip, {\n        title: rowTooltip,\n        enterDelay: 1000,\n        enterNextDelay: 1000,\n        interactive: true,\n        placement: \"bottom-start\",\n        arrow: true,\n        children: /*#__PURE__*/_jsxDEV(GridRow, { ...props,\n          className: classname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  };\n\n  const appropriateEditor = col => {\n    if (col.validInput != null) {\n      return p => /*#__PURE__*/_jsxDEV(SelectEditor, {\n        value: p.row[col.column],\n        onChange: value => {\n          if (p.row[col.column] !== value) p.onRowChange({ ...p.row,\n            [col.column]: value\n          }, true);\n        },\n        options: col.validInput.map(c => ({\n          value: c.id,\n          label: c.name\n        })),\n        rowHeight: p.rowHeight,\n        menuPortalTarget: p.editorPortalTarget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this);\n    }\n\n    return TextEditor;\n  };\n\n  const columns = props.columns.map(col => ({\n    key: col.column,\n    name: col.column,\n    headerRenderer: HeaderRenderer,\n    resizable: true,\n    nullable: col.nullable,\n    editor: col.editable ? appropriateEditor(col) : undefined\n  }));\n\n  const onRowDelete = (e, {\n    rowIdx\n  }) => props.onDelete(rowIdx);\n\n  const onRowInsert = (e, {\n    rowIdx\n  }) => props.onInsert(rowIdx);\n\n  const onRowSave = (e, {\n    rowIdx\n  }) => props.onSave(rowIdx);\n\n  const onRefresh = (e, {\n    rowIdx\n  }) => props.onRefresh(rowIdx);\n\n  const onColumnDelete = (e, {\n    column\n  }) => props.onColumnDelete(column);\n\n  const onColumnRename = (oldName, newName) => props.onColumnRename(oldName, newName);\n\n  const onColumnInsert = (e, {\n    column\n  }) => props.onColumnInsert(column);\n\n  const onColumnFilter = e => setOpenColumnFilter(true);\n\n  const rowContextMenu = [{\n    text: \"Save Row\",\n    icon: PublishIcon,\n    onClick: onRowSave\n  }, {\n    text: \"Delete Row\",\n    icon: DeleteIcon,\n    onClick: onRowDelete\n  }, {\n    text: \"Insert Row\",\n    icon: AddIcon,\n    onClick: onRowInsert,\n    dividerAfter: true\n  }, {\n    text: \"Refresh Table\",\n    icon: RefreshIcon,\n    onClick: onRefresh\n  }];\n  const columnContextMenu = [{\n    text: \"Delete Column\",\n    icon: Delete,\n    onClick: onColumnDelete,\n    dividerAfter: true\n  }, {\n    text: \"Show/Hide Columns\",\n    icon: FilterListIcon,\n    onClick: onColumnFilter\n  }, {\n    text: \"Add Column\",\n    icon: AddIcon,\n    onClick: onColumnInsert\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: columnFilters.length > 0 ? columns.filter(f => columnFilters.includes(f.name)) : columns,\n      rows: rows,\n      onRowsChange: (updatedRows, index) => {\n        var idx = index.indexes[0];\n        rows[idx] = updatedRows[idx];\n        onRowChange(updatedRows[idx], idx);\n      },\n      rowGetter: i => rows[i],\n      enableCellSelect: true,\n      rowRenderer: RowRenderer,\n      headerRenderer: HeaderRenderer,\n      style: {\n        height: \"60vh\",\n        overflowX: 'hidden'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContextMenu, {\n      id: \"grid-context-menu\",\n      title: \"Row \" + selectedRow,\n      items: rowContextMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContextMenu, {\n      id: \"header-context-menu\",\n      title: selectedColumn,\n      items: columnContextMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HideColumnsPopup, {\n      open: openColumnFilter,\n      values: columns.map(col => col.name),\n      selection: columnFilters,\n      onApply: i => {\n        setColumnFilters(i);\n        setOpenColumnFilter(false);\n      },\n      onCancel: () => setOpenColumnFilter(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DataGridTable, \"QAZ37Ly0JA8rm88XsUXoN6KGqk8=\");\n\n_c = DataGridTable;\n\nfunction TableContextMenu(props) {\n  const {\n    title,\n    id,\n    items\n  } = props;\n  return /*#__PURE__*/_jsxDEV(ContextMenu, {\n    id: id,\n    style: {\n      background: \"#fafafa\",\n      borderRadius: \"0px 30px 0px 0px\",\n      boxShadow: \"2px 2px  5px grey\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      disabled: true,\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      divider: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), items.map(item => /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n      onClick: item.onClick,\n      text: item.text,\n      icon: item.icon,\n      dividerAfter: item.dividerAfter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 33\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = TableContextMenu;\n\nfunction ContextMenuItem(props) {\n  const {\n    onClick,\n    text,\n    dividerAfter\n  } = props;\n  const MenuIcon = props.icon;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: onClick,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n            fontSize: \"small\",\n            style: {\n              position: 'relative',\n              top: '2px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), dividerAfter && /*#__PURE__*/_jsxDEV(MenuItem, {\n      divider: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n}\n\n_c3 = ContextMenuItem;\n\nfunction HideColumnsPopup(props) {\n  _s2();\n\n  const {\n    open,\n    values,\n    onApply,\n    onCancel\n  } = props;\n  const initialSelection = props.selection;\n  const [selection, setSelection] = useState(props.selection);\n\n  const onEnter = e => {\n    e.preventDefault();\n    onApply(selection);\n  };\n\n  const cancel = e => {\n    setSelection(initialSelection);\n    onCancel();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      \"aria-labelledby\": \"form-dialog-title\",\n      onClose: cancel,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onEnter,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: \"Show/Hide Columns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            children: values.map(v => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                label: v,\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selection.includes(v),\n                  onChange: e => {\n                    if (e.target.checked && !selection.includes(v)) {\n                      setSelection(s => [...s, v]);\n                    } else if (!e.target.checked && selection.includes(v)) {\n                      const i = selection.indexOf(v);\n                      setSelection(s => [...s.slice(0, i), ...s.slice(i + 1)]);\n                    }\n                  },\n                  name: v,\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setSelection([]),\n            color: \"primary\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(HideColumnsPopup, \"8c5+p1JFblQQjdEO3q2llzuPzGo=\");\n\n_c4 = HideColumnsPopup;\nexport default DataGridTable;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DataGridTable\");\n$RefreshReg$(_c2, \"TableContextMenu\");\n$RefreshReg$(_c3, \"ContextMenuItem\");\n$RefreshReg$(_c4, \"HideColumnsPopup\");","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/Table/DataGrid/DataGridTable.js"],"names":["DataGrid","TextEditor","Row","GridRow","React","useState","withStyles","makeStyles","ContextMenu","MenuItem","SubMenu","ContextMenuTrigger","Tooltip","AddIcon","TextField","InputBase","Button","Dialog","DialogActions","DialogContent","DialogTitle","Checkbox","Grid","Typography","FormControlLabel","FilterListIcon","TextFormatIcon","DeleteIcon","RefreshIcon","PublishIcon","Delete","Filter","SelectEditor","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","DataGridTable","props","selectedColumn","setSelectedColumn","selectedRow","setSelectedRow","openColumnFilter","setOpenColumnFilter","columnFilters","setColumnFilters","rows","onRowChange","highlightedRows","highlightRows","changingColumnName","HeaderRenderer","item","column","name","key","e","target","value","onColumnRename","fontWeight","RowRenderer","classname","rowTooltip","highlightedRow","find","hr","id","rowIdx","undefined","message","type","appropriateEditor","col","validInput","p","row","map","c","label","rowHeight","editorPortalTarget","columns","headerRenderer","resizable","nullable","editor","editable","onRowDelete","onDelete","onRowInsert","onInsert","onRowSave","onSave","onRefresh","onColumnDelete","oldName","newName","onColumnInsert","onColumnFilter","rowContextMenu","text","icon","onClick","dividerAfter","columnContextMenu","length","filter","f","includes","updatedRows","index","idx","indexes","i","height","overflowX","TableContextMenu","title","items","background","borderRadius","ContextMenuItem","MenuIcon","position","top","HideColumnsPopup","open","values","onApply","onCancel","initialSelection","selection","setSelection","onEnter","preventDefault","cancel","v","checked","s","indexOf","slice"],"mappings":"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","sourcesContent":["import DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\r\nimport React, { useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport './react-contextmenu.css'\r\nimport './highlight.css'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport TextFormatIcon from '@material-ui/icons/TextFormat';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport { Delete, Filter } from \"@material-ui/icons\";\r\nimport { SelectEditor } from \"./SelectEditor\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.white,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 12,\r\n    },\r\n}))(Tooltip);\r\n\r\nconst DataGridTable = (props) => {\r\n    const [selectedColumn, setSelectedColumn] = useState(null)\r\n    const [selectedRow, setSelectedRow] = useState(null)\r\n    const [openColumnFilter, setOpenColumnFilter] = useState(false)\r\n    const [columnFilters, setColumnFilters] = useState([])\r\n\r\n    var rows = [...props.rows]\r\n    const onRowChange = props.onRowChange\r\n    const highlightedRows = props.highlightRows ? props.highlightRows : []\r\n    var changingColumnName = null\r\n\r\n    const HeaderRenderer = (item) => {\r\n        return (\r\n            <ContextMenuTrigger\r\n                id=\"header-context-menu\"\r\n                collect={() => {\r\n                    setSelectedColumn(item.column.name)\r\n                    return ({ column: item.column.key })\r\n                }}\r\n                holdToDisplay=\"-1\"\r\n            >\r\n                <InputBase\r\n                    inputProps={{ 'aria-label': 'naked' }}\r\n                    autoComplete='off'\r\n                    id=\"name\"\r\n                    onChange={(e) => { changingColumnName = e.target.value }}\r\n                    defaultValue={item.column.name}\r\n                    value={changingColumnName}\r\n                    onBlur={() => {\r\n                        if (changingColumnName != null) onColumnRename(item.column.name, changingColumnName)\r\n                    }}\r\n                    required\r\n                    style={{ fontSize: \"1em\", fontWeight: \"bold\" }}\r\n                />\r\n            </ContextMenuTrigger>\r\n        )\r\n\r\n    }\r\n\r\n    const RowRenderer = (props) => {\r\n        var classname = \"row\"\r\n        var rowTooltip = \"\"\r\n\r\n        var highlightedRow = highlightedRows.find(hr => hr.id == props.rowIdx)\r\n        if (highlightedRow != undefined) {\r\n            rowTooltip = highlightedRow.message\r\n            classname = highlightedRow.type === \"warning\" ? \"row-warning\" : \"row-error\"\r\n        }\r\n\r\n        return (\r\n            <ContextMenuTrigger id=\"grid-context-menu\" collect={() => {\r\n                setSelectedRow(props.rowIdx)\r\n                return ({ rowIdx: props.rowIdx })\r\n            }}\r\n                holdToDisplay=\"-1\"\r\n            >\r\n                {highlightedRow == undefined ?\r\n                    <GridRow {...props} className={classname} />\r\n                    :\r\n                    <LightTooltip\r\n                        title={rowTooltip}\r\n                        enterDelay={1000}\r\n                        enterNextDelay={1000}\r\n                        interactive\r\n                        placement=\"bottom-start\"\r\n                        arrow\r\n                    >\r\n                        <GridRow {...props} className={classname} />\r\n                    </LightTooltip>\r\n                }\r\n            </ContextMenuTrigger>\r\n        );\r\n    }\r\n\r\n    const appropriateEditor = (col) => {\r\n        if (col.validInput != null) {\r\n            return (p => (\r\n                <SelectEditor\r\n                    value={p.row[col.column]}\r\n                    onChange={value => { if(p.row[col.column] !== value) p.onRowChange({ ...p.row, [col.column]: value }, true)}}\r\n                    options={col.validInput.map(c => ({ value: c.id, label: c.name}))}\r\n                    rowHeight={p.rowHeight}\r\n                    menuPortalTarget={p.editorPortalTarget}\r\n                />\r\n            ))\r\n        }\r\n\r\n        return TextEditor\r\n\r\n    }\r\n\r\n\r\n    const columns = props.columns.map(col => ({\r\n        key: col.column,\r\n        name: col.column,\r\n        headerRenderer: HeaderRenderer,\r\n        resizable: true,\r\n        nullable: col.nullable,\r\n        editor: col.editable ? appropriateEditor(col) : undefined\r\n    }));\r\n\r\n\r\n    const onRowDelete = (e, { rowIdx }) => props.onDelete(rowIdx)\r\n    const onRowInsert = (e, { rowIdx }) => props.onInsert(rowIdx)\r\n    const onRowSave = (e, { rowIdx }) => props.onSave(rowIdx)\r\n    const onRefresh = (e, { rowIdx }) => props.onRefresh(rowIdx)\r\n    const onColumnDelete = (e, { column }) => props.onColumnDelete(column)\r\n    const onColumnRename = (oldName, newName) => props.onColumnRename(oldName, newName)\r\n    const onColumnInsert = (e, { column }) => props.onColumnInsert(column)\r\n    const onColumnFilter = (e) => setOpenColumnFilter(true)\r\n\r\n\r\n\r\n    const rowContextMenu = [\r\n        { text: \"Save Row\", icon: PublishIcon, onClick: onRowSave },\r\n        { text: \"Delete Row\", icon: DeleteIcon, onClick: onRowDelete },\r\n        { text: \"Insert Row\", icon: AddIcon, onClick: onRowInsert, dividerAfter: true },\r\n        { text: \"Refresh Table\", icon: RefreshIcon, onClick: onRefresh },\r\n    ]\r\n\r\n    const columnContextMenu = [\r\n        { text: \"Delete Column\", icon: Delete, onClick: onColumnDelete, dividerAfter: true },\r\n        { text: \"Show/Hide Columns\", icon: FilterListIcon, onClick: onColumnFilter },\r\n        { text: \"Add Column\", icon: AddIcon, onClick: onColumnInsert },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <DataGrid\r\n                columns={columnFilters.length > 0 ? columns.filter(f => columnFilters.includes(f.name)) : columns}\r\n                rows={rows}\r\n                onRowsChange={(updatedRows, index) => {\r\n                    var idx = index.indexes[0]\r\n                    rows[idx] = updatedRows[idx]\r\n                    onRowChange(updatedRows[idx], idx)\r\n                }}\r\n                rowGetter={i => rows[i]}\r\n                enableCellSelect={true}\r\n                rowRenderer={RowRenderer}\r\n                headerRenderer={HeaderRenderer}\r\n                style={{ height: \"60vh\", overflowX: 'hidden' }}\r\n            />\r\n\r\n            <TableContextMenu\r\n                id=\"grid-context-menu\"\r\n                title={\"Row \" + selectedRow}\r\n                items={rowContextMenu}\r\n            />\r\n\r\n            <TableContextMenu\r\n                id=\"header-context-menu\"\r\n                title={selectedColumn}\r\n                items={columnContextMenu}\r\n            />\r\n\r\n            <HideColumnsPopup\r\n                open={openColumnFilter}\r\n                values={columns.map(col => col.name)}\r\n                selection={columnFilters}\r\n                onApply={(i) => { setColumnFilters(i); setOpenColumnFilter(false) }}\r\n                onCancel={() => setOpenColumnFilter(false)}\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nfunction TableContextMenu(props) {\r\n    const { title, id, items } = props\r\n\r\n    return (\r\n        <ContextMenu\r\n            id={id}\r\n            style={{ background: \"#fafafa\", borderRadius: \"0px 30px 0px 0px\", boxShadow: \"2px 2px  5px grey\" }}\r\n        >\r\n            <MenuItem disabled><b>{title}</b></MenuItem>\r\n            <MenuItem divider />\r\n            {items.map(item => (<ContextMenuItem onClick={item.onClick} text={item.text} icon={item.icon} dividerAfter={item.dividerAfter} />))}\r\n        </ContextMenu>\r\n    )\r\n}\r\n\r\nfunction ContextMenuItem(props) {\r\n    const { onClick, text, dividerAfter } = props\r\n    const MenuIcon = props.icon\r\n\r\n    return (\r\n        <>\r\n            <MenuItem onClick={onClick} >\r\n                <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                    <Grid item>\r\n                        <MenuIcon fontSize=\"small\" style={{ position: 'relative', top: '2px' }} />\r\n                    </Grid>\r\n                    <Grid item>{text}</Grid>\r\n                </Grid>\r\n            </MenuItem>\r\n            {dividerAfter && <MenuItem divider />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction HideColumnsPopup(props) {\r\n    const { open, values, onApply, onCancel } = props\r\n    const initialSelection = props.selection\r\n    const [selection, setSelection] = useState(props.selection)\r\n\r\n    const onEnter = (e) => {\r\n        e.preventDefault()\r\n        onApply(selection)\r\n    }\r\n\r\n    const cancel = (e) => {\r\n        setSelection(initialSelection)\r\n        onCancel()\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} aria-labelledby=\"form-dialog-title\" onClose={cancel}>\r\n                <form onSubmit={onEnter}>\r\n\r\n                    <DialogTitle id=\"form-dialog-title\">Show/Hide Columns</DialogTitle>\r\n                    <DialogContent>\r\n                        <Grid container direction=\"column\">\r\n                            {values.map(v => (\r\n                                <Grid item>\r\n                                    <FormControlLabel\r\n                                        label={v}\r\n                                        control={\r\n                                            <Checkbox\r\n                                                checked={selection.includes(v)}\r\n                                                onChange={(e) => {\r\n                                                    if (e.target.checked && !selection.includes(v)) {\r\n                                                        setSelection(s => [...s, v])\r\n                                                    } else if (!e.target.checked && selection.includes(v)) {\r\n                                                        const i = selection.indexOf(v)\r\n                                                        setSelection(s => [...s.slice(0, i), ...s.slice(i + 1)])\r\n                                                    }\r\n                                                }}\r\n                                                name={v}\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => setSelection([])} color=\"primary\">Clear</Button>\r\n\r\n                        <Button color=\"primary\" type=\"submit\">Apply</Button>\r\n                    </DialogActions>\r\n                </form>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\nexport default DataGridTable"]},"metadata":{},"sourceType":"module"}