{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\Table\\\\DataGridTable.js\";\nimport DataGrid, { TextEditor } from \"react-data-grid\";\nimport { css } from '@linaria/core';\nimport './highlight.css'; // const highlightClassname = css`\n// .rdg-cell {\n//   background-color: #9370db;\n//   color: white;\n// }\n// &:hover .rdg-cell {\n//   background-color: #800080;\n// }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DataGridTable = props => {\n  if (props.columns.length == 0) {\n    return null;\n  }\n\n  const columns = props.columns.map(col => ({\n    key: col.column,\n    name: col.column,\n    resizable: true,\n    nullable: col.nullable,\n    editor: col.editable ? TextEditor : undefined\n  }));\n  var rows = [...props.rows];\n  const onRowChange = props.onRowChange;\n  const onRowSelect = props.onRowSelect;\n  console.log(props.highlightRows);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: columns,\n      rows: rows,\n      onRowsChange: (updatedRows, index) => {\n        var idx = index.indexes[0];\n        rows[idx] = updatedRows[idx];\n        onRowChange(updatedRows[idx], idx);\n      },\n      rowGetter: i => rows[i],\n      enableCellSelect: true,\n      style: {\n        'height': \"65vh\",\n        overflowX: 'hidden'\n      },\n      className: \"fill-grid\",\n      rowClass: row => props.highlightRows.includes(rows.indexOf(row)) ? \"rdg-cell1\" : undefined,\n      minHeight: \"1000\",\n      onSelectedCellChange: o => onRowSelect(o.rowIdx)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false) //props.highlightRows.includes(rows.indexOf(row)) \n  ;\n};\n\n_c = DataGridTable;\nexport default DataGridTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataGridTable\");","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/Table/DataGridTable.js"],"names":["DataGrid","TextEditor","css","DataGridTable","props","columns","length","map","col","key","column","name","resizable","nullable","editor","editable","undefined","rows","onRowChange","onRowSelect","console","log","highlightRows","updatedRows","index","idx","indexes","i","overflowX","row","includes","indexOf","o","rowIdx"],"mappings":";AAAA,OAAOA,QAAP,IAAmBC,UAAnB,QAAqC,iBAArC;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAO,iBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,MAAGA,KAAK,CAACC,OAAN,CAAcC,MAAd,IAAwB,CAA3B,EAA8B;AAC1B,WAAO,IAAP;AACH;;AACD,QAAMD,OAAO,GAAGD,KAAK,CAACC,OAAN,CAAcE,GAAd,CAAkBC,GAAG,KAAK;AACtCC,IAAAA,GAAG,EAAED,GAAG,CAACE,MAD6B;AAEtCC,IAAAA,IAAI,EAAEH,GAAG,CAACE,MAF4B;AAGtCE,IAAAA,SAAS,EAAE,IAH2B;AAItCC,IAAAA,QAAQ,EAAEL,GAAG,CAACK,QAJwB;AAKtCC,IAAAA,MAAM,EAAEN,GAAG,CAACO,QAAJ,GAAed,UAAf,GAA4Be;AALE,GAAL,CAArB,CAAhB;AAQA,MAAIC,IAAI,GAAG,CAAC,GAAGb,KAAK,CAACa,IAAV,CAAX;AACA,QAAMC,WAAW,GAAGd,KAAK,CAACc,WAA1B;AACA,QAAMC,WAAW,GAAGf,KAAK,CAACe,WAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACkB,aAAlB;AAEA,sBACI;AAAA,2BACI,QAAC,QAAD;AACI,MAAA,OAAO,EAAEjB,OADb;AAEI,MAAA,IAAI,EAAEY,IAFV;AAGI,MAAA,YAAY,EAAE,CAACM,WAAD,EAAcC,KAAd,KAAwB;AAClC,YAAIC,GAAG,GAAGD,KAAK,CAACE,OAAN,CAAc,CAAd,CAAV;AACAT,QAAAA,IAAI,CAACQ,GAAD,CAAJ,GAAYF,WAAW,CAACE,GAAD,CAAvB;AACAP,QAAAA,WAAW,CAACK,WAAW,CAACE,GAAD,CAAZ,EAAmBA,GAAnB,CAAX;AACH,OAPL;AAQI,MAAA,SAAS,EAAEE,CAAC,IAAIV,IAAI,CAACU,CAAD,CARxB;AASI,MAAA,gBAAgB,EAAE,IATtB;AAUI,MAAA,KAAK,EAAE;AAAE,kBAAU,MAAZ;AAAoBC,QAAAA,SAAS,EAAE;AAA/B,OAVX;AAWI,MAAA,SAAS,EAAC,WAXd;AAYI,MAAA,QAAQ,EAAEC,GAAG,IAAIzB,KAAK,CAACkB,aAAN,CAAoBQ,QAApB,CAA6Bb,IAAI,CAACc,OAAL,CAAaF,GAAb,CAA7B,IAAkD,WAAlD,GAAgEb,SAZrF;AAaI,MAAA,SAAS,EAAC,MAbd;AAcI,MAAA,oBAAoB,EAAGgB,CAAD,IAAOb,WAAW,CAACa,CAAC,CAACC,MAAH;AAd5C;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ,CAmBI;AAnBJ;AAqBH,CAtCD;;KAAM9B,a;AAwCN,eAAeA,aAAf","sourcesContent":["import DataGrid, { TextEditor } from \"react-data-grid\";\r\nimport { css } from '@linaria/core';\r\nimport './highlight.css'\r\n\r\n// const highlightClassname = css`\r\n// .rdg-cell {\r\n//   background-color: #9370db;\r\n//   color: white;\r\n// }\r\n// &:hover .rdg-cell {\r\n//   background-color: #800080;\r\n// }\r\n// `;\r\n\r\nconst DataGridTable = (props) => {\r\n    if(props.columns.length == 0) {\r\n        return null\r\n    }\r\n    const columns = props.columns.map(col => ({\r\n        key: col.column,\r\n        name: col.column,\r\n        resizable: true,\r\n        nullable: col.nullable,\r\n        editor: col.editable ? TextEditor : undefined\r\n    }));\r\n\r\n    var rows = [...props.rows]\r\n    const onRowChange = props.onRowChange\r\n    const onRowSelect = props.onRowSelect\r\n    console.log(props.highlightRows)\r\n\r\n    return (\r\n        <>\r\n            <DataGrid\r\n                columns={columns}\r\n                rows={rows}\r\n                onRowsChange={(updatedRows, index) => {\r\n                    var idx = index.indexes[0] \r\n                    rows[idx] = updatedRows[idx]\r\n                    onRowChange(updatedRows[idx], idx)\r\n                }}\r\n                rowGetter={i => rows[i]}\r\n                enableCellSelect={true}\r\n                style={{ 'height': \"65vh\", overflowX: 'hidden' }}\r\n                className=\"fill-grid\"\r\n                rowClass={row => props.highlightRows.includes(rows.indexOf(row)) ? \"rdg-cell1\" : undefined}\r\n                minHeight=\"1000\"\r\n                onSelectedCellChange={(o) => onRowSelect(o.rowIdx)}\r\n            />\r\n        </>\r\n        //props.highlightRows.includes(rows.indexOf(row)) \r\n    )\r\n}\r\n\r\nexport default DataGridTable"]},"metadata":{},"sourceType":"module"}