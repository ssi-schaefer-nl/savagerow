{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\playground\\\\src\\\\Components\\\\Tables\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableDataService from '../../Service/TableDataServices';\nimport { CircularProgress } from '@material-ui/core';\nimport Example from './SavageTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SavageTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this);\n    }\n\n    return (\n      /*#__PURE__*/\n      // <ReactTestGrid/>\n      // <Example/>\n      _jsxDEV(Example, {\n        columns: this.state.headers,\n        rows: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction BasicTable(props) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: props.headers.map(header => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: props.data.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), row.slice(1).map(col => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: col\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this))]\n          }, row[0], true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(BasicTable, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = BasicTable;\nexport default SavageTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["C:/Users/vincent/git/playground/src/Components/Tables/Table.js"],"names":["React","Component","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TableDataService","CircularProgress","Example","SavageTable","state","loading","render","headers","data","useStyles","table","minWidth","BasicTable","props","classes","map","header","row","slice","col"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;;;;AAGA,MAAMC,WAAN,SAA0Bb,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAElCc,KAFkC,GAE1B;AACNC,MAAAA,OAAO,EAAE;AADH,KAF0B;AAAA;;AAMlCC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKF,KAAL,CAAWC,OAAf,EAAwB;AACtB,0BAAQ,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;;AACD;AAAA;AACE;AACA;AACA,cAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWG,OAA7B;AAAsC,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI;AAAvD;AAAA;AAAA;AAAA;AAAA;AAHF;AAKD;;AAfiC;;AAkBpC,MAAMC,SAAS,GAAGjB,UAAU,CAAC;AAC3BkB,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AADoB,CAAD,CAA5B;;AAOA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AAEA,sBACE;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEV,KAA3B;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEe,OAAO,CAACJ,KAA1B;AAAiC,sBAAW,cAA5C;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,QAAD;AAAA,sBACGG,KAAK,CAACN,OAAN,CAAcQ,GAAd,CAAkBC,MAAM,iBACvB,QAAC,SAAD;AAAA,wBAAYA;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,SAAD;AAAA,oBACGH,KAAK,CAACL,IAAN,CAAWO,GAAX,CAAgBE,GAAD,iBACd,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,IAArB;AAA0B,cAAA,KAAK,EAAC,KAAhC;AAAA,wBAAuCA,GAAG,CAAC,CAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAaH,GAAb,CAAkBI,GAAD,iBAChB,QAAC,SAAD;AAAA,wBAAYA;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADD,CAFH;AAAA,aAAeF,GAAG,CAAC,CAAD,CAAlB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyBD;;GA5BQL,U;UACSH,S;;;KADTG,U;AA8BT,eAAeT,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableDataService from '../../Service/TableDataServices';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport Example from './SavageTable';\r\n\r\n\r\nclass SavageTable extends Component {\r\n\r\n  state = {\r\n    loading: true\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (<CircularProgress />)\r\n    }\r\n    return (\r\n      // <ReactTestGrid/>\r\n      // <Example/>\r\n      <Example columns={this.state.headers} rows={this.state.data} />\r\n    )\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\nfunction BasicTable(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.headers.map(header => (\r\n                <TableCell>{header}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.data.map((row) => (\r\n              <TableRow key={row[0]}>\r\n                <TableCell component=\"th\" scope=\"row\">{row[0]}</TableCell>\r\n                {row.slice(1).map((col) => (\r\n                  <TableCell>{col}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SavageTable;"]},"metadata":{},"sourceType":"module"}