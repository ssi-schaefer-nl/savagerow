{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\Table\\\\DataGrid\\\\DataGridTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\nimport React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './react-contextmenu.css';\nimport './highlight.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Grid, Typography } from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport TextFormatIcon from '@material-ui/icons/TextFormat';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 12\n  }\n}))(Tooltip);\n\nconst DataGridTable = props => {\n  _s();\n\n  const [selectedColumn, setSelectedColumn] = useState(null);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [openColumnFilter, setOpenColumnFilter] = useState(false);\n  const [columnFilters, setColumnFilters] = useState([]);\n  var rows = [...props.rows];\n  const onRowChange = props.onRowChange;\n  const highlightedRows = props.highlightRows ? props.highlightRows : [];\n\n  const HeaderRenderer = item => {\n    return /*#__PURE__*/_jsxDEV(ContextMenuTrigger, {\n      id: \"header-context-menu\",\n      collect: () => {\n        setSelectedColumn(item.column.name);\n        return {\n          column: item.column.key\n        };\n      },\n      holdToDisplay: \"-1\",\n      children: item.column.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  };\n\n  const columns = props.columns.map(col => ({\n    key: col.column,\n    name: col.column,\n    headerRenderer: HeaderRenderer,\n    resizable: true,\n    nullable: col.nullable,\n    editor: col.editable ? TextEditor : undefined\n  }));\n\n  const onRowDelete = (e, {\n    rowIdx\n  }) => props.onDelete(rowIdx);\n\n  const onRowInsert = (e, {\n    rowIdx\n  }) => props.onInsert(rowIdx);\n\n  const onRowSave = (e, {\n    rowIdx\n  }) => props.onSave(rowIdx);\n\n  const onRefresh = (e, {\n    rowIdx\n  }) => props.onRefresh(rowIdx);\n\n  const onColumnDelete = (e, {\n    column\n  }) => props.onColumnDelete(column);\n\n  const onColumnRename = (e, {\n    column\n  }) => {};\n\n  const onColumnInsert = (e, {\n    column\n  }) => props.onColumnInsert(column);\n\n  const onColumnFilter = e => setOpenColumnFilter(true);\n\n  const RowRenderer = props => {\n    var classname = \"row\";\n    var rowTooltip = \"\";\n    var highlightedRow = highlightedRows.find(hr => hr.id == props.rowIdx);\n\n    if (highlightedRow != undefined) {\n      rowTooltip = highlightedRow.message;\n      classname = highlightedRow.type === \"warning\" ? \"row-warning\" : \"row-error\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(ContextMenuTrigger, {\n      id: \"grid-context-menu\",\n      collect: () => {\n        setSelectedRow(props.rowIdx);\n        return {\n          rowIdx: props.rowIdx\n        };\n      },\n      holdToDisplay: \"-1\",\n      children: highlightedRow == undefined ? /*#__PURE__*/_jsxDEV(GridRow, { ...props,\n        className: classname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(LightTooltip, {\n        title: rowTooltip,\n        enterDelay: 1000,\n        enterNextDelay: 1000,\n        interactive: true,\n        placement: \"bottom-start\",\n        arrow: true,\n        children: /*#__PURE__*/_jsxDEV(GridRow, { ...props,\n          className: classname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: columns.filter(f => !columnFilters.includes(f.name)),\n      rows: rows,\n      onRowsChange: (updatedRows, index) => {\n        var idx = index.indexes[0];\n        rows[idx] = updatedRows[idx];\n        onRowChange(updatedRows[idx], idx);\n      },\n      rowGetter: i => rows[i],\n      enableCellSelect: true,\n      rowRenderer: RowRenderer,\n      headerRenderer: HeaderRenderer,\n      style: {\n        height: \"60vh\",\n        overflowX: 'hidden'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContextMenu, {\n      id: \"grid-context-menu\",\n      style: {\n        background: \"#fafafa\",\n        borderRadius: \"0px 30px 0px 0px\",\n        boxShadow: \"2px 2px  5px grey\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        disabled: true,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Row \" + selectedRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: onRowSave,\n        text: \"Save Row\",\n        icon: PublishIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: onRowDelete,\n        text: \"Delete Row\",\n        icon: DeleteIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: onRowInsert,\n        text: \"Insert Row\",\n        icon: AddIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: onRefresh,\n        text: \"Refresh table\",\n        icon: RefreshIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContextMenu, {\n      id: \"header-context-menu\",\n      style: {\n        background: \"#fafafa\",\n        borderRadius: \"0px 30px 0px 0px\",\n        boxShadow: \"2px 2px  5px grey\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        disabled: true,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: selectedColumn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: onColumnDelete,\n        text: \"Delete Column\",\n        icon: DeleteIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: onColumnRename,\n        text: \"Rename Column\",\n        icon: TextFormatIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: onColumnInsert,\n        text: \"Add Column\",\n        icon: AddIcon,\n        dividerAfter: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContextMenuItem, {\n        onClick: onColumnFilter,\n        text: \"Show/Hide Columns\",\n        icon: FilterListIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HideColumnsPopup, {\n      open: openColumnFilter,\n      values: columns.map(col => col.name),\n      onApply: setColumnFilters,\n      onClear: () => setColumnFilters([]),\n      onCancel: () => setOpenColumnFilter(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DataGridTable, \"QAZ37Ly0JA8rm88XsUXoN6KGqk8=\");\n\n_c = DataGridTable;\n\nfunction ContextMenuItem(props) {\n  const {\n    onClick,\n    text,\n    dividerAfter\n  } = props;\n  const MenuIcon = props.icon;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: onClick,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n            fontSize: \"small\",\n            style: {\n              position: 'relative',\n              top: '2px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), dividerAfter && /*#__PURE__*/_jsxDEV(MenuItem, {\n      divider: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = ContextMenuItem;\n\nfunction HideColumnsPopup(props) {\n  _s2();\n\n  const {\n    open,\n    values,\n    onApply,\n    onClear,\n    onCancel\n  } = props;\n  const [selection, setSelection] = useState(props.selection ? props.selection : []);\n\n  const onEnter = e => {\n    e.preventDefault();\n    onApply(selection);\n    onCancel();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onEnter,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: \"Show/Hide Columns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            children: values.map(v => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                label: v,\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selection.includes(v),\n                  onChange: e => {\n                    if (e.target.checked && !selection.includes(v)) {\n                      setSelection(s => [...s, v]);\n                    } else if (!e.target.checked && selection.includes(v)) {\n                      const i = selection.indexOf(v);\n                      setSelection(s => [...s.slice(0, i), ...s.slice(i + 1)]);\n                    }\n                  },\n                  name: v,\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onCancel,\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(HideColumnsPopup, \"SRJYVkMAJaoJJfUDRUGlxULRYXM=\");\n\n_c3 = HideColumnsPopup;\nexport default DataGridTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DataGridTable\");\n$RefreshReg$(_c2, \"ContextMenuItem\");\n$RefreshReg$(_c3, \"HideColumnsPopup\");","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/Table/DataGrid/DataGridTable.js"],"names":["DataGrid","TextEditor","Row","GridRow","React","useState","withStyles","makeStyles","ContextMenu","MenuItem","SubMenu","ContextMenuTrigger","Tooltip","AddIcon","Button","Dialog","DialogActions","DialogContent","DialogTitle","Checkbox","Grid","Typography","FormControlLabel","FilterListIcon","TextFormatIcon","DeleteIcon","RefreshIcon","PublishIcon","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","DataGridTable","props","selectedColumn","setSelectedColumn","selectedRow","setSelectedRow","openColumnFilter","setOpenColumnFilter","columnFilters","setColumnFilters","rows","onRowChange","highlightedRows","highlightRows","HeaderRenderer","item","column","name","key","columns","map","col","headerRenderer","resizable","nullable","editor","editable","undefined","onRowDelete","e","rowIdx","onDelete","onRowInsert","onInsert","onRowSave","onSave","onRefresh","onColumnDelete","onColumnRename","onColumnInsert","onColumnFilter","RowRenderer","classname","rowTooltip","highlightedRow","find","hr","id","message","type","filter","f","includes","updatedRows","index","idx","indexes","i","height","overflowX","background","borderRadius","ContextMenuItem","onClick","text","dividerAfter","MenuIcon","icon","position","top","HideColumnsPopup","open","values","onApply","onClear","onCancel","selection","setSelection","onEnter","preventDefault","v","target","checked","s","indexOf","slice"],"mappings":"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","sourcesContent":["import DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\r\nimport React, { useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport './react-contextmenu.css'\r\nimport './highlight.css'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport TextFormatIcon from '@material-ui/icons/TextFormat';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nconst LightTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.white,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 12,\r\n    },\r\n}))(Tooltip);\r\n\r\nconst DataGridTable = (props) => {\r\n    const [selectedColumn, setSelectedColumn] = useState(null)\r\n    const [selectedRow, setSelectedRow] = useState(null)\r\n    const [openColumnFilter, setOpenColumnFilter] = useState(false)\r\n    const [columnFilters, setColumnFilters] = useState([])\r\n\r\n    var rows = [...props.rows]\r\n    const onRowChange = props.onRowChange\r\n    const highlightedRows = props.highlightRows ? props.highlightRows : []\r\n\r\n\r\n    const HeaderRenderer = (item) => {\r\n        return (\r\n            <ContextMenuTrigger\r\n                id=\"header-context-menu\"\r\n                collect={() => {\r\n                    setSelectedColumn(item.column.name)\r\n                    return ({ column: item.column.key })\r\n                }}\r\n                holdToDisplay=\"-1\"\r\n            >\r\n                {item.column.name}\r\n            </ContextMenuTrigger>\r\n        )\r\n\r\n    }\r\n\r\n\r\n    const columns = props.columns.map(col => ({\r\n        key: col.column,\r\n        name: col.column,\r\n        headerRenderer: HeaderRenderer,\r\n        resizable: true,\r\n        nullable: col.nullable,\r\n        editor: col.editable ? TextEditor : undefined\r\n    }));\r\n\r\n\r\n    const onRowDelete = (e, { rowIdx }) => props.onDelete(rowIdx)\r\n    const onRowInsert = (e, { rowIdx }) => props.onInsert(rowIdx)\r\n    const onRowSave = (e, { rowIdx }) => props.onSave(rowIdx)\r\n    const onRefresh = (e, { rowIdx }) => props.onRefresh(rowIdx)\r\n    const onColumnDelete = (e, { column }) => props.onColumnDelete(column)\r\n    const onColumnRename = (e, { column }) => { }\r\n    const onColumnInsert = (e, { column }) => props.onColumnInsert(column)\r\n    const onColumnFilter = (e) => setOpenColumnFilter(true)\r\n\r\n\r\n    const RowRenderer = (props) => {\r\n        var classname = \"row\"\r\n        var rowTooltip = \"\"\r\n\r\n        var highlightedRow = highlightedRows.find(hr => hr.id == props.rowIdx)\r\n        if (highlightedRow != undefined) {\r\n            rowTooltip = highlightedRow.message\r\n            classname = highlightedRow.type === \"warning\" ? \"row-warning\" : \"row-error\"\r\n        }\r\n\r\n        return (\r\n            <ContextMenuTrigger id=\"grid-context-menu\" collect={() => {\r\n                setSelectedRow(props.rowIdx)\r\n                return ({ rowIdx: props.rowIdx })\r\n            }}\r\n                holdToDisplay=\"-1\"\r\n            >\r\n                {highlightedRow == undefined ?\r\n                    <GridRow {...props} className={classname} />\r\n                    :\r\n                    <LightTooltip\r\n                        title={rowTooltip}\r\n                        enterDelay={1000}\r\n                        enterNextDelay={1000}\r\n                        interactive\r\n                        placement=\"bottom-start\"\r\n                        arrow\r\n                    >\r\n                        <GridRow {...props} className={classname} />\r\n                    </LightTooltip>\r\n                }\r\n            </ContextMenuTrigger>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <DataGrid\r\n                columns={columns.filter(f => !columnFilters.includes(f.name))}\r\n                rows={rows}\r\n                onRowsChange={(updatedRows, index) => {\r\n                    var idx = index.indexes[0]\r\n                    rows[idx] = updatedRows[idx]\r\n                    onRowChange(updatedRows[idx], idx)\r\n                }}\r\n                rowGetter={i => rows[i]}\r\n                enableCellSelect={true}\r\n                rowRenderer={RowRenderer}\r\n                headerRenderer={HeaderRenderer}\r\n                style={{ height: \"60vh\", overflowX: 'hidden' }}\r\n            />\r\n\r\n            <ContextMenu\r\n                id=\"grid-context-menu\"\r\n                style={{ background: \"#fafafa\", borderRadius: \"0px 30px 0px 0px\", boxShadow: \"2px 2px  5px grey\" }}\r\n            >\r\n                <MenuItem disabled><b>{\"Row \" + selectedRow}</b></MenuItem>\r\n                <MenuItem divider />\r\n                <ContextMenuItem onClick={onRowSave} text={\"Save Row\"} icon={PublishIcon} />\r\n                <ContextMenuItem onClick={onRowDelete} text={\"Delete Row\"} icon={DeleteIcon} />\r\n                <ContextMenuItem onClick={onRowInsert} text={\"Insert Row\"} icon={AddIcon} />\r\n                <MenuItem divider />\r\n                <ContextMenuItem onClick={onRefresh} text={\"Refresh table\"} icon={RefreshIcon} />\r\n            </ContextMenu>\r\n\r\n            <ContextMenu\r\n                id=\"header-context-menu\"\r\n                style={{ background: \"#fafafa\", borderRadius: \"0px 30px 0px 0px\", boxShadow: \"2px 2px  5px grey\" }}\r\n            >\r\n                <MenuItem disabled><b>{selectedColumn}</b></MenuItem>\r\n                <MenuItem divider />\r\n                <ContextMenuItem onClick={onColumnDelete} text={\"Delete Column\"} icon={DeleteIcon} />\r\n                <ContextMenuItem onClick={onColumnRename} text={\"Rename Column\"} icon={TextFormatIcon} />\r\n                <MenuItem divider />\r\n                <ContextMenuItem onClick={onColumnInsert} text={\"Add Column\"} icon={AddIcon} dividerAfter={true}/>\r\n                <MenuItem divider />\r\n                <ContextMenuItem onClick={onColumnFilter} text={\"Show/Hide Columns\"} icon={FilterListIcon} />\r\n            </ContextMenu>\r\n\r\n            <HideColumnsPopup\r\n                open={openColumnFilter}\r\n                values={columns.map(col => col.name)}\r\n                onApply={setColumnFilters}\r\n                onClear={() => setColumnFilters([])}\r\n                onCancel={() => setOpenColumnFilter(false)}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nfunction ContextMenuItem(props) {\r\n    const { onClick, text, dividerAfter } = props\r\n    const MenuIcon = props.icon\r\n\r\n    return (\r\n        <>\r\n        <MenuItem onClick={onClick} >\r\n            <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                <Grid item>\r\n                    <MenuIcon fontSize=\"small\" style={{ position: 'relative', top: '2px' }} />\r\n                </Grid>\r\n                <Grid item>{text}</Grid>\r\n            </Grid>\r\n        </MenuItem>\r\n        {dividerAfter && <MenuItem divider />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction HideColumnsPopup(props) {\r\n    const { open, values, onApply, onClear, onCancel } = props\r\n    const [selection, setSelection] = useState(props.selection ? props.selection : [])\r\n\r\n    const onEnter = (e) => {\r\n        e.preventDefault()\r\n        onApply(selection)\r\n        onCancel()\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n                <form onSubmit={onEnter}>\r\n\r\n                    <DialogTitle id=\"form-dialog-title\">Show/Hide Columns</DialogTitle>\r\n                    <DialogContent>\r\n                        <Grid container direction=\"column\">\r\n                            {values.map(v => (\r\n                                <Grid item>\r\n                                    <FormControlLabel\r\n                                        label={v}\r\n                                        control={\r\n                                            <Checkbox\r\n                                                checked={selection.includes(v)}\r\n                                                onChange={(e) => {\r\n                                                    if (e.target.checked && !selection.includes(v)) {\r\n                                                        setSelection(s => [...s, v])\r\n                                                    } else if (!e.target.checked && selection.includes(v)) {\r\n                                                        const i = selection.indexOf(v)\r\n                                                        setSelection(s => [...s.slice(0, i), ...s.slice(i + 1)])\r\n                                                    }\r\n                                                }}\r\n                                                name={v}\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" type=\"submit\">Apply</Button>\r\n                        <Button onClick={onCancel} color=\"primary\">Cancel</Button>\r\n                    </DialogActions>\r\n                </form>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\nexport default DataGridTable"]},"metadata":{},"sourceType":"module"}