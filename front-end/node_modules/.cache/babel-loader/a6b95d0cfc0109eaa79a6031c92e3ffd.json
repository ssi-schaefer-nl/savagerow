{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\MultiSelect\\\\MultiSelect.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport Select, { components } from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst groupStyles = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\"\n};\nconst groupBadgeStyles = {\n  backgroundColor: \"#EBECF0\",\n  borderRadius: \"2em\",\n  color: \"#172B4D\",\n  display: \"inline-block\",\n  fontSize: 12,\n  fontWeight: \"normal\",\n  lineHeight: \"1\",\n  minWidth: 1,\n  padding: \"0.16666666666667em 0.5em\",\n  textAlign: \"center\"\n};\n\nconst formatGroupLabel = data => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: groupStyles,\n  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    style: groupBadgeStyles,\n    children: data.options.length\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this);\n\nclass MultiSelect extends Component {\n  constructor(...args) {\n    super(...args);\n    this.customStyles = {\n      valueContainer: (provided, state) => ({ ...provided,\n        textOverflow: \"ellipsis\",\n        maxWidth: \"90%\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        display: \"initial\"\n      })\n    };\n\n    this.multiValueContainer = ({\n      selectProps,\n      data\n    }) => {\n      const label = data.label;\n      const allSelected = selectProps.value;\n      const index = allSelected.findIndex(selected => selected.label === label);\n      const isLastSelected = index === allSelected.length - 1;\n      const labelSuffix = isLastSelected ? ` (${allSelected.length})` : \", \";\n      const val = `${label}${labelSuffix}`;\n      return val;\n    };\n  }\n\n  render() {\n    const {\n      options\n    } = this.props;\n    const {\n      CustomOption,\n      multiValueContainer,\n      customStyles,\n      ValueContainer\n    } = this;\n    return /*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      isMulti: true,\n      components: {\n        MultiValueContainer: multiValueContainer // Option: CustomOption,\n\n      },\n      formatGroupLabel: formatGroupLabel,\n      closeMenuOnSelect: false,\n      hideSelectedOptions: false,\n      styles: customStyles,\n      isSearchable: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMultiSelect.propTypes = {\n  optionGroups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    //for group\n    options: PropTypes.arrayOf( // group options\n    PropTypes.arrayOf(PropTypes.shape({\n      //\n      value: PropTypes.oneOf([PropTypes.string, PropTypes.number, PropTypes.object]).isRequired,\n      label: PropTypes.string.isRequired\n    })).isRequired)\n  }))\n};\nexport default MultiSelect;","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/MultiSelect/MultiSelect.js"],"names":["React","Component","ReactDOM","PropTypes","Select","components","groupStyles","display","alignItems","justifyContent","groupBadgeStyles","backgroundColor","borderRadius","color","fontSize","fontWeight","lineHeight","minWidth","padding","textAlign","formatGroupLabel","data","label","options","length","MultiSelect","customStyles","valueContainer","provided","state","textOverflow","maxWidth","whiteSpace","overflow","multiValueContainer","selectProps","allSelected","value","index","findIndex","selected","isLastSelected","labelSuffix","val","render","props","CustomOption","ValueContainer","MultiValueContainer","propTypes","optionGroups","arrayOf","shape","string","oneOf","number","object","isRequired"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport Select, { components } from \"react-select\";\r\n\r\nconst groupStyles = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"space-between\"\r\n};\r\n\r\nconst groupBadgeStyles = {\r\n  backgroundColor: \"#EBECF0\",\r\n  borderRadius: \"2em\",\r\n  color: \"#172B4D\",\r\n  display: \"inline-block\",\r\n  fontSize: 12,\r\n  fontWeight: \"normal\",\r\n  lineHeight: \"1\",\r\n  minWidth: 1,\r\n  padding: \"0.16666666666667em 0.5em\",\r\n  textAlign: \"center\"\r\n};\r\n\r\nconst formatGroupLabel = data => (\r\n  <div style={groupStyles}>\r\n    <span>{data.label}</span>\r\n    <span style={groupBadgeStyles}>{data.options.length}</span>\r\n  </div>\r\n);\r\n\r\nclass MultiSelect extends Component {\r\n  customStyles = {\r\n    valueContainer: (provided, state) => ({\r\n      ...provided,\r\n      textOverflow: \"ellipsis\",\r\n      maxWidth: \"90%\",\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      display: \"initial\"\r\n    })\r\n  };\r\n\r\n  multiValueContainer = ({ selectProps, data }) => {\r\n    const label = data.label;\r\n    const allSelected = selectProps.value;\r\n    const index = allSelected.findIndex(selected => selected.label === label);\r\n    const isLastSelected = index === allSelected.length - 1;\r\n    const labelSuffix = isLastSelected ? ` (${allSelected.length})` : \", \";\r\n    const val = `${label}${labelSuffix}`;\r\n    return val;\r\n  };\r\n\r\n  render() {\r\n    const { options } = this.props;\r\n    const {\r\n      CustomOption,\r\n      multiValueContainer,\r\n      customStyles,\r\n      ValueContainer\r\n    } = this;\r\n    return (\r\n      <Select\r\n        options={options}\r\n        isMulti\r\n        components={{\r\n          MultiValueContainer: multiValueContainer\r\n          // Option: CustomOption,\r\n        }}\r\n        formatGroupLabel={formatGroupLabel}\r\n        closeMenuOnSelect={false}\r\n        hideSelectedOptions={false}\r\n        styles={customStyles}\r\n        isSearchable={false}\r\n      />\r\n    );\r\n  }\r\n}\r\nMultiSelect.propTypes = {\r\n  optionGroups: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string, //for group\r\n      options: PropTypes.arrayOf(\r\n        // group options\r\n        PropTypes.arrayOf(\r\n          PropTypes.shape({\r\n            //\r\n            value: PropTypes.oneOf([\r\n              PropTypes.string,\r\n              PropTypes.number,\r\n              PropTypes.object\r\n            ]).isRequired,\r\n            label: PropTypes.string.isRequired\r\n          })\r\n        ).isRequired\r\n      )\r\n    })\r\n  )\r\n};\r\n\r\nexport default MultiSelect"]},"metadata":{},"sourceType":"module"}