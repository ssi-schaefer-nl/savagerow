{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vincent\\\\git\\\\savagerow\\\\front-end\\\\src\\\\Components\\\\Table\\\\DataGridTable.js\";\nimport DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\nimport { createPortal } from 'react-dom';\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\nimport './highlight.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RowRenderer = props => {\n  return /*#__PURE__*/_jsxDEV(ContextMenuTrigger, {\n    id: \"grid-context-menu\",\n    collect: () => ({\n      rowIdx: props.rowIdx\n    }),\n    children: /*#__PURE__*/_jsxDEV(GridRow, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = RowRenderer;\n\nconst DataGridTable = props => {\n  if (props.columns.length == 0) {\n    return null;\n  }\n\n  const columns = props.columns.map(col => ({\n    key: col.column,\n    name: col.column,\n    resizable: true,\n    nullable: col.nullable,\n    editor: col.editable ? TextEditor : undefined\n  }));\n  var rows = [...props.rows];\n  const onRowChange = props.onRowChange;\n  const onRowSelect = props.onRowSelect;\n\n  const onRowDelete = (e, {\n    rowIdx\n  }) => {\n    props.onDelete(rowIdx);\n  };\n\n  const onRowInsertAbove = (e, {\n    rowIdx\n  }) => {\n    props.onInsertAbove(rowIdx);\n  };\n\n  const onRowInsertBelow = (e, {\n    rowIdx\n  }) => {\n    props.onInsertBelow(rowIdx);\n  };\n\n  const onRowSave = (e, {\n    rowIdx\n  }) => {\n    props.onSave(rowIdx);\n  };\n\n  const onRefresh = (e, {\n    rowIdx\n  }) => {\n    props.onRefresh(rowIdx);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: columns,\n      rows: rows,\n      onRowsChange: (updatedRows, index) => {\n        var idx = index.indexes[0];\n        rows[idx] = updatedRows[idx];\n        onRowChange(updatedRows[idx], idx);\n      },\n      rowGetter: i => rows[i],\n      enableCellSelect: true,\n      rowRenderer: RowRenderer,\n      style: {\n        'height': \"65vh\",\n        overflowX: 'hidden'\n      },\n      className: \"fill-grid\",\n      rowClass: row => props.highlightRows.includes(rows.indexOf(row)) ? \"row-highlighted\" : \"row\",\n      minHeight: \"1000\",\n      onSelectedCellChange: o => onRowSelect(o.rowIdx)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContextMenu, {\n      id: \"grid-context-menu\",\n      style: {\n        background: \"#fafafa\",\n        borderRadius: \"0px 30px 0px 0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRowSave,\n        children: \"Save Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRowDelete,\n        children: \"Delete Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SubMenu, {\n        title: \"Insert Row\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: onRowInsertAbove,\n          children: \"Above\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: onRowInsertBelow,\n          children: \"Below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onRefresh,\n        children: \"Refresh table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        divider: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = DataGridTable;\nexport default DataGridTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RowRenderer\");\n$RefreshReg$(_c2, \"DataGridTable\");","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/src/Components/Table/DataGridTable.js"],"names":["DataGrid","TextEditor","Row","GridRow","createPortal","ContextMenu","MenuItem","SubMenu","ContextMenuTrigger","RowRenderer","props","rowIdx","DataGridTable","columns","length","map","col","key","column","name","resizable","nullable","editor","editable","undefined","rows","onRowChange","onRowSelect","onRowDelete","e","onDelete","onRowInsertAbove","onInsertAbove","onRowInsertBelow","onInsertBelow","onRowSave","onSave","onRefresh","updatedRows","index","idx","indexes","i","overflowX","row","highlightRows","includes","indexOf","o","background","borderRadius"],"mappings":"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","sourcesContent":["import DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\r\nimport { createPortal } from 'react-dom';\r\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\r\n\r\nimport './highlight.css'\r\n\r\nconst RowRenderer = (props) => {\r\n    return (\r\n        <ContextMenuTrigger id=\"grid-context-menu\" collect={() => ({ rowIdx: props.rowIdx })}>\r\n            <GridRow {...props} />\r\n        </ContextMenuTrigger>\r\n    );\r\n}\r\n\r\nconst DataGridTable = (props) => {\r\n    if (props.columns.length == 0) {\r\n        return null\r\n    }\r\n    const columns = props.columns.map(col => ({\r\n        key: col.column,\r\n        name: col.column,\r\n        resizable: true,\r\n        nullable: col.nullable,\r\n        editor: col.editable ? TextEditor : undefined\r\n    }));\r\n\r\n    var rows = [...props.rows]\r\n    const onRowChange = props.onRowChange\r\n    const onRowSelect = props.onRowSelect\r\n\r\n    const onRowDelete = (e, { rowIdx }) => {\r\n        props.onDelete(rowIdx)\r\n    }\r\n\r\n    const onRowInsertAbove = (e, { rowIdx }) => {\r\n        props.onInsertAbove(rowIdx)\r\n    }\r\n\r\n    const onRowInsertBelow = (e, { rowIdx }) => {\r\n        props.onInsertBelow(rowIdx)\r\n    }\r\n\r\n    const onRowSave = (e, { rowIdx }) => {\r\n        props.onSave(rowIdx)\r\n    }\r\n\r\n\r\n    const onRefresh = (e, { rowIdx }) => {\r\n        props.onRefresh(rowIdx)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <DataGrid\r\n                columns={columns}\r\n                rows={rows}\r\n                onRowsChange={(updatedRows, index) => {\r\n                    var idx = index.indexes[0]\r\n                    rows[idx] = updatedRows[idx]\r\n                    onRowChange(updatedRows[idx], idx)\r\n                }}\r\n                rowGetter={i => rows[i]}\r\n                enableCellSelect={true}\r\n                rowRenderer={RowRenderer}\r\n                style={{ 'height': \"65vh\", overflowX: 'hidden' }}\r\n                className=\"fill-grid\"\r\n                rowClass={row => props.highlightRows.includes(rows.indexOf(row)) ? \"row-highlighted\" : \"row\"}\r\n                minHeight=\"1000\"\r\n                onSelectedCellChange={(o) => onRowSelect(o.rowIdx)}\r\n            />\r\n\r\n            <ContextMenu id=\"grid-context-menu\" style={{background: \"#fafafa\", borderRadius: \"0px 30px 0px 0px\"}}>\r\n                <MenuItem onClick={onRowSave}>Save Row</MenuItem>\r\n                <MenuItem onClick={onRowDelete}>Delete Row</MenuItem>\r\n                <SubMenu title=\"Insert Row\">\r\n                    <MenuItem onClick={onRowInsertAbove}>Above</MenuItem>\r\n                    <MenuItem onClick={onRowInsertBelow}>Below</MenuItem>\r\n                </SubMenu>\r\n                <MenuItem divider/>\r\n                <MenuItem onClick={onRefresh}>Refresh table</MenuItem>\r\n                <MenuItem divider/>\r\n                <MenuItem ><b>Cancel</b></MenuItem>\r\n            </ContextMenu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataGridTable"]},"metadata":{},"sourceType":"module"}