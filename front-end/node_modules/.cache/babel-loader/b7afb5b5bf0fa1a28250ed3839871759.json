{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _isArray = require('lodash/isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _matchesType = require('./utils/matchesType');\n\nvar _matchesType2 = _interopRequireDefault(_matchesType);\n\nvar _HandlerRegistry = require('./HandlerRegistry');\n\nvar _HandlerRegistry2 = _interopRequireDefault(_HandlerRegistry);\n\nvar _dragOffset = require('./reducers/dragOffset');\n\nvar _dirtyHandlerIds = require('./reducers/dirtyHandlerIds');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar DragDropMonitor = function () {\n  function DragDropMonitor(store) {\n    _classCallCheck(this, DragDropMonitor);\n\n    this.store = store;\n    this.registry = new _HandlerRegistry2.default(store);\n  }\n\n  _createClass(DragDropMonitor, [{\n    key: 'subscribeToStateChange',\n    value: function subscribeToStateChange(listener) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var handlerIds = options.handlerIds;\n      (0, _invariant2.default)(typeof listener === 'function', 'listener must be a function.');\n      (0, _invariant2.default)(typeof handlerIds === 'undefined' || (0, _isArray2.default)(handlerIds), 'handlerIds, when specified, must be an array of strings.');\n      var prevStateId = this.store.getState().stateId;\n\n      var handleChange = function handleChange() {\n        var state = _this.store.getState();\n\n        var currentStateId = state.stateId;\n\n        try {\n          var canSkipListener = currentStateId === prevStateId || currentStateId === prevStateId + 1 && !(0, _dirtyHandlerIds.areDirty)(state.dirtyHandlerIds, handlerIds);\n\n          if (!canSkipListener) {\n            listener();\n          }\n        } finally {\n          prevStateId = currentStateId;\n        }\n      };\n\n      return this.store.subscribe(handleChange);\n    }\n  }, {\n    key: 'subscribeToOffsetChange',\n    value: function subscribeToOffsetChange(listener) {\n      var _this2 = this;\n\n      (0, _invariant2.default)(typeof listener === 'function', 'listener must be a function.');\n      var previousState = this.store.getState().dragOffset;\n\n      var handleChange = function handleChange() {\n        var nextState = _this2.store.getState().dragOffset;\n\n        if (nextState === previousState) {\n          return;\n        }\n\n        previousState = nextState;\n        listener();\n      };\n\n      return this.store.subscribe(handleChange);\n    }\n  }, {\n    key: 'canDragSource',\n    value: function canDragSource(sourceId) {\n      var source = this.registry.getSource(sourceId);\n      (0, _invariant2.default)(source, 'Expected to find a valid source.');\n\n      if (this.isDragging()) {\n        return false;\n      }\n\n      return source.canDrag(this, sourceId);\n    }\n  }, {\n    key: 'canDropOnTarget',\n    value: function canDropOnTarget(targetId) {\n      var target = this.registry.getTarget(targetId);\n      (0, _invariant2.default)(target, 'Expected to find a valid target.');\n\n      if (!this.isDragging() || this.didDrop()) {\n        return false;\n      }\n\n      var targetType = this.registry.getTargetType(targetId);\n      var draggedItemType = this.getItemType();\n      return (0, _matchesType2.default)(targetType, draggedItemType) && target.canDrop(this, targetId);\n    }\n  }, {\n    key: 'isDragging',\n    value: function isDragging() {\n      return Boolean(this.getItemType());\n    }\n  }, {\n    key: 'isDraggingSource',\n    value: function isDraggingSource(sourceId) {\n      var source = this.registry.getSource(sourceId, true);\n      (0, _invariant2.default)(source, 'Expected to find a valid source.');\n\n      if (!this.isDragging() || !this.isSourcePublic()) {\n        return false;\n      }\n\n      var sourceType = this.registry.getSourceType(sourceId);\n      var draggedItemType = this.getItemType();\n\n      if (sourceType !== draggedItemType) {\n        return false;\n      }\n\n      return source.isDragging(this, sourceId);\n    }\n  }, {\n    key: 'isOverTarget',\n    value: function isOverTarget(targetId) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        shallow: false\n      };\n      var shallow = options.shallow;\n\n      if (!this.isDragging()) {\n        return false;\n      }\n\n      var targetType = this.registry.getTargetType(targetId);\n      var draggedItemType = this.getItemType();\n\n      if (!(0, _matchesType2.default)(targetType, draggedItemType)) {\n        return false;\n      }\n\n      var targetIds = this.getTargetIds();\n\n      if (!targetIds.length) {\n        return false;\n      }\n\n      var index = targetIds.indexOf(targetId);\n\n      if (shallow) {\n        return index === targetIds.length - 1;\n      } else {\n        return index > -1;\n      }\n    }\n  }, {\n    key: 'getItemType',\n    value: function getItemType() {\n      return this.store.getState().dragOperation.itemType;\n    }\n  }, {\n    key: 'getItem',\n    value: function getItem() {\n      return this.store.getState().dragOperation.item;\n    }\n  }, {\n    key: 'getSourceId',\n    value: function getSourceId() {\n      return this.store.getState().dragOperation.sourceId;\n    }\n  }, {\n    key: 'getTargetIds',\n    value: function getTargetIds() {\n      return this.store.getState().dragOperation.targetIds;\n    }\n  }, {\n    key: 'getDropResult',\n    value: function getDropResult() {\n      return this.store.getState().dragOperation.dropResult;\n    }\n  }, {\n    key: 'didDrop',\n    value: function didDrop() {\n      return this.store.getState().dragOperation.didDrop;\n    }\n  }, {\n    key: 'isSourcePublic',\n    value: function isSourcePublic() {\n      return this.store.getState().dragOperation.isSourcePublic;\n    }\n  }, {\n    key: 'getInitialClientOffset',\n    value: function getInitialClientOffset() {\n      return this.store.getState().dragOffset.initialClientOffset;\n    }\n  }, {\n    key: 'getInitialSourceClientOffset',\n    value: function getInitialSourceClientOffset() {\n      return this.store.getState().dragOffset.initialSourceClientOffset;\n    }\n  }, {\n    key: 'getClientOffset',\n    value: function getClientOffset() {\n      return this.store.getState().dragOffset.clientOffset;\n    }\n  }, {\n    key: 'getSourceClientOffset',\n    value: function getSourceClientOffset() {\n      return (0, _dragOffset.getSourceClientOffset)(this.store.getState().dragOffset);\n    }\n  }, {\n    key: 'getDifferenceFromInitialOffset',\n    value: function getDifferenceFromInitialOffset() {\n      return (0, _dragOffset.getDifferenceFromInitialOffset)(this.store.getState().dragOffset);\n    }\n  }]);\n\n  return DragDropMonitor;\n}();\n\nexports.default = DragDropMonitor;","map":{"version":3,"sources":["C:/Users/vincent/git/savagerow/front-end/node_modules/dnd-core/lib/DragDropMonitor.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_invariant","require","_invariant2","_interopRequireDefault","_isArray","_isArray2","_matchesType","_matchesType2","_HandlerRegistry","_HandlerRegistry2","_dragOffset","_dirtyHandlerIds","obj","__esModule","default","_classCallCheck","instance","TypeError","DragDropMonitor","store","registry","subscribeToStateChange","listener","_this","options","arguments","undefined","handlerIds","prevStateId","getState","stateId","handleChange","state","currentStateId","canSkipListener","areDirty","dirtyHandlerIds","subscribe","subscribeToOffsetChange","_this2","previousState","dragOffset","nextState","canDragSource","sourceId","source","getSource","isDragging","canDrag","canDropOnTarget","targetId","getTarget","didDrop","targetType","getTargetType","draggedItemType","getItemType","canDrop","Boolean","isDraggingSource","isSourcePublic","sourceType","getSourceType","isOverTarget","shallow","targetIds","getTargetIds","index","indexOf","dragOperation","itemType","getItem","item","getSourceId","getDropResult","dropResult","getInitialClientOffset","initialClientOffset","getInitialSourceClientOffset","initialSourceClientOffset","getClientOffset","clientOffset","getSourceClientOffset","getDifferenceFromInitialOffset"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC5CC,EAAAA,KAAK,EAAE;AADqC,CAA7C;;AAIA,IAAIC,YAAY,GAAG,YAAY;AAAE,WAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,KAAlC,EAAyC;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAE,UAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AAA2BE,MAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,MAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,UAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4Bb,MAAAA,MAAM,CAACC,cAAP,CAAsBK,MAAtB,EAA8BI,UAAU,CAACI,GAAzC,EAA8CJ,UAA9C;AAA4D;AAAE;;AAAC,SAAO,UAAUK,WAAV,EAAuBC,UAAvB,EAAmCC,WAAnC,EAAgD;AAAE,QAAID,UAAJ,EAAgBX,gBAAgB,CAACU,WAAW,CAACG,SAAb,EAAwBF,UAAxB,CAAhB;AAAqD,QAAIC,WAAJ,EAAiBZ,gBAAgB,CAACU,WAAD,EAAcE,WAAd,CAAhB;AAA4C,WAAOF,WAAP;AAAqB,GAAhN;AAAmN,CAA9hB,EAAnB;;AAEA,IAAII,UAAU,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACH,UAAD,CAAxC;;AAEA,IAAII,QAAQ,GAAGH,OAAO,CAAC,gBAAD,CAAtB;;AAEA,IAAII,SAAS,GAAGF,sBAAsB,CAACC,QAAD,CAAtC;;AAEA,IAAIE,YAAY,GAAGL,OAAO,CAAC,qBAAD,CAA1B;;AAEA,IAAIM,aAAa,GAAGJ,sBAAsB,CAACG,YAAD,CAA1C;;AAEA,IAAIE,gBAAgB,GAAGP,OAAO,CAAC,mBAAD,CAA9B;;AAEA,IAAIQ,iBAAiB,GAAGN,sBAAsB,CAACK,gBAAD,CAA9C;;AAEA,IAAIE,WAAW,GAAGT,OAAO,CAAC,uBAAD,CAAzB;;AAEA,IAAIU,gBAAgB,GAAGV,OAAO,CAAC,4BAAD,CAA9B;;AAEA,SAASE,sBAAT,CAAgCS,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,SAASG,eAAT,CAAyBC,QAAzB,EAAmCpB,WAAnC,EAAgD;AAAE,MAAI,EAAEoB,QAAQ,YAAYpB,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIqB,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,IAAIC,eAAe,GAAG,YAAY;AACjC,WAASA,eAAT,CAAyBC,KAAzB,EAAgC;AAC/BJ,IAAAA,eAAe,CAAC,IAAD,EAAOG,eAAP,CAAf;;AAEA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,QAAL,GAAgB,IAAIX,iBAAiB,CAACK,OAAtB,CAA8BK,KAA9B,CAAhB;AACA;;AAEDlC,EAAAA,YAAY,CAACiC,eAAD,EAAkB,CAAC;AAC9BvB,IAAAA,GAAG,EAAE,wBADyB;AAE9BX,IAAAA,KAAK,EAAE,SAASqC,sBAAT,CAAgCC,QAAhC,EAA0C;AAChD,UAAIC,KAAK,GAAG,IAAZ;;AAEA,UAAIC,OAAO,GAAGC,SAAS,CAACnC,MAAV,GAAmB,CAAnB,IAAwBmC,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,UAAIE,UAAU,GAAGH,OAAO,CAACG,UAAzB;AAEA,OAAC,GAAGzB,WAAW,CAACY,OAAhB,EAAyB,OAAOQ,QAAP,KAAoB,UAA7C,EAAyD,8BAAzD;AACA,OAAC,GAAGpB,WAAW,CAACY,OAAhB,EAAyB,OAAOa,UAAP,KAAsB,WAAtB,IAAqC,CAAC,GAAGtB,SAAS,CAACS,OAAd,EAAuBa,UAAvB,CAA9D,EAAkG,0DAAlG;AAEA,UAAIC,WAAW,GAAG,KAAKT,KAAL,CAAWU,QAAX,GAAsBC,OAAxC;;AACA,UAAIC,YAAY,GAAG,SAASA,YAAT,GAAwB;AAC1C,YAAIC,KAAK,GAAGT,KAAK,CAACJ,KAAN,CAAYU,QAAZ,EAAZ;;AACA,YAAII,cAAc,GAAGD,KAAK,CAACF,OAA3B;;AACA,YAAI;AACH,cAAII,eAAe,GAAGD,cAAc,KAAKL,WAAnB,IAAkCK,cAAc,KAAKL,WAAW,GAAG,CAAjC,IAAsC,CAAC,CAAC,GAAGjB,gBAAgB,CAACwB,QAArB,EAA+BH,KAAK,CAACI,eAArC,EAAsDT,UAAtD,CAA/F;;AAEA,cAAI,CAACO,eAAL,EAAsB;AACrBZ,YAAAA,QAAQ;AACR;AACD,SAND,SAMU;AACTM,UAAAA,WAAW,GAAGK,cAAd;AACA;AACD,OAZD;;AAcA,aAAO,KAAKd,KAAL,CAAWkB,SAAX,CAAqBN,YAArB,CAAP;AACA;AA3B6B,GAAD,EA4B3B;AACFpC,IAAAA,GAAG,EAAE,yBADH;AAEFX,IAAAA,KAAK,EAAE,SAASsD,uBAAT,CAAiChB,QAAjC,EAA2C;AACjD,UAAIiB,MAAM,GAAG,IAAb;;AAEA,OAAC,GAAGrC,WAAW,CAACY,OAAhB,EAAyB,OAAOQ,QAAP,KAAoB,UAA7C,EAAyD,8BAAzD;AAEA,UAAIkB,aAAa,GAAG,KAAKrB,KAAL,CAAWU,QAAX,GAAsBY,UAA1C;;AACA,UAAIV,YAAY,GAAG,SAASA,YAAT,GAAwB;AAC1C,YAAIW,SAAS,GAAGH,MAAM,CAACpB,KAAP,CAAaU,QAAb,GAAwBY,UAAxC;;AACA,YAAIC,SAAS,KAAKF,aAAlB,EAAiC;AAChC;AACA;;AAEDA,QAAAA,aAAa,GAAGE,SAAhB;AACApB,QAAAA,QAAQ;AACR,OARD;;AAUA,aAAO,KAAKH,KAAL,CAAWkB,SAAX,CAAqBN,YAArB,CAAP;AACA;AAnBC,GA5B2B,EAgD3B;AACFpC,IAAAA,GAAG,EAAE,eADH;AAEFX,IAAAA,KAAK,EAAE,SAAS2D,aAAT,CAAuBC,QAAvB,EAAiC;AACvC,UAAIC,MAAM,GAAG,KAAKzB,QAAL,CAAc0B,SAAd,CAAwBF,QAAxB,CAAb;AACA,OAAC,GAAG1C,WAAW,CAACY,OAAhB,EAAyB+B,MAAzB,EAAiC,kCAAjC;;AAEA,UAAI,KAAKE,UAAL,EAAJ,EAAuB;AACtB,eAAO,KAAP;AACA;;AAED,aAAOF,MAAM,CAACG,OAAP,CAAe,IAAf,EAAqBJ,QAArB,CAAP;AACA;AAXC,GAhD2B,EA4D3B;AACFjD,IAAAA,GAAG,EAAE,iBADH;AAEFX,IAAAA,KAAK,EAAE,SAASiE,eAAT,CAAyBC,QAAzB,EAAmC;AACzC,UAAI/D,MAAM,GAAG,KAAKiC,QAAL,CAAc+B,SAAd,CAAwBD,QAAxB,CAAb;AACA,OAAC,GAAGhD,WAAW,CAACY,OAAhB,EAAyB3B,MAAzB,EAAiC,kCAAjC;;AAEA,UAAI,CAAC,KAAK4D,UAAL,EAAD,IAAsB,KAAKK,OAAL,EAA1B,EAA0C;AACzC,eAAO,KAAP;AACA;;AAED,UAAIC,UAAU,GAAG,KAAKjC,QAAL,CAAckC,aAAd,CAA4BJ,QAA5B,CAAjB;AACA,UAAIK,eAAe,GAAG,KAAKC,WAAL,EAAtB;AACA,aAAO,CAAC,GAAGjD,aAAa,CAACO,OAAlB,EAA2BuC,UAA3B,EAAuCE,eAAvC,KAA2DpE,MAAM,CAACsE,OAAP,CAAe,IAAf,EAAqBP,QAArB,CAAlE;AACA;AAbC,GA5D2B,EA0E3B;AACFvD,IAAAA,GAAG,EAAE,YADH;AAEFX,IAAAA,KAAK,EAAE,SAAS+D,UAAT,GAAsB;AAC5B,aAAOW,OAAO,CAAC,KAAKF,WAAL,EAAD,CAAd;AACA;AAJC,GA1E2B,EA+E3B;AACF7D,IAAAA,GAAG,EAAE,kBADH;AAEFX,IAAAA,KAAK,EAAE,SAAS2E,gBAAT,CAA0Bf,QAA1B,EAAoC;AAC1C,UAAIC,MAAM,GAAG,KAAKzB,QAAL,CAAc0B,SAAd,CAAwBF,QAAxB,EAAkC,IAAlC,CAAb;AACA,OAAC,GAAG1C,WAAW,CAACY,OAAhB,EAAyB+B,MAAzB,EAAiC,kCAAjC;;AAEA,UAAI,CAAC,KAAKE,UAAL,EAAD,IAAsB,CAAC,KAAKa,cAAL,EAA3B,EAAkD;AACjD,eAAO,KAAP;AACA;;AAED,UAAIC,UAAU,GAAG,KAAKzC,QAAL,CAAc0C,aAAd,CAA4BlB,QAA5B,CAAjB;AACA,UAAIW,eAAe,GAAG,KAAKC,WAAL,EAAtB;;AACA,UAAIK,UAAU,KAAKN,eAAnB,EAAoC;AACnC,eAAO,KAAP;AACA;;AAED,aAAOV,MAAM,CAACE,UAAP,CAAkB,IAAlB,EAAwBH,QAAxB,CAAP;AACA;AAjBC,GA/E2B,EAiG3B;AACFjD,IAAAA,GAAG,EAAE,cADH;AAEFX,IAAAA,KAAK,EAAE,SAAS+E,YAAT,CAAsBb,QAAtB,EAAgC;AACtC,UAAI1B,OAAO,GAAGC,SAAS,CAACnC,MAAV,GAAmB,CAAnB,IAAwBmC,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE;AAAEuC,QAAAA,OAAO,EAAE;AAAX,OAAlF;AACA,UAAIA,OAAO,GAAGxC,OAAO,CAACwC,OAAtB;;AAEA,UAAI,CAAC,KAAKjB,UAAL,EAAL,EAAwB;AACvB,eAAO,KAAP;AACA;;AAED,UAAIM,UAAU,GAAG,KAAKjC,QAAL,CAAckC,aAAd,CAA4BJ,QAA5B,CAAjB;AACA,UAAIK,eAAe,GAAG,KAAKC,WAAL,EAAtB;;AACA,UAAI,CAAC,CAAC,GAAGjD,aAAa,CAACO,OAAlB,EAA2BuC,UAA3B,EAAuCE,eAAvC,CAAL,EAA8D;AAC7D,eAAO,KAAP;AACA;;AAED,UAAIU,SAAS,GAAG,KAAKC,YAAL,EAAhB;;AACA,UAAI,CAACD,SAAS,CAAC3E,MAAf,EAAuB;AACtB,eAAO,KAAP;AACA;;AAED,UAAI6E,KAAK,GAAGF,SAAS,CAACG,OAAV,CAAkBlB,QAAlB,CAAZ;;AACA,UAAIc,OAAJ,EAAa;AACZ,eAAOG,KAAK,KAAKF,SAAS,CAAC3E,MAAV,GAAmB,CAApC;AACA,OAFD,MAEO;AACN,eAAO6E,KAAK,GAAG,CAAC,CAAhB;AACA;AACD;AA3BC,GAjG2B,EA6H3B;AACFxE,IAAAA,GAAG,EAAE,aADH;AAEFX,IAAAA,KAAK,EAAE,SAASwE,WAAT,GAAuB;AAC7B,aAAO,KAAKrC,KAAL,CAAWU,QAAX,GAAsBwC,aAAtB,CAAoCC,QAA3C;AACA;AAJC,GA7H2B,EAkI3B;AACF3E,IAAAA,GAAG,EAAE,SADH;AAEFX,IAAAA,KAAK,EAAE,SAASuF,OAAT,GAAmB;AACzB,aAAO,KAAKpD,KAAL,CAAWU,QAAX,GAAsBwC,aAAtB,CAAoCG,IAA3C;AACA;AAJC,GAlI2B,EAuI3B;AACF7E,IAAAA,GAAG,EAAE,aADH;AAEFX,IAAAA,KAAK,EAAE,SAASyF,WAAT,GAAuB;AAC7B,aAAO,KAAKtD,KAAL,CAAWU,QAAX,GAAsBwC,aAAtB,CAAoCzB,QAA3C;AACA;AAJC,GAvI2B,EA4I3B;AACFjD,IAAAA,GAAG,EAAE,cADH;AAEFX,IAAAA,KAAK,EAAE,SAASkF,YAAT,GAAwB;AAC9B,aAAO,KAAK/C,KAAL,CAAWU,QAAX,GAAsBwC,aAAtB,CAAoCJ,SAA3C;AACA;AAJC,GA5I2B,EAiJ3B;AACFtE,IAAAA,GAAG,EAAE,eADH;AAEFX,IAAAA,KAAK,EAAE,SAAS0F,aAAT,GAAyB;AAC/B,aAAO,KAAKvD,KAAL,CAAWU,QAAX,GAAsBwC,aAAtB,CAAoCM,UAA3C;AACA;AAJC,GAjJ2B,EAsJ3B;AACFhF,IAAAA,GAAG,EAAE,SADH;AAEFX,IAAAA,KAAK,EAAE,SAASoE,OAAT,GAAmB;AACzB,aAAO,KAAKjC,KAAL,CAAWU,QAAX,GAAsBwC,aAAtB,CAAoCjB,OAA3C;AACA;AAJC,GAtJ2B,EA2J3B;AACFzD,IAAAA,GAAG,EAAE,gBADH;AAEFX,IAAAA,KAAK,EAAE,SAAS4E,cAAT,GAA0B;AAChC,aAAO,KAAKzC,KAAL,CAAWU,QAAX,GAAsBwC,aAAtB,CAAoCT,cAA3C;AACA;AAJC,GA3J2B,EAgK3B;AACFjE,IAAAA,GAAG,EAAE,wBADH;AAEFX,IAAAA,KAAK,EAAE,SAAS4F,sBAAT,GAAkC;AACxC,aAAO,KAAKzD,KAAL,CAAWU,QAAX,GAAsBY,UAAtB,CAAiCoC,mBAAxC;AACA;AAJC,GAhK2B,EAqK3B;AACFlF,IAAAA,GAAG,EAAE,8BADH;AAEFX,IAAAA,KAAK,EAAE,SAAS8F,4BAAT,GAAwC;AAC9C,aAAO,KAAK3D,KAAL,CAAWU,QAAX,GAAsBY,UAAtB,CAAiCsC,yBAAxC;AACA;AAJC,GArK2B,EA0K3B;AACFpF,IAAAA,GAAG,EAAE,iBADH;AAEFX,IAAAA,KAAK,EAAE,SAASgG,eAAT,GAA2B;AACjC,aAAO,KAAK7D,KAAL,CAAWU,QAAX,GAAsBY,UAAtB,CAAiCwC,YAAxC;AACA;AAJC,GA1K2B,EA+K3B;AACFtF,IAAAA,GAAG,EAAE,uBADH;AAEFX,IAAAA,KAAK,EAAE,SAASkG,qBAAT,GAAiC;AACvC,aAAO,CAAC,GAAGxE,WAAW,CAACwE,qBAAhB,EAAuC,KAAK/D,KAAL,CAAWU,QAAX,GAAsBY,UAA7D,CAAP;AACA;AAJC,GA/K2B,EAoL3B;AACF9C,IAAAA,GAAG,EAAE,gCADH;AAEFX,IAAAA,KAAK,EAAE,SAASmG,8BAAT,GAA0C;AAChD,aAAO,CAAC,GAAGzE,WAAW,CAACyE,8BAAhB,EAAgD,KAAKhE,KAAL,CAAWU,QAAX,GAAsBY,UAAtE,CAAP;AACA;AAJC,GApL2B,CAAlB,CAAZ;;AA2LA,SAAOvB,eAAP;AACA,CApMqB,EAAtB;;AAsMAnC,OAAO,CAAC+B,OAAR,GAAkBI,eAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _isArray = require('lodash/isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _matchesType = require('./utils/matchesType');\n\nvar _matchesType2 = _interopRequireDefault(_matchesType);\n\nvar _HandlerRegistry = require('./HandlerRegistry');\n\nvar _HandlerRegistry2 = _interopRequireDefault(_HandlerRegistry);\n\nvar _dragOffset = require('./reducers/dragOffset');\n\nvar _dirtyHandlerIds = require('./reducers/dirtyHandlerIds');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DragDropMonitor = function () {\n\tfunction DragDropMonitor(store) {\n\t\t_classCallCheck(this, DragDropMonitor);\n\n\t\tthis.store = store;\n\t\tthis.registry = new _HandlerRegistry2.default(store);\n\t}\n\n\t_createClass(DragDropMonitor, [{\n\t\tkey: 'subscribeToStateChange',\n\t\tvalue: function subscribeToStateChange(listener) {\n\t\t\tvar _this = this;\n\n\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\t\tvar handlerIds = options.handlerIds;\n\n\t\t\t(0, _invariant2.default)(typeof listener === 'function', 'listener must be a function.');\n\t\t\t(0, _invariant2.default)(typeof handlerIds === 'undefined' || (0, _isArray2.default)(handlerIds), 'handlerIds, when specified, must be an array of strings.');\n\n\t\t\tvar prevStateId = this.store.getState().stateId;\n\t\t\tvar handleChange = function handleChange() {\n\t\t\t\tvar state = _this.store.getState();\n\t\t\t\tvar currentStateId = state.stateId;\n\t\t\t\ttry {\n\t\t\t\t\tvar canSkipListener = currentStateId === prevStateId || currentStateId === prevStateId + 1 && !(0, _dirtyHandlerIds.areDirty)(state.dirtyHandlerIds, handlerIds);\n\n\t\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\t\tlistener();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tprevStateId = currentStateId;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn this.store.subscribe(handleChange);\n\t\t}\n\t}, {\n\t\tkey: 'subscribeToOffsetChange',\n\t\tvalue: function subscribeToOffsetChange(listener) {\n\t\t\tvar _this2 = this;\n\n\t\t\t(0, _invariant2.default)(typeof listener === 'function', 'listener must be a function.');\n\n\t\t\tvar previousState = this.store.getState().dragOffset;\n\t\t\tvar handleChange = function handleChange() {\n\t\t\t\tvar nextState = _this2.store.getState().dragOffset;\n\t\t\t\tif (nextState === previousState) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tpreviousState = nextState;\n\t\t\t\tlistener();\n\t\t\t};\n\n\t\t\treturn this.store.subscribe(handleChange);\n\t\t}\n\t}, {\n\t\tkey: 'canDragSource',\n\t\tvalue: function canDragSource(sourceId) {\n\t\t\tvar source = this.registry.getSource(sourceId);\n\t\t\t(0, _invariant2.default)(source, 'Expected to find a valid source.');\n\n\t\t\tif (this.isDragging()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn source.canDrag(this, sourceId);\n\t\t}\n\t}, {\n\t\tkey: 'canDropOnTarget',\n\t\tvalue: function canDropOnTarget(targetId) {\n\t\t\tvar target = this.registry.getTarget(targetId);\n\t\t\t(0, _invariant2.default)(target, 'Expected to find a valid target.');\n\n\t\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar targetType = this.registry.getTargetType(targetId);\n\t\t\tvar draggedItemType = this.getItemType();\n\t\t\treturn (0, _matchesType2.default)(targetType, draggedItemType) && target.canDrop(this, targetId);\n\t\t}\n\t}, {\n\t\tkey: 'isDragging',\n\t\tvalue: function isDragging() {\n\t\t\treturn Boolean(this.getItemType());\n\t\t}\n\t}, {\n\t\tkey: 'isDraggingSource',\n\t\tvalue: function isDraggingSource(sourceId) {\n\t\t\tvar source = this.registry.getSource(sourceId, true);\n\t\t\t(0, _invariant2.default)(source, 'Expected to find a valid source.');\n\n\t\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar sourceType = this.registry.getSourceType(sourceId);\n\t\t\tvar draggedItemType = this.getItemType();\n\t\t\tif (sourceType !== draggedItemType) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn source.isDragging(this, sourceId);\n\t\t}\n\t}, {\n\t\tkey: 'isOverTarget',\n\t\tvalue: function isOverTarget(targetId) {\n\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { shallow: false };\n\t\t\tvar shallow = options.shallow;\n\n\t\t\tif (!this.isDragging()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar targetType = this.registry.getTargetType(targetId);\n\t\t\tvar draggedItemType = this.getItemType();\n\t\t\tif (!(0, _matchesType2.default)(targetType, draggedItemType)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar targetIds = this.getTargetIds();\n\t\t\tif (!targetIds.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar index = targetIds.indexOf(targetId);\n\t\t\tif (shallow) {\n\t\t\t\treturn index === targetIds.length - 1;\n\t\t\t} else {\n\t\t\t\treturn index > -1;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getItemType',\n\t\tvalue: function getItemType() {\n\t\t\treturn this.store.getState().dragOperation.itemType;\n\t\t}\n\t}, {\n\t\tkey: 'getItem',\n\t\tvalue: function getItem() {\n\t\t\treturn this.store.getState().dragOperation.item;\n\t\t}\n\t}, {\n\t\tkey: 'getSourceId',\n\t\tvalue: function getSourceId() {\n\t\t\treturn this.store.getState().dragOperation.sourceId;\n\t\t}\n\t}, {\n\t\tkey: 'getTargetIds',\n\t\tvalue: function getTargetIds() {\n\t\t\treturn this.store.getState().dragOperation.targetIds;\n\t\t}\n\t}, {\n\t\tkey: 'getDropResult',\n\t\tvalue: function getDropResult() {\n\t\t\treturn this.store.getState().dragOperation.dropResult;\n\t\t}\n\t}, {\n\t\tkey: 'didDrop',\n\t\tvalue: function didDrop() {\n\t\t\treturn this.store.getState().dragOperation.didDrop;\n\t\t}\n\t}, {\n\t\tkey: 'isSourcePublic',\n\t\tvalue: function isSourcePublic() {\n\t\t\treturn this.store.getState().dragOperation.isSourcePublic;\n\t\t}\n\t}, {\n\t\tkey: 'getInitialClientOffset',\n\t\tvalue: function getInitialClientOffset() {\n\t\t\treturn this.store.getState().dragOffset.initialClientOffset;\n\t\t}\n\t}, {\n\t\tkey: 'getInitialSourceClientOffset',\n\t\tvalue: function getInitialSourceClientOffset() {\n\t\t\treturn this.store.getState().dragOffset.initialSourceClientOffset;\n\t\t}\n\t}, {\n\t\tkey: 'getClientOffset',\n\t\tvalue: function getClientOffset() {\n\t\t\treturn this.store.getState().dragOffset.clientOffset;\n\t\t}\n\t}, {\n\t\tkey: 'getSourceClientOffset',\n\t\tvalue: function getSourceClientOffset() {\n\t\t\treturn (0, _dragOffset.getSourceClientOffset)(this.store.getState().dragOffset);\n\t\t}\n\t}, {\n\t\tkey: 'getDifferenceFromInitialOffset',\n\t\tvalue: function getDifferenceFromInitialOffset() {\n\t\t\treturn (0, _dragOffset.getDifferenceFromInitialOffset)(this.store.getState().dragOffset);\n\t\t}\n\t}]);\n\n\treturn DragDropMonitor;\n}();\n\nexports.default = DragDropMonitor;"]},"metadata":{},"sourceType":"script"}