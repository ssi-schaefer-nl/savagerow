{"version":3,"file":"DropDownFormatter.js","sourceRoot":"","sources":["../../src/formatters/DropDownFormatter.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAa1B;;;EAGE;AACF,MAAM,CAAC,OAAO,UAAU,iBAAiB,CAAC,EAAyB;QAAvB,gBAAK,EAAE,oBAAO;IACxD,IAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,EAAvD,CAAuD,CAAC,IAAI,KAAK,CAAC;IAEnG,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAC9B,OAAO,6BAAK,KAAK,EAAE,MAAM,IAAG,MAAM,CAAO,CAAC;KAC3C;IAED,IAAM,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC;IACpD,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC;IAElD,OAAO,6BAAK,KAAK,EAAE,KAAK,IAAG,IAAI,CAAO,CAAC;AACzC,CAAC","sourcesContent":["import React from 'react';\n\ninterface Option {\n  title?: string;\n  value?: string;\n  text?: string;\n}\n\ninterface Props {\n  options: Array<string | Option>;\n  value: string;\n}\n\n/**\n * Used for displaying the value of a dropdown (using DropDownEditor) when not editing it.\n * Accepts the same parameters as the DropDownEditor.\n*/\nexport default function DropDownFormatter({ value, options }: Props) {\n  const option = options.find(v => typeof v === 'string' ? v === value : v.value === value) || value;\n\n  if (typeof option === 'string') {\n    return <div title={option}>{option}</div>;\n  }\n\n  const title = option.title || option.value || value;\n  const text = option.text || option.value || value;\n\n  return <div title={title}>{text}</div>;\n}\n"]}