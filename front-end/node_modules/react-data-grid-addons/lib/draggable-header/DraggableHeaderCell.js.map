{"version":3,"file":"DraggableHeaderCell.js","sourceRoot":"","sources":["../../src/draggable-header/DraggableHeaderCell.js"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,SAAS,MAAM,YAAY,CAAC;AACnC,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,WAAW,CAAC;AAEnD;IAAkC,uCAAe;IAAjD;;IAgCA,CAAC;IAtBC,oCAAM,GAAN;QACQ,IAAA,eAMQ,EALZ,wCAAiB,EACjB,wCAAiB,EACjB,0BAAU,EACV,kBAAM,EACN,oBACY,CAAC;QAEf,iDAAiD;QACjD,yDAAyD;QACzD,OAAO,iBAAiB,CACtB,iBAAiB,CACf,6BACE,SAAS,EAAE,UAAU,CAAC,2BAA2B,EAAE,EAAE,cAAc,EAAE,MAAM,IAAI,OAAO,EAAE,CAAC,EACzF,KAAK,EAAE,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAEvC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAChB,CACP,CACF,CAAC;IACJ,CAAC;IA9BM,6BAAS,GAAG;QACjB,iBAAiB,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;QAC5C,iBAAiB,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;QAC5C,UAAU,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;QACrC,MAAM,EAAE,SAAS,CAAC,IAAI;QACtB,OAAO,EAAE,SAAS,CAAC,IAAI;QACvB,QAAQ,EAAE,SAAS,CAAC,OAAO,CAAC,UAAU;KACvC,CAAC;IAwBJ,0BAAC;CAAA,AAhCD,CAAkC,KAAK,CAAC,SAAS,GAgChD;AAED,cAAc;AACd,SAAS,OAAO,CAAC,OAAO,EAAE,OAAO;IAC/B,OAAO;QACL,iBAAiB,EAAE,OAAO,CAAC,UAAU,EAAE;QACvC,UAAU,EAAE,OAAO,CAAC,UAAU,EAAE;KACjC,CAAC;AACJ,CAAC;AAED,IAAM,gBAAgB,GAAG;IACvB,SAAS,YAAC,KAAK;QACb,OAAO;YACL,gBAAgB;YAChB,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG;SACtB,CAAC;IACJ,CAAC;IACD,OAAO,YAAC,KAAK,EAAE,OAAO;QACpB,2CAA2C;QAC3C,IAAI,OAAO,CAAC,OAAO,EAAE,EAAE;YACf,IAAA,4BAA4C,EAA1C,kBAAM,EAAE,oBAAkC,CAAC;YACnD,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,QAAM,CAAC,CAAC;SAC3C;IACH,CAAC;CACF,CAAC;AAEF,cAAc;AACd,IAAM,MAAM,GAAG;IACb,IAAI,YAAC,KAAK,EAAE,OAAO;QACjB,IAAM,MAAM,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC;QACrC,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;QACnC,OAAO;YACL,MAAM,QAAA;YACN,MAAM,EAAE,SAAS;SAClB,CAAC;IACJ,CAAC;CACF,CAAC;AAEF,SAAS,aAAa,CAAC,OAAO,EAAE,OAAO;IACrC,OAAO;QACL,iBAAiB,EAAE,OAAO,CAAC,UAAU,EAAE;QACvC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE;QACxB,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE;QAC1B,aAAa,EAAE,OAAO,CAAC,OAAO,EAAE;KACjC,CAAC;AACJ,CAAC;AAED,eAAe,UAAU,CAAC,QAAQ,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAC5D,UAAU,CAAC,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAC,CACzC,mBAAmB,CACpB,CACF,CAAC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { DragSource, DropTarget } from 'react-dnd';\n\nclass DraggableHeaderCell extends React.Component {\n  static propTypes = {\n    connectDragSource: PropTypes.func.isRequired,\n    connectDropTarget: PropTypes.func.isRequired,\n    isDragging: PropTypes.bool.isRequired,\n    isOver: PropTypes.bool,\n    canDrop: PropTypes.bool,\n    children: PropTypes.element.isRequired\n  };\n\n  render() {\n    const {\n      connectDragSource,\n      connectDropTarget,\n      isDragging,\n      isOver,\n      canDrop\n    } = this.props;\n\n    // set drag source and drop target on header cell\n    // width: 0 - otherwise drag clone was wrongly positioned\n    return connectDragSource(\n      connectDropTarget(\n        <div\n          className={classNames('rdg-draggable-header-cell', { 'rdg-can-drop': isOver && canDrop })}\n          style={{ opacity: isDragging ? 0.2 : 1 }}\n        >\n          {this.props.children}\n        </div>\n      )\n    );\n  }\n}\n\n// drop source\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nconst headerCellSource = {\n  beginDrag(props) {\n    return {\n      // source column\n      key: props.column.key\n    };\n  },\n  endDrag(props, monitor) {\n    // check if drop was made in droppable zone\n    if (monitor.didDrop()) {\n      const { source, target } = monitor.getDropResult();\n      return props.onHeaderDrop(source, target);\n    }\n  }\n};\n\n// drop target\nconst target = {\n  drop(props, monitor) {\n    const source = monitor.getItem().key;\n    const targetKey = props.column.key;\n    return {\n      source,\n      target: targetKey\n    };\n  }\n};\n\nfunction targetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    canDrop: monitor.canDrop(),\n    draggedHeader: monitor.getItem()\n  };\n}\n\nexport default DragSource('Column', headerCellSource, collect)(\n  DropTarget('Column', target, targetCollect)(\n    DraggableHeaderCell\n  )\n);\n"]}