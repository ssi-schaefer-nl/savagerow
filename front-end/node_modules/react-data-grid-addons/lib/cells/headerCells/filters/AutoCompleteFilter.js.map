{"version":3,"file":"AutoCompleteFilter.js","sourceRoot":"","sources":["../../../../src/cells/headerCells/filters/AutoCompleteFilter.js"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\n\nimport { isEmptyArray } from '../../../utils';\n\nexport default class AutoCompleteFilter extends React.Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    // column: PropTypes.shape(shapes.Column),\n    getValidFilterValues: PropTypes.func,\n    multiSelection: PropTypes.bool\n  };\n\n  constructor(props) {\n    super(props);\n    this.getOptions = this.getOptions.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.filterValues = this.filterValues.bind(this);\n    this.state = { options: this.getOptions(), rawValue: '', placeholder: 'Search' };\n  }\n\n  // FIXME\n  // eslint-disable-next-line react/no-deprecated\n  componentWillReceiveProps(newProps) {\n    this.setState({ options: this.getOptions(newProps) });\n  }\n\n  getOptions(newProps) {\n    const props = newProps || this.props;\n    let options = props.getValidFilterValues(props.column.key);\n    options = options.map(o => {\n      if (typeof o === 'string') {\n        return { value: o, label: o };\n      }\n      return o;\n    });\n    return options;\n  }\n\n  columnValueContainsSearchTerms(columnValue, filterTermValue) {\n    if (columnValue !== undefined && filterTermValue !== undefined) {\n      const strColumnValue = columnValue.toString();\n      const strFilterTermValue = filterTermValue.toString();\n      const checkValueIndex = strColumnValue.trim().toLowerCase().indexOf(strFilterTermValue.trim().toLowerCase());\n      return checkValueIndex !== -1 && (checkValueIndex !== 0 || strColumnValue === strFilterTermValue);\n    }\n    return false;\n  }\n\n  filterValues(row, columnFilter, columnKey) {\n    let include = true;\n    if (columnFilter === null) {\n      include = false;\n    } else if (columnFilter.filterTerm && !isEmptyArray(columnFilter.filterTerm)) {\n      if (columnFilter.filterTerm.length) {\n        include = columnFilter.filterTerm.some(filterTerm => {\n          return this.columnValueContainsSearchTerms(row[columnKey], filterTerm.value) === true;\n        });\n      } else {\n        include = this.columnValueContainsSearchTerms(row[columnKey], columnFilter.filterTerm.value);\n      }\n    }\n    return include;\n  }\n\n  handleChange(value) {\n    const filters = value;\n    this.setState({ filters });\n    this.props.onChange({ filterTerm: filters, column: this.props.column, rawValue: value, filterValues: this.filterValues });\n  }\n\n  render() {\n    return (\n      <Select\n        autosize={false}\n        name={`filter-${this.props.column.key}`}\n        options={this.state.options}\n        placeholder={this.state.placeholder}\n        onChange={this.handleChange}\n        escapeClearsValue\n        multi={this.props.multiSelection !== undefined && this.props.multiSelection !== null ? this.props.multiSelection : true}\n        value={this.state.filters}\n      />\n    );\n  }\n}\n"]}