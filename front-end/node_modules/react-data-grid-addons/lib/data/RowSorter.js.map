{"version":3,"file":"RowSorter.js","sourceRoot":"","sources":["../../src/data/RowSorter.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,IAAM,QAAQ,GAAG,UAAC,CAAC,EAAE,CAAC;IAC3B,IAAI,CAAC,GAAG,CAAC,EAAE;QACT,OAAO,CAAC,CAAC;KACV;IACD,IAAI,CAAC,GAAG,CAAC,EAAE;QACT,OAAO,CAAC,CAAC,CAAC;KACX;IACD,OAAO,CAAC,CAAC;AACX,CAAC,CAAC;AAEF,IAAM,QAAQ,GAAG,UAAC,IAAI,EAAE,UAAU,EAAE,aAAa;IAC/C,IAAM,iBAAiB,GAAG,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D,IAAM,WAAW,GAAG,UAAC,CAAC,EAAE,CAAC;QACvB,OAAO,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACpE,CAAC,CAAC;IACF,IAAI,aAAa,KAAK,MAAM,EAAE;QAC5B,OAAO,IAAI,CAAC;KACb;IACD,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACxC,CAAC,CAAC;AAEF,eAAe,QAAQ,CAAC","sourcesContent":["export const comparer = (a, b) => {\n  if (a > b) {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  return 0;\n};\n\nconst sortRows = (rows, sortColumn, sortDirection) => {\n  const sortDirectionSign = sortDirection === 'ASC' ? 1 : -1;\n  const rowComparer = (a, b) => {\n    return sortDirectionSign * comparer(a[sortColumn], b[sortColumn]);\n  };\n  if (sortDirection === 'NONE') {\n    return rows;\n  }\n  return rows.slice().sort(rowComparer);\n};\n\nexport default sortRows;\n"]}