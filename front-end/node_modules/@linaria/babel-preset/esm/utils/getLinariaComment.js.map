{"version":3,"sources":["../../src/utils/getLinariaComment.ts"],"names":["pattern","getLinariaComment","path","remove","comments","node","leadingComments","idx","findIndex","comment","test","value","matched","match","filter","_","i","split","map"],"mappings":"AAEA,MAAMA,OAAO,GAAG,gBAAhB;AAEA,eAAe,SAASC,iBAAT,CACbC,IADa,EAEbC,MAAe,GAAG,IAFL,EAGb;AACA,QAAMC,QAAQ,GAAGF,IAAI,CAACG,IAAL,CAAUC,eAA3B;;AACA,MAAI,CAACF,QAAL,EAAe;AACb,WAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAP;AACD;;AAED,QAAMG,GAAG,GAAGH,QAAQ,CAACI,SAAT,CAAoBC,OAAD,IAAaT,OAAO,CAACU,IAAR,CAAaD,OAAO,CAACE,KAArB,CAAhC,CAAZ;;AACA,MAAIJ,GAAG,KAAK,CAAC,CAAb,EAAgB;AACd,WAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAP;AACD;;AAED,QAAMK,OAAO,GAAGR,QAAQ,CAACG,GAAD,CAAR,CAAcI,KAAd,CAAoBE,KAApB,CAA0Bb,OAA1B,CAAhB;;AACA,MAAI,CAACY,OAAL,EAAc;AACZ,WAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAP;AACD;;AAED,MAAIT,MAAJ,EAAY;AACVD,IAAAA,IAAI,CAACG,IAAL,CAAUC,eAAV,GAA4BF,QAAQ,CAACU,MAAT,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,KAAKT,GAAhC,CAA5B;AACD;;AAED,SAAOK,OAAO,CAAC,CAAD,CAAP,CAAWK,KAAX,CAAiB,GAAjB,EAAsBC,GAAtB,CAA2BF,CAAD,IAAQA,CAAC,GAAGA,CAAH,GAAO,IAA1C,CAAP;AACD","sourcesContent":["import type { Node } from '@babel/types';\n\nconst pattern = /^linaria (.+)$/;\n\nexport default function getLinariaComment(\n  path: { node: Node },\n  remove: boolean = true\n) {\n  const comments = path.node.leadingComments;\n  if (!comments) {\n    return [null, null, null];\n  }\n\n  const idx = comments.findIndex((comment) => pattern.test(comment.value));\n  if (idx === -1) {\n    return [null, null, null];\n  }\n\n  const matched = comments[idx].value.match(pattern);\n  if (!matched) {\n    return [null, null, null];\n  }\n\n  if (remove) {\n    path.node.leadingComments = comments.filter((_, i) => i !== idx);\n  }\n\n  return matched[1].split(' ').map((i) => (i ? i : null));\n}\n"],"file":"getLinariaComment.js"}