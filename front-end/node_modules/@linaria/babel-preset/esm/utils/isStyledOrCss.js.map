{"version":3,"sources":["../../src/utils/isStyledOrCss.ts"],"names":["hasImport","cache","WeakMap","isStyledOrCss","types","t","path","state","has","tag","node","localName","file","metadata","isCallExpression","isIdentifier","callee","arguments","length","name","scope","opts","filename","tagPath","get","set","component","isMemberExpression","object","property","stringLiteral"],"mappings":"AAQA,OAAOA,SAAP,MAAsB,aAAtB;AAIA,MAAMC,KAAK,GAAG,IAAIC,OAAJ,EAAd;AAEA,eAAe,SAASC,aAAT,CACb;AAAEC,EAAAA,KAAK,EAAEC;AAAT,CADa,EAEbC,IAFa,EAGbC,KAHa,EAIL;AACR,MAAI,CAACN,KAAK,CAACO,GAAN,CAAUF,IAAV,CAAL,EAAsB;AACpB,UAAM;AAAEG,MAAAA;AAAF,QAAUH,IAAI,CAACI,IAArB;AAEA,UAAMC,SAAS,GAAGJ,KAAK,CAACK,IAAN,CAAWC,QAAX,CAAoBF,SAApB,IAAiC,QAAnD;;AAEA,QACEN,CAAC,CAACS,gBAAF,CAAmBL,GAAnB,KACAJ,CAAC,CAACU,YAAF,CAAeN,GAAG,CAACO,MAAnB,CADA,IAEAP,GAAG,CAACQ,SAAJ,CAAcC,MAAd,KAAyB,CAFzB,IAGAT,GAAG,CAACO,MAAJ,CAAWG,IAAX,KAAoBR,SAHpB,IAIAX,SAAS,CAACK,CAAD,EAAIC,IAAI,CAACc,KAAT,EAAgBb,KAAK,CAACK,IAAN,CAAWS,IAAX,CAAgBC,QAAhC,EAA0CX,SAA1C,EAAqD,CAC5D,gBAD4D,EAE5D,eAF4D,CAArD,CALX,EASE;AACA,YAAMY,OAAO,GAAGjB,IAAI,CAACkB,GAAL,CAAS,KAAT,CAAhB;AACAvB,MAAAA,KAAK,CAACwB,GAAN,CAAUnB,IAAV,EAAgB;AACdoB,QAAAA,SAAS,EAAEH,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,CAAzB;AADG,OAAhB;AAGD,KAdD,MAcO,IACLnB,CAAC,CAACsB,kBAAF,CAAqBlB,GAArB,KACAJ,CAAC,CAACU,YAAF,CAAeN,GAAG,CAACmB,MAAnB,CADA,IAEAvB,CAAC,CAACU,YAAF,CAAeN,GAAG,CAACoB,QAAnB,CAFA,IAGApB,GAAG,CAACmB,MAAJ,CAAWT,IAAX,KAAoBR,SAHpB,IAIAX,SAAS,CAACK,CAAD,EAAIC,IAAI,CAACc,KAAT,EAAgBb,KAAK,CAACK,IAAN,CAAWS,IAAX,CAAgBC,QAAhC,EAA0CX,SAA1C,EAAqD,CAC5D,gBAD4D,EAE5D,eAF4D,CAArD,CALJ,EASL;AACAV,MAAAA,KAAK,CAACwB,GAAN,CAAUnB,IAAV,EAAgB;AACdoB,QAAAA,SAAS,EAAE;AAAEhB,UAAAA,IAAI,EAAEL,CAAC,CAACyB,aAAF,CAAgBrB,GAAG,CAACoB,QAAJ,CAAaV,IAA7B;AAAR;AADG,OAAhB;AAGD,KAbM,MAaA,IACLnB,SAAS,CAACK,CAAD,EAAIC,IAAI,CAACc,KAAT,EAAgBb,KAAK,CAACK,IAAN,CAAWS,IAAX,CAAgBC,QAAhC,EAA0C,KAA1C,EAAiD,CACxD,eADwD,EAExD,SAFwD,CAAjD,CAAT,IAIAjB,CAAC,CAACU,YAAF,CAAeN,GAAf,CAJA,IAKAA,GAAG,CAACU,IAAJ,KAAa,KANR,EAOL;AACAlB,MAAAA,KAAK,CAACwB,GAAN,CAAUnB,IAAV,EAAgB,KAAhB;AACD,KATM,MASA;AACLL,MAAAA,KAAK,CAACwB,GAAN,CAAUnB,IAAV,EAAgB,IAAhB;AACD;AACF;;AAED,SAAOL,KAAK,CAACuB,GAAN,CAAUlB,IAAV,KAAmB,IAA1B;AACD","sourcesContent":["import type {\n  CallExpression,\n  Expression,\n  TaggedTemplateExpression,\n} from '@babel/types';\nimport type { NodePath } from '@babel/traverse';\nimport type { State, TemplateExpression } from '../types';\nimport { Core } from '../babel';\nimport hasImport from './hasImport';\n\ntype Result = NonNullable<TemplateExpression['styled']> | 'css' | null;\n\nconst cache = new WeakMap<NodePath<TaggedTemplateExpression>, Result>();\n\nexport default function isStyledOrCss(\n  { types: t }: Core,\n  path: NodePath<TaggedTemplateExpression>,\n  state: State\n): Result {\n  if (!cache.has(path)) {\n    const { tag } = path.node;\n\n    const localName = state.file.metadata.localName || 'styled';\n\n    if (\n      t.isCallExpression(tag) &&\n      t.isIdentifier(tag.callee) &&\n      tag.arguments.length === 1 &&\n      tag.callee.name === localName &&\n      hasImport(t, path.scope, state.file.opts.filename, localName, [\n        '@linaria/react',\n        'linaria/react',\n      ])\n    ) {\n      const tagPath = path.get('tag') as NodePath<CallExpression>;\n      cache.set(path, {\n        component: tagPath.get('arguments')[0] as NodePath<Expression>,\n      });\n    } else if (\n      t.isMemberExpression(tag) &&\n      t.isIdentifier(tag.object) &&\n      t.isIdentifier(tag.property) &&\n      tag.object.name === localName &&\n      hasImport(t, path.scope, state.file.opts.filename, localName, [\n        '@linaria/react',\n        'linaria/react',\n      ])\n    ) {\n      cache.set(path, {\n        component: { node: t.stringLiteral(tag.property.name) },\n      });\n    } else if (\n      hasImport(t, path.scope, state.file.opts.filename, 'css', [\n        '@linaria/core',\n        'linaria',\n      ]) &&\n      t.isIdentifier(tag) &&\n      tag.name === 'css'\n    ) {\n      cache.set(path, 'css');\n    } else {\n      cache.set(path, null);\n    }\n  }\n\n  return cache.get(path) ?? null;\n}\n"],"file":"isStyledOrCss.js"}