{"version":3,"sources":["../../src/utils/loadOptions.ts"],"names":["cosmiconfig","explorer","loadOptions","overrides","configFile","ignore","rest","result","undefined","loadSync","searchSync","displayName","evaluate","rules","action","require","default","test","config"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,aAAxB;AAOA,MAAMC,QAAQ,GAAGD,WAAW,CAAC,SAAD,CAA5B;AAEA,eAAe,SAASE,WAAT,CACbC,SAAiC,GAAG,EADvB,EAEW;AACxB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGC;AAAzB,MAAkCH,SAAxC;AAEA,QAAMI,MAAM,GACVH,UAAU,KAAKI,SAAf,GACIP,QAAQ,CAACQ,QAAT,CAAkBL,UAAlB,CADJ,GAEIH,QAAQ,CAACS,UAAT,EAHN;AAKA,SAAO;AACLC,IAAAA,WAAW,EAAE,KADR;AAELC,IAAAA,QAAQ,EAAE,IAFL;AAGLC,IAAAA,KAAK,EAAE,CACL;AACE;AACA;AACAC,MAAAA,MAAM,EAAEC,OAAO,CAAC,iBAAD,CAAP,CAA2BC;AAHrC,KADK,EAML;AACE;AACAC,MAAAA,IAAI,EAAEZ,MAAM,IAAI,wBAFlB;AAGES,MAAAA,MAAM,EAAE;AAHV,KANK,CAHF;AAeL,QAAIP,MAAM,GAAGA,MAAM,CAACW,MAAV,GAAmB,IAA7B,CAfK;AAgBL,OAAGZ;AAhBE,GAAP;AAkBD","sourcesContent":["import cosmiconfig from 'cosmiconfig';\nimport type { StrictOptions } from '../types';\n\nexport type PluginOptions = StrictOptions & {\n  configFile?: string;\n};\n\nconst explorer = cosmiconfig('linaria');\n\nexport default function loadOptions(\n  overrides: Partial<PluginOptions> = {}\n): Partial<StrictOptions> {\n  const { configFile, ignore, ...rest } = overrides;\n\n  const result =\n    configFile !== undefined\n      ? explorer.loadSync(configFile)\n      : explorer.searchSync();\n\n  return {\n    displayName: false,\n    evaluate: true,\n    rules: [\n      {\n        // FIXME: if `rule` is not specified in a config, `@linaria/shaker` should be added as a dependency\n        // eslint-disable-next-line import/no-extraneous-dependencies\n        action: require('@linaria/shaker').default,\n      },\n      {\n        // The old `ignore` option is used as a default value for `ignore` rule.\n        test: ignore ?? /[\\\\/]node_modules[\\\\/]/,\n        action: 'ignore',\n      },\n    ],\n    ...(result ? result.config : null),\n    ...rest,\n  };\n}\n"],"file":"loadOptions.js"}