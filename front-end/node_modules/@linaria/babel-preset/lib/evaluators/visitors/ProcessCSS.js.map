{"version":3,"sources":["../../../src/evaluators/visitors/ProcessCSS.ts"],"names":["ProcessCSS","path","t","isIdentifier","node","tag","name","className","replaceWith","stringLiteral"],"mappings":";;;;;;;AAKA;;AAGA;;;;AARA;AACA;AACA;AACA;AAOe,SAASA,UAAT,CAAoBC,IAApB,EAA8D;AAC3E,MAAIC,YAAEC,YAAF,CAAeF,IAAI,CAACG,IAAL,CAAUC,GAAzB,KAAiCJ,IAAI,CAACG,IAAL,CAAUC,GAAV,CAAcC,IAAd,KAAuB,KAA5D,EAAmE;AACjE,UAAM,IAAKC,SAAL,IAAkB,gCAAkBN,IAAlB,CAAxB;;AACA,QAAI,CAACM,SAAL,EAAgB;AACd;AACD;;AAEDN,IAAAA,IAAI,CAACO,WAAL,CAAiBN,YAAEO,aAAF,CAAgBF,SAAhB,CAAjB;AACD;AACF","sourcesContent":["/**\n * This visitor replaces css tag with the generated className\n *\n */\n\nimport { types as t } from '@babel/core';\nimport type { NodePath } from '@babel/traverse';\nimport type { TaggedTemplateExpression } from '@babel/types';\nimport getLinariaComment from '../../utils/getLinariaComment';\n\nexport default function ProcessCSS(path: NodePath<TaggedTemplateExpression>) {\n  if (t.isIdentifier(path.node.tag) && path.node.tag.name === 'css') {\n    const [, , className] = getLinariaComment(path);\n    if (!className) {\n      return;\n    }\n\n    path.replaceWith(t.stringLiteral(className));\n  }\n}\n"],"file":"ProcessCSS.js"}