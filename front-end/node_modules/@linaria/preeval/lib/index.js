"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = preset;

var _babelPreset = require("@linaria/babel-preset");

/**
 * This file is a babel preset used to transform files inside evaluators.
 * It works the same as main `babel/extract` preset, but do not evaluate lazy dependencies.
 */
function index(babel, options) {
  return {
    visitor: {
      Program: {
        enter(path, state) {
          // Collect all the style rules from the styles we encounter
          state.queue = [];
          state.rules = {};
          state.index = -1;
          state.dependencies = [];
          state.replacements = []; // We need our transforms to run before anything else
          // So we traverse here instead of a in a visitor

          path.traverse({
            ImportDeclaration: p => (0, _babelPreset.DetectStyledImportName)(babel, p, state),
            TaggedTemplateExpression: p => (0, _babelPreset.GenerateClassNames)(babel, p, state, options),
            JSXElement: _babelPreset.JSXElement
          });
        }

      },
      CallExpression: _babelPreset.ProcessStyled,
      TaggedTemplateExpression: _babelPreset.ProcessCSS // TaggedTemplateExpression is processed before CallExpression

    }
  };
}

function preset(context, options) {
  return {
    plugins: [[index, options]]
  };
}
//# sourceMappingURL=index.js.map