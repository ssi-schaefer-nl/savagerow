{"version":3,"sources":["Views/Home.js","Components/Table/DataGrid/DataGridTable.js","Components/CollapsableAlert/CollapsableAlert.js","Components/NotificationArea/NotificationArea.js","Components/MultiSelect/MultiSelect.js","Components/DefineColumnDialog/DefineColumnDialog.js","Service/HttpHelper.js","Service/DefinitionService/DefinitionService.js","Components/Table/AddColumn/AddColumn.js","Service/QueryService/QueryService.js","Service/ManipulationService/ManipulationService.js","Components/Table/Table.js","Service/ConfigureService.js","Components/DatabaseSelect/DatabaseSelect.js","Views/Tables.js","Views/Contact.js","Views/ConfigureSavageRow.js","Layout/RoutedComponent.js","Layout/AppLayout.js","Main.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","CenteredGrid","classes","className","Grid","container","item","xs","Paper","Home","style","margin","Component","LightTooltip","withStyles","tooltip","backgroundColor","common","white","boxShadow","shadows","fontSize","Tooltip","TableContextMenu","props","title","id","items","background","borderRadius","disabled","divider","map","ContextMenuItem","onClick","icon","dividerAfter","MenuIcon","direction","alignItems","position","top","HideColumnsPopup","open","values","onApply","onCancel","initialSelection","selection","useState","setSelection","Dialog","aria-labelledby","onClose","e","onSubmit","preventDefault","DialogTitle","DialogContent","v","FormControlLabel","label","control","Checkbox","checked","includes","onChange","target","s","i","indexOf","slice","name","DialogActions","Button","type","DataGridTable","selectedColumn","setSelectedColumn","selectedRow","setSelectedRow","openColumnFilter","setOpenColumnFilter","columnFilters","setColumnFilters","rows","onRowChange","highlightedRows","highlightRows","changingColumnName","HeaderRenderer","collect","column","key","holdToDisplay","InputBase","inputProps","autoComplete","value","defaultValue","onBlur","onColumnRename","required","fontWeight","columns","col","headerRenderer","resizable","nullable","editor","editable","TextEditor","undefined","oldName","newName","rowContextMenu","PublishIcon","rowIdx","onSave","DeleteIcon","onDelete","AddIcon","onInsert","RefreshIcon","onRefresh","columnContextMenu","Delete","onColumnDelete","TextFormatIcon","onColumnInsert","FilterListIcon","length","filter","f","onRowsChange","updatedRows","index","idx","indexes","rowGetter","enableCellSelect","rowRenderer","classname","rowTooltip","highlightedRow","find","hr","message","enterDelay","enterNextDelay","interactive","placement","arrow","height","overflowX","CollapsableAlert","Collapse","in","shouldShow","marginBottom","Alert","severity","action","IconButton","aria-label","size","NotificationArea","notifications","notificationAlerts","notification","content","handleClose","formControl","width","chips","display","flexWrap","chip","noLabel","marginTop","button","datatypes","DefineColumnDialog","errorMessage","setName","dataType","setDataType","setNullable","setDefaultValue","datatype","DialogContentText","Typography","variant","TextField","autoFocus","fullWidth","select","option","MenuItem","HttpHelper","userService","this","http","axios","create","setResponseInterceptor","interceptors","response","use","error","status","Promise","reject","url","data","post","method","DefinitionService","table","prefix","localStorage","getItem","httpHelper","onSuccess","onFailure","then","res","catch","AddColumn","definitionService","setError","addColumn","console","log","QueryService","get","ManipulationService","copyOfRows","newRow","Object","keys","forEach","splice","oldRow","updateLocal","row","SavageTable","queryService","manipulationService","setRows","columnFilter","setColumns","setNotifications","insertedRows","setInsertedRows","errorRows","setErrorRows","addColumnDialogOpen","setAddColumnDialogOpen","addNotification","removeErrorsForRow","er","r","addErrorRow","loadTableRows","getRowSet","reloadSchema","getSchema","addRow","useEffect","concat","reverse","justify","minHeight","CircularProgress","c","update","rId","delete","resultingRows","irs","ir","save","dropColumn","old","renameColumn","curr","DatabaseService","db","DatabaseSelect","configureService","onSelect","databases","setDatabases","database","setDatabase","loadingAvailableDatabases","setLoadingAvailableDatabases","initialValue","setInitialValue","loadingError","setLoadingError","listAllDatabases","val","FormControl","minWidth","InputLabel","htmlFor","NativeSelect","labelId","changeDatabases","setItem","d","TabPanel","children","other","role","hidden","Box","Tables","tables","setTables","loading","setLoading","React","setValue","getTables","window","location","reload","AppBar","borderBottom","Toolbar","marginRight","Tabs","selectionFollowsFocus","event","newValue","indicatorColor","textColor","scrollButtons","Tab","a11yProps","Contact","Configure","noWrap","Divider","RoutedComponent","exact","path","component","drawerWidth","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","grey","borderRight","drawerClose","breakpoints","up","toolbar","justifyContent","mixins","AppLayout","useTheme","setOpen","CssBaseline","clsx","edge","Drawer","List","link","HomeIcon","StorageIcon","SettingsIcon","InfoIcon","ListElement","TheIcon","ListItem","Link","to","ListItemIcon","ListItemText","primary","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d4b8e12.chunk.js","sourcesContent":["import { Card } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{margin: \"1em\"}}>\r\n        <h2>Home</h2>\r\n        <CenteredGrid />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction CenteredGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            Cool stuff will come here\r\n            </Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>Cool stuff coming in here too</Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>More cool stuff</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Cool stuff will arrive soon</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Stand by for cool stuff</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Are you cool? The stuff coming here will be.</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>Cool.</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","import DataGrid, { TextEditor, Row as GridRow } from \"react-data-grid\";\r\nimport React, { useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport './react-contextmenu.css'\r\nimport './highlight.css'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport TextFormatIcon from '@material-ui/icons/TextFormat';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport { Delete, Filter } from \"@material-ui/icons\";\r\n\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.white,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 12,\r\n    },\r\n}))(Tooltip);\r\n\r\nconst DataGridTable = (props) => {\r\n    const [selectedColumn, setSelectedColumn] = useState(null)\r\n    const [selectedRow, setSelectedRow] = useState(null)\r\n    const [openColumnFilter, setOpenColumnFilter] = useState(false)\r\n    const [columnFilters, setColumnFilters] = useState([])\r\n    const [rerender, setRerender] = useState(false)\r\n\r\n    var rows = [...props.rows]\r\n    const onRowChange = props.onRowChange\r\n    const highlightedRows = props.highlightRows ? props.highlightRows : []\r\n    var changingColumnName = null\r\n\r\n    const HeaderRenderer = (item) => {\r\n        return (\r\n            <ContextMenuTrigger\r\n                id=\"header-context-menu\"\r\n                collect={() => {\r\n                    setSelectedColumn(item.column.name)\r\n                    return ({ column: item.column.key })\r\n                }}\r\n                holdToDisplay=\"-1\"\r\n            >\r\n                <InputBase\r\n                    inputProps={{ 'aria-label': 'naked' }}\r\n                    autoComplete='off'\r\n                    id=\"name\"\r\n                    onChange={(e) => { changingColumnName = e.target.value }}\r\n                    defaultValue={item.column.name}\r\n                    value={changingColumnName}\r\n                    onBlur={() => {\r\n                        if(changingColumnName != null) onColumnRename(item.column.name, changingColumnName) }}\r\n                    required\r\n                    style={{ fontSize: \"1em\", fontWeight: \"bold\" }}\r\n                />\r\n            </ContextMenuTrigger>\r\n        )\r\n\r\n    }\r\n\r\n    const RowRenderer = (props) => {\r\n        var classname = \"row\"\r\n        var rowTooltip = \"\"\r\n\r\n        var highlightedRow = highlightedRows.find(hr => hr.id == props.rowIdx)\r\n        if (highlightedRow != undefined) {\r\n            rowTooltip = highlightedRow.message\r\n            classname = highlightedRow.type === \"warning\" ? \"row-warning\" : \"row-error\"\r\n        }\r\n\r\n        return (\r\n            <ContextMenuTrigger id=\"grid-context-menu\" collect={() => {\r\n                setSelectedRow(props.rowIdx)\r\n                return ({ rowIdx: props.rowIdx })\r\n            }}\r\n                holdToDisplay=\"-1\"\r\n            >\r\n                {highlightedRow == undefined ?\r\n                    <GridRow {...props} className={classname} />\r\n                    :\r\n                    <LightTooltip\r\n                        title={rowTooltip}\r\n                        enterDelay={1000}\r\n                        enterNextDelay={1000}\r\n                        interactive\r\n                        placement=\"bottom-start\"\r\n                        arrow\r\n                    >\r\n                        <GridRow {...props} className={classname} />\r\n                    </LightTooltip>\r\n                }\r\n            </ContextMenuTrigger>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    const columns = props.columns.map(col => ({\r\n        key: col.column,\r\n        name: col.column,\r\n        headerRenderer: HeaderRenderer,\r\n        resizable: true,\r\n        nullable: col.nullable,\r\n        editor: col.editable ? TextEditor : undefined\r\n    }));\r\n\r\n\r\n    const onRowDelete = (e, { rowIdx }) => props.onDelete(rowIdx)\r\n    const onRowInsert = (e, { rowIdx }) => props.onInsert(rowIdx)\r\n    const onRowSave = (e, { rowIdx }) => props.onSave(rowIdx)\r\n    const onRefresh = (e, { rowIdx }) => props.onRefresh(rowIdx)\r\n    const onColumnDelete = (e, { column }) => props.onColumnDelete(column)\r\n    const onColumnRename = (oldName, newName) => props.onColumnRename(oldName, newName)\r\n    const onColumnInsert = (e, { column }) => props.onColumnInsert(column)\r\n    const onColumnFilter = (e) => setOpenColumnFilter(true)\r\n\r\n\r\n\r\n    const rowContextMenu = [\r\n        { text: \"Save Row\", icon: PublishIcon, onClick: onRowSave },\r\n        { text: \"Delete Row\", icon: DeleteIcon, onClick: onRowDelete },\r\n        { text: \"Insert Row\", icon: AddIcon, onClick: onRowInsert, dividerAfter: true },\r\n        { text: \"Refresh Table\", icon: RefreshIcon, onClick: onRefresh },\r\n    ]\r\n\r\n    const columnContextMenu = [\r\n        { text: \"Delete Column\", icon: Delete, onClick: onColumnDelete },\r\n        { text: \"Rename Column\", icon: TextFormatIcon, onClick: onColumnRename, dividerAfter: true },\r\n        { text: \"Add Column\", icon: AddIcon, onClick: onColumnInsert, dividerAfter: true },\r\n        { text: \"Show/Hide Columns\", icon: FilterListIcon, onClick: onColumnFilter },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <DataGrid\r\n                columns={columnFilters.length > 0 ? columns.filter(f => columnFilters.includes(f.name)) : columns}\r\n                rows={rows}\r\n                onRowsChange={(updatedRows, index) => {\r\n                    var idx = index.indexes[0]\r\n                    rows[idx] = updatedRows[idx]\r\n                    onRowChange(updatedRows[idx], idx)\r\n                }}\r\n                rowGetter={i => rows[i]}\r\n                enableCellSelect={true}\r\n                rowRenderer={RowRenderer}\r\n                headerRenderer={HeaderRenderer}\r\n                style={{ height: \"60vh\", overflowX: 'hidden' }}\r\n            />\r\n\r\n            <TableContextMenu\r\n                id=\"grid-context-menu\"\r\n                title={\"Row \" + selectedRow}\r\n                items={rowContextMenu}\r\n            />\r\n\r\n            <TableContextMenu\r\n                id=\"header-context-menu\"\r\n                title={selectedColumn}\r\n                items={columnContextMenu}\r\n            />\r\n\r\n            <HideColumnsPopup\r\n                open={openColumnFilter}\r\n                values={columns.map(col => col.name)}\r\n                selection={columnFilters}\r\n                onApply={(i) => { setColumnFilters(i); setOpenColumnFilter(false) }}\r\n                onCancel={() => setOpenColumnFilter(false)}\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nfunction TableContextMenu(props) {\r\n    const { title, id, items } = props\r\n\r\n    return (\r\n        <ContextMenu\r\n            id={id}\r\n            style={{ background: \"#fafafa\", borderRadius: \"0px 30px 0px 0px\", boxShadow: \"2px 2px  5px grey\" }}\r\n        >\r\n            <MenuItem disabled><b>{title}</b></MenuItem>\r\n            <MenuItem divider />\r\n            {items.map(item => (<ContextMenuItem onClick={item.onClick} text={item.text} icon={item.icon} dividerAfter={item.dividerAfter} />))}\r\n        </ContextMenu>\r\n    )\r\n}\r\n\r\nfunction ContextMenuItem(props) {\r\n    const { onClick, text, dividerAfter } = props\r\n    const MenuIcon = props.icon\r\n\r\n    return (\r\n        <>\r\n            <MenuItem onClick={onClick} >\r\n                <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                    <Grid item>\r\n                        <MenuIcon fontSize=\"small\" style={{ position: 'relative', top: '2px' }} />\r\n                    </Grid>\r\n                    <Grid item>{text}</Grid>\r\n                </Grid>\r\n            </MenuItem>\r\n            {dividerAfter && <MenuItem divider />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction HideColumnsPopup(props) {\r\n    const { open, values, onApply, onCancel } = props\r\n    const initialSelection = props.selection\r\n    const [selection, setSelection] = useState(props.selection)\r\n\r\n    const onEnter = (e) => {\r\n        e.preventDefault()\r\n        onApply(selection)\r\n    }\r\n\r\n    const cancel = (e) => {\r\n        setSelection(initialSelection)\r\n        onCancel()\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} aria-labelledby=\"form-dialog-title\" onClose={cancel}>\r\n                <form onSubmit={onEnter}>\r\n\r\n                    <DialogTitle id=\"form-dialog-title\">Show/Hide Columns</DialogTitle>\r\n                    <DialogContent>\r\n                        <Grid container direction=\"column\">\r\n                            {values.map(v => (\r\n                                <Grid item>\r\n                                    <FormControlLabel\r\n                                        label={v}\r\n                                        control={\r\n                                            <Checkbox\r\n                                                checked={selection.includes(v)}\r\n                                                onChange={(e) => {\r\n                                                    if (e.target.checked && !selection.includes(v)) {\r\n                                                        setSelection(s => [...s, v])\r\n                                                    } else if (!e.target.checked && selection.includes(v)) {\r\n                                                        const i = selection.indexOf(v)\r\n                                                        setSelection(s => [...s.slice(0, i), ...s.slice(i + 1)])\r\n                                                    }\r\n                                                }}\r\n                                                name={v}\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" type=\"submit\">Apply</Button>\r\n                        <Button onClick={() => setSelection([])} color=\"primary\">Clear</Button>\r\n                    </DialogActions>\r\n                </form>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\nexport default DataGridTable","import React, { Component } from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default function CollapsableAlert(props) {\r\n    return <Collapse in={props.shouldShow ?  props.shouldShow : true} style={{ marginBottom: \"0.5em\" }}>\r\n    <Alert\r\n        severity={ props.severity}\r\n        action={ props.onClose ?\r\n            <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={ props.onClose}\r\n            >\r\n                <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n            : undefined}\r\n    >\r\n        { props.message}\r\n    </Alert>\r\n</Collapse>;\r\n}\r\n","import React, { Component, useEffect, useState } from 'react';\r\nimport CollapsableAlert from '../CollapsableAlert/CollapsableAlert'\r\n\r\nconst NotificationArea = (props) => {\r\n    const notifications = props.notifications\r\n    if (notifications.length == 0) {\r\n      return null\r\n    }\r\n  \r\n    const notificationAlerts = notifications.map(notification =>\r\n      (<CollapsableAlert severity={notification.severity} message={notification.content} onClose={() => props.handleClose(notifications.indexOf(notification))} />)\r\n    )\r\n  \r\n  \r\n  \r\n    return (\r\n      <div>\r\n        {notificationAlerts}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default NotificationArea","import React from \"react\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Button, Container, Grid, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(0.5),\r\n        width: \"100%\",\r\n        // maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n\r\n    button: {\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\"\r\n        }\r\n    }\r\n\r\n}));\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.white,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 12,\r\n    },\r\n}))(Tooltip);\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    anchorOrigin: {\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\"\r\n    },\r\n    transformOrigin: {\r\n        vertical: \"top\",\r\n        horizontal: \"left\"\r\n    },\r\n    getContentAnchorEl: null,\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 10 + ITEM_PADDING_TOP,\r\n            width: 200,\r\n        },\r\n\r\n    }\r\n};\r\n\r\n\r\nconst MultiSelect = (props) => {\r\n    const classes = useStyles();\r\n    const { placeholder, onChange, options } = props;\r\n    const [selection, setSelection] = React.useState([]);\r\n\r\n    const onChangeSelection = (event) => {\r\n        setSelection(event.target.value)\r\n        onChange(event.target.value)\r\n    }\r\n\r\n    const clear = () => {\r\n        setSelection([])\r\n        onChange([])\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"row\" alignItems=\"center\" justify=\"left\" wrap=\"nowrap\">\r\n\r\n            <Grid item xs={9}>\r\n\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-mutiple-checkbox-label\">{placeholder}</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-mutiple-checkbox-label\"\r\n                        id=\"demo-mutiple-checkbox\"\r\n                        multiple\r\n                        value={selection}\r\n                        onChange={onChangeSelection}\r\n                        input={<Input />}\r\n                        renderValue={(selected) => selected.join(', ')}\r\n                        MenuProps={MenuProps}\r\n                    >\r\n                        <MenuItem disabled value=\"\">\r\n                            <em>{placeholder}</em>\r\n                        </MenuItem>\r\n                        {options.map((o) => (\r\n                            <MenuItem key={o} value={o}>\r\n                                <Checkbox checked={selection.indexOf(o) > -1} />\r\n                                <ListItemText primary={o} />\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n            </Grid>\r\n\r\n            <Grid item hidden={selection.length == 0}>\r\n                <Button\r\n                    size=\"small\"\r\n                    aria-label=\"delete\"\r\n                    onClick={clear}\r\n                    style={{ marginLeft: \"0.5em\", marginTop: \"1.4em\" }}\r\n                    disableFocusRipple={true}\r\n                    disableRipple\r\n                >\r\n                    <HighlightOffIcon />\r\n                </Button>\r\n            </Grid>\r\n\r\n\r\n\r\n        </Grid >)\r\n}\r\n\r\nexport default MultiSelect","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst datatypes = [\r\n    \"text\",\r\n    \"number\",\r\n]\r\n\r\nexport default function DefineColumnDialog(props) {\r\n    const { open, onSubmit, handleClose, errorMessage } = props\r\n    const [name, setName] = useState(\"\")\r\n    const [dataType, setDataType] = useState(datatypes[0])\r\n    const [nullable, setNullable] = useState(true)\r\n    const [defaultValue, setDefaultValue] = useState(\"\")\r\n\r\n    const onEnter = (e) => {\r\n        e.preventDefault()\r\n        const data = {\r\n            column: name,\r\n            datatype: dataType,\r\n            nullable: nullable,\r\n            defaultValue: defaultValue\r\n        }\r\n\r\n        onSubmit(data)\r\n    }\r\n\r\n    const onClose = () => {\r\n        setName(\"\")\r\n        setDataType(datatypes[0])\r\n        setNullable(true)\r\n        setDefaultValue(\"\")\r\n        handleClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={onClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Define Column</DialogTitle>\r\n                <form onSubmit={onEnter}>\r\n\r\n                    <DialogContent>\r\n\r\n                        <Grid container direction=\"column\" spacing={2}>\r\n                            <DialogContentText>Define the column by entering the fields below.</DialogContentText>\r\n                            {errorMessage && <Typography variant=\"body1\" color=\"error\">{errorMessage}</Typography>}\r\n                            <Grid item>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    autoComplete='off'\r\n                                    margin=\"dense\"\r\n                                    id=\"name\"\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    required\r\n                                    label=\"Column name\"\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField\r\n                                    id=\"datatype\"\r\n                                    select\r\n                                    required\r\n                                    label=\"Datatype\"\r\n                                    value={dataType}\r\n                                    onChange={(e) => setDataType(e.target.value)}\r\n                                >\r\n                                    {datatypes.map((option) => (\r\n                                        <MenuItem key={option} value={option}>\r\n                                            {option}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <FormControlLabel\r\n                                    label=\"Nullable\"\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={nullable}\r\n                                            onChange={(e) => setNullable(e.target.checked)}\r\n                                            name=\"nullable\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n\r\n                                />\r\n                            </Grid>\r\n                            {!nullable &&\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        id=\"default\"\r\n                                        required\r\n                                        label=\"Default\"\r\n                                        type={dataType}\r\n                                        value={defaultValue}\r\n                                        onChange={(e) => setDefaultValue(e.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                            }\r\n\r\n                        </Grid>\r\n\r\n                    </DialogContent>\r\n\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={onClose} color=\"primary\">Cancel</Button>\r\n                        <Button color=\"primary\" type=\"submit\">Submit</Button>\r\n                    </DialogActions>\r\n                </form>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import axios from 'axios';\r\n\r\nclass HttpHelper {\r\n  constructor(userService) {\r\n    this.userService = userService;\r\n    this.http = axios.create();\r\n    this.setResponseInterceptor();\r\n\r\n  }\r\n\r\n  setResponseInterceptor() {\r\n    this.http.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        const { status } = error.response;\r\n        if (status === 401) {\r\n          // Do something\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  post(url, data) {\r\n    return this.http.post(url, data)\r\n  }\r\n\r\n  get(url) {\r\n    return this.http({ method: 'get', url: url })\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default HttpHelper;","import HttpHelper from \"../HttpHelper\";\r\n\r\nclass DefinitionService {\r\n    constructor(table) {\r\n        this.table = table\r\n        this.prefix = `/api/definition/${localStorage.getItem('database')}/${table}`\r\n        this.httpHelper = new HttpHelper();\r\n    }\r\n\r\n    addColumn(data, onSuccess, onFailure) {\r\n        this.httpHelper.post(`${this.prefix}/column/add`, data)\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) });\r\n\r\n    }\r\n\r\n    dropColumn(column, onSuccess, onFailure) {\r\n        this.httpHelper.post(`${this.prefix}/${column}/drop`)\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) });\r\n\r\n    }\r\n\r\n    renameColumn(column, newName, onSuccess, onFailure) {\r\n        this.httpHelper.post(`${this.prefix}/${column}/rename/${newName}`)\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) });\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default DefinitionService;","import DefineColumnDialog from \"../../DefineColumnDialog/DefineColumnDialog\";\r\nimport React, { useState } from 'react';\r\nimport DefinitionService from \"../../../Service/DefinitionService/DefinitionService\";\r\n\r\nexport default function AddColumn(props) {\r\n    const { onSuccess, table, handleClose, open } = props\r\n    const definitionService = new DefinitionService(table)\r\n    const [error, setError] = useState(undefined)\r\n\r\n    const onClose = () => {\r\n        setError(undefined)\r\n        handleClose()\r\n    }\r\n\r\n    const submit = (data) => {\r\n        definitionService.addColumn(data,\r\n            () => {\r\n                onSuccess()\r\n                onClose()\r\n            },\r\n            (e) => { console.log(e); setError(e) })\r\n    }\r\n\r\n    return (\r\n        <DefineColumnDialog\r\n            open={open}\r\n            onSubmit={submit}\r\n            errorMessage={error}\r\n            handleClose={onClose}\r\n        />\r\n    )\r\n}","import HttpHelper from \"../HttpHelper\";\r\n\r\nclass QueryService {\r\n    constructor(table) {\r\n        this.prefix = `/api/query/${localStorage.getItem('database')}/${table}`\r\n        this.httpHelper = new HttpHelper();\r\n    }\r\n\r\n    getRowSet(onSuccess, onFailure) {\r\n        this.httpHelper.get(`${this.prefix}/rows/all`)\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) });\r\n    }\r\n\r\n    getSchema(onSuccess, onFailure) {\r\n        this.httpHelper.get(`${this.prefix}/schema`)\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) })\r\n    }\r\n\r\n    getTables(onSuccess, onFailure) {\r\n        this.httpHelper.get(`/api/query/${localStorage.getItem('database')}/tables`)\r\n        .then(res => { onSuccess(res) })\r\n        .catch(res => { onFailure(res) });\r\n    }\r\n}\r\n\r\nexport default QueryService;","import HttpHelper from \"../HttpHelper\";\r\n\r\nclass ManipulationService {\r\n    constructor(table) {\r\n        this.prefix = `/api/manipulate/${localStorage.getItem('database')}/${table}`\r\n        this.httpHelper = new HttpHelper();\r\n    }\r\n\r\n    addRow(rows, index) {\r\n        var copyOfRows = [...rows]\r\n        var newRow = {}\r\n        Object.keys(rows[0]).forEach(col => { newRow[col] = \"\" })\r\n        copyOfRows.splice(index, 0, newRow)\r\n        return copyOfRows\r\n    }\r\n\r\n\r\n    update(rows, newRow, index, onSuccess, onFailure) {\r\n        this.httpHelper.post(`${this.prefix}/update`, { oldRow: rows[index], newRow: newRow })\r\n            .then(() => onSuccess(this.updateLocal(rows, newRow, index)))\r\n            .catch((data) => onFailure(data.response.data));\r\n    }\r\n\r\n    updateLocal(rows, newRow, index) {\r\n        var copyOfRows = [...rows]\r\n        copyOfRows[index] = newRow\r\n        return copyOfRows\r\n    }\r\n\r\n    delete(rows, index, onSuccess, onFailure) {\r\n        this.httpHelper.post(`${this.prefix}/delete`, { row: rows[index] })\r\n            .then(() => {\r\n                var copyOfRows = [...rows]\r\n                copyOfRows.splice(index, 1)\r\n                onSuccess(copyOfRows)\r\n            })\r\n            .catch(res => onFailure(res.response.data));\r\n    }\r\n\r\n    save(rows, index, onSuccess, onFailure) {\r\n        this.httpHelper.post(`${this.prefix}/add`, { row: rows[index] })\r\n            .then(res => {\r\n                var copyOfRows = [...rows]\r\n                copyOfRows[index] = res.data.row\r\n                onSuccess(copyOfRows)\r\n            })\r\n            .catch(res => onFailure(res.response.data));\r\n    }\r\n}\r\nexport default ManipulationService","import React, { Component, useEffect, useState } from 'react';\r\nimport DataGridTable from './DataGrid/DataGridTable';\r\nimport NotificationArea from '../NotificationArea/NotificationArea';\r\nimport DataGridControlBar from './DataGridControlBar/DataGridControlBar';\r\nimport AddColumn from './AddColumn/AddColumn';\r\nimport QueryService from '../../Service/QueryService/QueryService';\r\nimport DefinitionService from '../../Service/DefinitionService/DefinitionService';\r\nimport ManipulationService from '../../Service/ManipulationService/ManipulationService';\r\nimport { Box, CircularProgress, Grid } from '@material-ui/core';\r\nconst SavageTable = (props) => {\r\n\r\n  const queryService = new QueryService(props.table)\r\n  const definitionService = new DefinitionService(props.table)\r\n  const manipulationService = new ManipulationService(props.table)\r\n  const [rows, setRows] = useState([])\r\n  const [columnFilter, setColumnFilter] = useState([])\r\n  const [columns, setColumns] = useState([])\r\n  const [notifications, setNotifications] = useState([])\r\n  const [insertedRows, setInsertedRows] = useState([])\r\n  const [errorRows, setErrorRows] = useState([])\r\n  const [addColumnDialogOpen, setAddColumnDialogOpen] = useState(false)\r\n\r\n\r\n  const addNotification = (content, severity) => {\r\n    const notification = { content: content, severity: severity }\r\n    setNotifications(notifications => [...notifications, notification])\r\n  }\r\n\r\n  const removeErrorsForRow = id => {\r\n    setErrorRows(er => er.filter(r => r.id != id))\r\n  }\r\n\r\n  const addErrorRow = (id, message) => {\r\n    const error = { id: id, message: message }\r\n    removeErrorsForRow(id)\r\n    setErrorRows(er => [...er, error])\r\n  }\r\n\r\n  const loadTableRows = () => {\r\n    setInsertedRows([])\r\n    setErrorRows([])    \r\n    setNotifications([])\r\n    queryService.getRowSet(data => setRows(data.data.rows), () => addNotification(\"Unable to fetch table rows for database: \" + localStorage.getItem(\"database\"), \"error\"))\r\n  }\r\n\r\n  const reloadSchema = () => {\r\n    queryService.getSchema(data => { setColumns(data.data.columns) }, () => addNotification(\"Unable to fetch table schema\", \"error\"))\r\n    queryService.getRowSet(data => { \r\n      if(insertedRows.length > 0) insertedRows.forEach(i => setRows(manipulationService.addRow(data.data.rows, i))) \r\n      else setRows(data.data.rows)\r\n    }, () => addNotification(\"Unable to fetch table rows for database: \" + localStorage.getItem(\"database\"), \"error\"))\r\n\r\n  }\r\n\r\n  const insertAction = (rId) => {\r\n    rId = rId + 1\r\n\r\n    setInsertedRows(irs => [...irs.map(ir => ir >= rId ? ir + 1 : ir), rId])\r\n    setRows(manipulationService.addRow(rows, rId))\r\n    setErrorRows([])\r\n  }\r\n\r\n  const deleteAction = (rId) => {\r\n    manipulationService.delete(rows, rId, (resultingRows) => {\r\n      setInsertedRows(irs => irs.filter(r => r != rId).map(ir => ir > rId ? ir - 1 : ir))\r\n      setRows(resultingRows)\r\n      setErrorRows([])\r\n    }, (e) => addErrorRow(rId, e))\r\n  }\r\n\r\n  const saveAction = (rId) => {\r\n    if (insertedRows.indexOf(rId) == -1) return\r\n\r\n    manipulationService.save(rows, rId, (resultingRows) => {\r\n      setRows(resultingRows)\r\n      setInsertedRows(irs => irs.filter(r => r != rId))\r\n      removeErrorsForRow(rId)\r\n    }, (e) => addErrorRow(rId, \" Error saving the row: \" + e))\r\n  }\r\n\r\n  const handleRowChange = (newRow, index) => {\r\n    if (insertedRows.indexOf(index) == -1)\r\n      manipulationService.update(rows, newRow, index, (rows) => {\r\n        setRows(rows)\r\n        removeErrorsForRow(index)\r\n      }, (e) => {\r\n        addErrorRow(index, \" Error updating row: \" + e)\r\n        console.log(e)\r\n      })\r\n    else\r\n      setRows(manipulationService.updateLocal(rows, newRow, index))\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTableRows()\r\n    queryService.getSchema(data => setColumns(data.data.columns), () => addNotification(\"Unable to fetch table schema\", \"error\"))\r\n  }, [])\r\n\r\n\r\n  var highlightedRows = []\r\n\r\n  if (errorRows.length > 0) highlightedRows = highlightedRows.concat(errorRows.slice(0).reverse().map(er => { return { id: er.id, message: er.message, type: \"error\" } }))\r\n  if (insertedRows.length > 0) highlightedRows = highlightedRows.concat(insertedRows.map(i => { return { id: i, message: \"This row is not saved\", type: \"warning\" } }))\r\n\r\n\r\n  if (columns.length == 0) {\r\n    return (\r\n      <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\" style={{ minHeight: '100vh' }}>\r\n        <Grid item xs={3}>\r\n          <CircularProgress />\r\n        </Grid>\r\n\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DataGridTable\r\n\r\n        rows={rows}\r\n        columns={columnFilter.length > 0 ? columns.filter(c => columnFilter.includes(c.column)) : columns}\r\n        highlightRows={highlightedRows}\r\n        onRowChange={handleRowChange}\r\n        onDelete={deleteAction}\r\n        onInsert={(idx) => insertAction(idx, true)}\r\n        onSave={saveAction}\r\n        onRefresh={loadTableRows}\r\n        onColumnDelete={(col) => definitionService.dropColumn(col, () => setColumns(columns => columns.filter(c => c.column != col)), (e) => addNotification(e.message, \"error\"))}\r\n        onColumnRename={(old, newName) => definitionService.renameColumn(old, newName, () => reloadSchema(), (e) => addNotification(e.message, \"error\"))}\r\n        onColumnInsert={() => setAddColumnDialogOpen(true)}\r\n      />\r\n      <NotificationArea\r\n        notifications={notifications}\r\n        handleClose={(index) => setNotifications(curr => curr.filter((notifications, i) => i !== index))}\r\n      />\r\n      <AddColumn open={addColumnDialogOpen} table={props.table} handleClose={() => setAddColumnDialogOpen(false)} onSuccess={reloadSchema} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SavageTable","import HttpHelper from './HttpHelper';\r\n\r\nclass DatabaseService {\r\n    constructor() {\r\n        this.httpHelper = new HttpHelper()\r\n    }\r\n\r\n    changeDatabases(db, onSuccess, onFailure) {\r\n        this.httpHelper.post('/api/database/set/' + db, {})\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) });\r\n\r\n    }\r\n\r\n    listAllDatabases(onSuccess, onFailure) {\r\n        this.httpHelper.get('/api/database/all')\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) });\r\n\r\n    }\r\n\r\n    getCurrentDatabase(onSuccess, onFailure) {\r\n        this.httpHelper.get('/api/database/current')\r\n            .then(res => { onSuccess(res) })\r\n            .catch(res => { onFailure(res) });\r\n\r\n    }\r\n}\r\n\r\nexport default DatabaseService;","import React, { Component, useEffect, useState } from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { CircularProgress, Divider } from \"@material-ui/core\";\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport CollapsableAlert from \"../CollapsableAlert/CollapsableAlert\";\r\nimport DatabaseService from \"../../Service/ConfigureService\";\r\n\r\n\r\nexport default function DatabaseSelect(props) {\r\n    const configureService = new DatabaseService()\r\n    const onSelect = props.onSelect\r\n    const [databases, setDatabases] = useState([])\r\n    const [database, setDatabase] = useState(undefined)\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [loadingAvailableDatabases, setLoadingAvailableDatabases] = useState(true)\r\n    const [initialValue, setInitialValue] = useState(null)\r\n    const [loadingError, setLoadingError] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setInitialValue(props.initialValue)\r\n\r\n        configureService.listAllDatabases(\r\n            function (data) {\r\n                setDatabases(data.data)\r\n                setLoadingAvailableDatabases(false)\r\n            },\r\n            function (data) {\r\n                setLoadingAvailableDatabases(false)\r\n                setLoadingError(true)\r\n            });\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        var db = e.target.value\r\n        configureService.changeDatabases(\r\n            db,\r\n            () => {\r\n                localStorage.setItem('database', db);\r\n                setDatabase(db)\r\n                if (onSelect) onSelect()\r\n            },\r\n            undefined\r\n        );\r\n    }\r\n\r\n    if (loadingAvailableDatabases) {\r\n        return (<CircularProgress />)\r\n    } else if (loadingError) {\r\n        return (<CollapsableAlert severity=\"warning\" message=\"Unable to fetch available databases. Check database connection.\" />)\r\n    }\r\n\r\n    var val = database ? database : initialValue ? initialValue : \"\"\r\n    return (\r\n\r\n        <FormControl style={{ margin: 1, minWidth: 120 }}>\r\n            <InputLabel htmlFor=\"demo-customized-select-native\">Database</InputLabel>\r\n            <NativeSelect\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={val}\r\n                onChange={handleChange}\r\n            >\r\n                <option aria-label=\"None\" value=\"\" />\r\n\r\n                {databases.map(d => (\r\n                    <option value={d}>{d}</option>\r\n                ))}\r\n\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n\r\n}\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport SavageTable from \"../Components/Table/Table\";\r\nimport { Button, Toolbar } from \"@material-ui/core\";\r\nimport CollapsableAlert from \"../Components/CollapsableAlert/CollapsableAlert\";\r\nimport DatabaseSelect from \"../Components/DatabaseSelect/DatabaseSelect\";\r\nimport QueryService from \"../Service/QueryService/QueryService\";\r\n\r\nconst Tables = (props) => {\r\n  const classes = useStyles();\r\n  const database = localStorage.getItem(\"database\")\r\n  const [tables, setTables] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    new QueryService().getTables(\r\n      (data) => {\r\n        setTables(data.data)\r\n        setLoading(false)\r\n      },\r\n      () => {\r\n        setLoading(true)\r\n        setError(true)\r\n      })\r\n  }, [])\r\n\r\n\r\n\r\n  if (loading) {\r\n    return (<></>)\r\n  }\r\n\r\n  if (database == null) return (\r\n    <div>\r\n      <Typography style={{ marginBottom: \"2em\" }}>No database is selected. Please select a database</Typography>\r\n      <DatabaseSelect onSelect={() => window.location.reload(false)} />\r\n    </div>\r\n  )\r\n  if (error) {\r\n    return (<CollapsableAlert severity=\"error\" message={\"Error while retrieving tables for database: \" + database} />)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <AppBar position=\"static\" color=\"default\" style={{ padding: \"0.5em\", borderBottom: \"1px solid grey\" }}>\r\n        <Toolbar >\r\n          <Typography variant=\"h6\" color=\"primary\" style={{ marginRight: \"1em\", fontWeight: \"bold\" }}>\r\n            {database}\r\n          </Typography>\r\n          <Tabs\r\n            selectionFollowsFocus\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"secundary\"\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            aria-label=\"scrollable auto tabs example\"\r\n          >\r\n            {tables.map((table, index) => (\r\n              <Tab label={table} {...a11yProps(index)} />\r\n            ))}\r\n\r\n          </Tabs>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {tables.map((table, index) => (\r\n        <TabPanel value={value} index={index}  >\r\n          <SavageTable table={table} />\r\n        </TabPanel>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n\r\n  },\r\n}));\r\n\r\nexport default Tables;","import React, { Component } from \"react\";\r\n \r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>GOT QUESTIONS?</h2>\r\n        <p>Stand by..</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Contact;\r\n","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CircularProgress, Divider } from \"@material-ui/core\";\r\nimport DatabaseSelect from \"../Components/DatabaseSelect/DatabaseSelect\";\r\nimport ConfigureService from \"../Service/ConfigureService\";\r\n\r\n\r\n\r\nexport default function Configure(props) {\r\n\r\n    return (\r\n        <div style={{margin: '1em'}}>\r\n            <Typography variant=\"h6\" noWrap>Configure Database</Typography>\r\n            <Divider style={{ marginBottom: \"2em\" }} />\r\n            <DatabaseSelect initialValue={localStorage.getItem(\"database\")} />\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport Home from \"../Views/Home\";\r\nimport Tables from \"../Views/Tables\";\r\nimport Contact from \"../Views/Contact\";\r\nimport Configure from \"../Views/ConfigureSavageRow\";\r\n\r\nclass RoutedComponent extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route path=\"/tables\" component={Tables} />\r\n                <Route path=\"/contact\" component={Contact} />\r\n                <Route path=\"/configuration\" component={Configure} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RoutedComponent;\r\n\r\n","import React, { Component } from \"react\";\r\nimport clsx from 'clsx';\r\nimport { makeStyles, rgbToHex, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport RoutedComponent from \"./RoutedComponent\";\r\nimport { grey, red } from \"@material-ui/core/colors\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    backgroundColor: grey[200],\r\n\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    borderRight: \"1px solid grey\"\r\n  },\r\n\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n    backgroundColor: grey[200],\r\n    borderRight: \"1px solid grey\"\r\n\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: theme.spacing(0, 1, 0, 3),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    width: \"80%\",\r\n    height: \"100vh\",\r\n    padding: theme.spacing(0),\r\n    backgroundColor: '#FFFFFF'\r\n  },\r\n}));\r\n\r\nexport default function AppLayout() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            SavageRow\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <Typography variant=\"h6\" noWrap >\r\n            Menu\r\n          </Typography>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListElement link=\"/\" text=\"Home\" icon={HomeIcon} />\r\n          <ListElement link=\"/tables\" text=\"Tables\" icon={StorageIcon} />\r\n          <ListElement link=\"/configuration\" text=\"Configuration\" icon={SettingsIcon} />\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <ListElement link=\"/contact\" text=\"Contact\" icon={InfoIcon} />\r\n        </List>\r\n      </Drawer>\r\n\r\n      <main className={classes.content} >\r\n\r\n        <div className={classes.toolbar} />\r\n        <RoutedComponent />\r\n\r\n      </main>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ListElement = (props) => {\r\n  const TheIcon = props.icon;\r\n\r\n  return (\r\n    <ListItem component={Link} to={props.link} button key={props.text}>\r\n      <ListItemIcon><TheIcon /></ListItemIcon>\r\n      <ListItemText primary={props.text} />\r\n    </ListItem>\r\n  )\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport AppLayout from \"./Layout/AppLayout\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <AppLayout/>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Main from \"./Main\";\r\n \r\nReactDOM.render(\r\n  <Main/>, \r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}